// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Storyshots Container|Form default 1`] = `
<div>
  <div
    id="story-root"
    style={Object {}}
  >
    <div
      className="nature-graphic"
    >
      <form
        className="css-lzdszq-StyledForm e14k7phy0"
      >
        <fieldset
          className=" e1mok13u0 css-y3sy5r-StyledFieldSet-StyledSlider e6tavoy0"
          disabled={false}
        >
          <label
            className="bold"
            htmlFor="slider"
          >
            Choose a year to display:
          </label>
          <output
            htmlFor="slider"
          >
            1980
          </output>
          <input
            aria-valuemax={2019}
            aria-valuemin={1980}
            aria-valuenow={1980}
            id="slider"
            list="list-slider"
            max={2019}
            min={1980}
            onChange={[Function]}
            step="1"
            type="range"
            value={1980}
          />
          <datalist
            id="list-slider"
          >
            <option
              value={1980}
            />
            <option
              value={1981}
            />
            <option
              value={1982}
            />
            <option
              value={1983}
            />
            <option
              value={1984}
            />
            <option
              value={1985}
            />
            <option
              value={1986}
            />
            <option
              value={1987}
            />
            <option
              value={1988}
            />
            <option
              value={1989}
            />
            <option
              value={1990}
            />
            <option
              value={1991}
            />
            <option
              value={1992}
            />
            <option
              value={1993}
            />
            <option
              value={1994}
            />
            <option
              value={1995}
            />
            <option
              value={1996}
            />
            <option
              value={1997}
            />
            <option
              value={1998}
            />
            <option
              value={1999}
            />
            <option
              value={2000}
            />
            <option
              value={2001}
            />
            <option
              value={2002}
            />
            <option
              value={2003}
            />
            <option
              value={2004}
            />
            <option
              value={2005}
            />
            <option
              value={2006}
            />
            <option
              value={2007}
            />
            <option
              value={2008}
            />
            <option
              value={2009}
            />
            <option
              value={2010}
            />
            <option
              value={2011}
            />
            <option
              value={2012}
            />
            <option
              value={2013}
            />
            <option
              value={2014}
            />
            <option
              value={2015}
            />
            <option
              value={2016}
            />
            <option
              value={2017}
            />
            <option
              value={2018}
            />
            <option
              value={2019}
            />
          </datalist>
        </fieldset>
        <fieldset
          className=" etpmmkk0 css-1f2nrw6-StyledFieldSet-StyledDropdown e6tavoy0"
          disabled={false}
        >
          <label
            className="bold"
            htmlFor="drop-down"
          >
            Select an option:
          </label>
          <select
            id="drop-down"
            onChange={[Function]}
            value="value-1"
          >
            <option
              value="value-1"
            >
              Option 1
            </option>
            <option
              value="value-2"
            >
              Option 2
            </option>
            <option
              value="value-3"
            >
              Option 3
            </option>
            <option
              value="value-4"
            >
              Option 4
            </option>
            <option
              value="value-5"
            >
              Option 5
            </option>
            <option
              value="value-6"
            >
              Option 6
            </option>
            <option
              value="value-7"
            >
              Option 7
            </option>
          </select>
        </fieldset>
        <fieldset
          className=" e1bcox9e0 css-h85td1-StyledFieldSet-StyledToggelButtons e6tavoy0"
          disabled={false}
        >
          <legend
            className="bold"
            id="toggle-buttons"
          >
            Choose an option below:
          </legend>
          <div
            aria-labelledby="toggle-buttons"
            className="radiogroup"
            role="radiogroup"
          >
            <input
              aria-checked={true}
              checked={true}
              id="show-cases"
              name="toggle-buttons"
              onChange={[Function]}
              type="radio"
              value="show-cases"
            />
            <label
              htmlFor="show-cases"
            >
              Show cases
            </label>
            <input
              aria-checked={false}
              checked={false}
              id="show-vaccinations"
              name="toggle-buttons"
              onChange={[Function]}
              type="radio"
              value="show-vaccinations"
            />
            <label
              htmlFor="show-vaccinations"
            >
              Show vaccinations
            </label>
          </div>
        </fieldset>
        <button
          aria-expanded={false}
          className="reveal css-i7b429-ButtonStyled e1jkbne80"
          onClick={[Function]}
          type="button"
        >
          Show
        </button>
      </form>
    </div>
  </div>
  <div>
    <div
      style={
        Object {
          "backgroundColor": "#fff",
          "border": "1px solid #eee",
          "borderRadius": "2px",
          "color": "black",
          "fontFamily": "Helvetica Neue, Helvetica, Segoe UI, Arial, freesans, sans-serif",
          "fontSize": "15px",
          "fontWeight": 300,
          "lineHeight": 1.45,
          "marginBottom": "20px",
          "marginTop": "20px",
          "padding": "20px 40px 40px",
        }
      }
    >
      
      <div>
        <h1
          style={
            Object {
              "borderBottom": "1px solid #EEE",
              "fontSize": "25px",
              "margin": "20px 0 0 0",
              "padding": "0 0 5px 0",
            }
          }
        >
          Prop Types
        </h1>
        <div>
          <h3
            style={
              Object {
                "margin": "20px 0 0 0",
              }
            }
          >
            "
            State
            " Component
          </h3>
          <small>
            No propTypes defined!
          </small>
        </div>
        <div>
          <h3
            style={
              Object {
                "margin": "20px 0 0 0",
              }
            }
          >
            "
            ThemeProvider
            " Component
          </h3>
          <small>
            No propTypes defined!
          </small>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Presentational|Chart/Components/Background box default 1`] = `
<div
  className="nature-graphic"
>
  <svg
    aria-hidden={true}
    focusable={false}
    height="300px"
    viewBox="0 0 600 300"
    width="600px"
  >
    <rect
      fill="#ffffff"
      height="260px"
      width="560px"
      x="20px"
      y="20px"
    />
  </svg>
</div>
`;

exports[`Storyshots Presentational|Chart/Components/Bars default 1`] = `
<div
  className="nature-graphic"
>
  <svg
    aria-hidden={true}
    focusable={false}
    height="300px"
    viewBox="0 0 600 300"
    width="600px"
  >
    <g
      transform="translate(20,20)"
    >
      <rect
        fill="#EA5153"
        height={23}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        opacity={1}
        width={23.47826086956522}
        x={0}
        y={237}
      />
      <rect
        fill="#EA5153"
        height={24.80000000000001}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        opacity={1}
        width={23.47826086956522}
        x={46.95652173913044}
        y={235.2}
      />
      <rect
        fill="#EA5153"
        height={26.599999999999994}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        opacity={1}
        width={23.47826086956522}
        x={93.91304347826087}
        y={233.4}
      />
      <rect
        fill="#EA5153"
        height={30.19999999999999}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        opacity={1}
        width={23.47826086956522}
        x={140.8695652173913}
        y={229.8}
      />
      <rect
        fill="#EA5153"
        height={35}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        opacity={1}
        width={23.47826086956522}
        x={187.82608695652175}
        y={225}
      />
      <rect
        fill="#EA5153"
        height={42.80000000000001}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        opacity={1}
        width={23.47826086956522}
        x={234.7826086956522}
        y={217.2}
      />
      <rect
        fill="#EA5153"
        height={54.19999999999999}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        opacity={1}
        width={23.47826086956522}
        x={281.7391304347826}
        y={205.8}
      />
      <rect
        fill="#EA5153"
        height={71}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        opacity={1}
        width={23.47826086956522}
        x={328.69565217391306}
        y={189}
      />
      <rect
        fill="#EA5153"
        height={96.80000000000001}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        opacity={1}
        width={23.47826086956522}
        x={375.6521739130435}
        y={163.2}
      />
      <rect
        fill="#EA5153"
        height={135.2}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        opacity={1}
        width={23.47826086956522}
        x={422.60869565217394}
        y={124.80000000000001}
      />
      <rect
        fill="#EA5153"
        height={192.79999999999998}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        opacity={1}
        width={23.47826086956522}
        x={469.5652173913044}
        y={67.20000000000002}
      />
      <rect
        fill="#EA5153"
        height={279.20000000000005}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        opacity={1}
        width={23.47826086956522}
        x={516.5217391304348}
        y={-19.200000000000045}
      />
    </g>
  </svg>
</div>
`;

exports[`Storyshots Presentational|Chart/Components/Bars grouped - alt data 1`] = `
<div
  className="nature-graphic"
>
  <svg
    aria-hidden={true}
    focusable={false}
    height="300px"
    viewBox="0 0 600 300"
    width="600px"
  >
    <g>
      <rect
        fill="#EA5153"
        height={164}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        opacity={1}
        width={9.667519181585677}
        x={0}
        y={96}
      />
      <rect
        fill="#EA5153"
        height={45.14285714285714}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        opacity={1}
        width={9.667519181585677}
        x={154.28571428571428}
        y={214.85714285714286}
      />
      <rect
        fill="#EA5153"
        height={36}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        opacity={1}
        width={9.667519181585677}
        x={308.57142857142856}
        y={224}
      />
      <rect
        fill="#EA5153"
        height={20.022857142857134}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        opacity={1}
        width={9.667519181585677}
        x={462.85714285714283}
        y={239.97714285714287}
      />
    </g>
  </svg>
</div>
`;

exports[`Storyshots Presentational|Chart/Components/Bars grouped 1`] = `
<div
  className="nature-graphic"
>
  <svg
    aria-hidden={true}
    focusable={false}
    height="300px"
    viewBox="0 0 600 300"
    width="600px"
  >
    <g>
      <rect
        fill="#EA5153"
        height={23}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        opacity={1}
        width={3.496762257169288}
        x={0}
        y={237}
      />
      <rect
        fill="#EA5153"
        height={24.80000000000001}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        opacity={1}
        width={3.496762257169288}
        x={46.95652173913044}
        y={235.2}
      />
      <rect
        fill="#EA5153"
        height={26.599999999999994}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        opacity={1}
        width={3.496762257169288}
        x={93.91304347826087}
        y={233.4}
      />
      <rect
        fill="#EA5153"
        height={30.19999999999999}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        opacity={1}
        width={3.496762257169288}
        x={140.8695652173913}
        y={229.8}
      />
      <rect
        fill="#EA5153"
        height={35}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        opacity={1}
        width={3.496762257169288}
        x={187.82608695652175}
        y={225}
      />
      <rect
        fill="#EA5153"
        height={42.80000000000001}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        opacity={1}
        width={3.496762257169288}
        x={234.7826086956522}
        y={217.2}
      />
      <rect
        fill="#EA5153"
        height={54.19999999999999}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        opacity={1}
        width={3.496762257169288}
        x={281.7391304347826}
        y={205.8}
      />
      <rect
        fill="#EA5153"
        height={71}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        opacity={1}
        width={3.496762257169288}
        x={328.69565217391306}
        y={189}
      />
      <rect
        fill="#EA5153"
        height={96.80000000000001}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        opacity={1}
        width={3.496762257169288}
        x={375.6521739130435}
        y={163.2}
      />
      <rect
        fill="#EA5153"
        height={135.2}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        opacity={1}
        width={3.496762257169288}
        x={422.60869565217394}
        y={124.80000000000001}
      />
      <rect
        fill="#EA5153"
        height={192.79999999999998}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        opacity={1}
        width={3.496762257169288}
        x={469.5652173913044}
        y={67.20000000000002}
      />
      <rect
        fill="#EA5153"
        height={279.20000000000005}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        opacity={1}
        width={3.496762257169288}
        x={516.5217391304348}
        y={-19.200000000000045}
      />
    </g>
  </svg>
</div>
`;

exports[`Storyshots Presentational|Chart/Components/Bars stacked - alt data 1`] = `
<div
  className="nature-graphic"
>
  <svg
    aria-hidden={true}
    focusable={false}
    height="300px"
    viewBox="0 0 600 300"
    width="600px"
  >
    <g>
      <rect
        fill="#EA5153"
        height={144}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        opacity={1}
        width={77.14285714285714}
        x={0}
        y={96}
      />
      <rect
        fill="#EA5153"
        height={25.14285714285714}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        opacity={1}
        width={77.14285714285714}
        x={154.28571428571428}
        y={214.85714285714286}
      />
      <rect
        fill="#EA5153"
        height={16}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        opacity={1}
        width={77.14285714285714}
        x={308.57142857142856}
        y={224}
      />
      <rect
        fill="#EA5153"
        height={0.02285714285713425}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        opacity={1}
        width={77.14285714285714}
        x={462.85714285714283}
        y={239.97714285714287}
      />
    </g>
  </svg>
</div>
`;

exports[`Storyshots Presentational|Chart/Components/Bars stacked 1`] = `
<div
  className="nature-graphic"
>
  <svg
    aria-hidden={true}
    focusable={false}
    height="300px"
    viewBox="0 0 600 300"
    width="600px"
  >
    <g>
      <rect
        fill="#EA5153"
        height={0.75}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        opacity={1}
        width={23.47826086956522}
        x={0}
        y={239.25}
      />
      <rect
        fill="#EA5153"
        height={1.1999999999999886}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        opacity={1}
        width={23.47826086956522}
        x={46.95652173913044}
        y={238.8}
      />
      <rect
        fill="#EA5153"
        height={1.6500000000000057}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        opacity={1}
        width={23.47826086956522}
        x={93.91304347826087}
        y={238.35}
      />
      <rect
        fill="#EA5153"
        height={2.5500000000000114}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        opacity={1}
        width={23.47826086956522}
        x={140.8695652173913}
        y={237.45}
      />
      <rect
        fill="#EA5153"
        height={3.75}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        opacity={1}
        width={23.47826086956522}
        x={187.82608695652175}
        y={236.25}
      />
      <rect
        fill="#EA5153"
        height={5.699999999999989}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        opacity={1}
        width={23.47826086956522}
        x={234.7826086956522}
        y={234.3}
      />
      <rect
        fill="#EA5153"
        height={8.550000000000011}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        opacity={1}
        width={23.47826086956522}
        x={281.7391304347826}
        y={231.45}
      />
      <rect
        fill="#EA5153"
        height={12.75}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        opacity={1}
        width={23.47826086956522}
        x={328.69565217391306}
        y={227.25}
      />
      <rect
        fill="#EA5153"
        height={19.19999999999999}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        opacity={1}
        width={23.47826086956522}
        x={375.6521739130435}
        y={220.8}
      />
      <rect
        fill="#EA5153"
        height={28.80000000000001}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        opacity={1}
        width={23.47826086956522}
        x={422.60869565217394}
        y={211.2}
      />
      <rect
        fill="#EA5153"
        height={43.19999999999999}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        opacity={1}
        width={23.47826086956522}
        x={469.5652173913044}
        y={196.8}
      />
      <rect
        fill="#EA5153"
        height={64.80000000000001}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        opacity={1}
        width={23.47826086956522}
        x={516.5217391304348}
        y={175.2}
      />
    </g>
  </svg>
</div>
`;

exports[`Storyshots Presentational|Chart/Components/ChartBackgroundBox default 1`] = `
<div>
  <div
    id="story-root"
    style={Object {}}
  >
    <div
      className="nature-graphic"
    >
      <svg
        aria-hidden={true}
        focusable={false}
        height="300px"
        viewBox="0 0 600 300"
        width="600px"
      >
        <rect
          fill="#ffffff"
          height="260px"
          width="560px"
          x="20px"
          y="20px"
        />
      </svg>
    </div>
  </div>
  <div>
    <div
      style={
        Object {
          "backgroundColor": "#fff",
          "border": "1px solid #eee",
          "borderRadius": "2px",
          "color": "black",
          "fontFamily": "Helvetica Neue, Helvetica, Segoe UI, Arial, freesans, sans-serif",
          "fontSize": "15px",
          "fontWeight": 300,
          "lineHeight": 1.45,
          "marginBottom": "20px",
          "marginTop": "20px",
          "padding": "20px 40px 40px",
        }
      }
    >
      <div
        style={
          Object {
            "marginBottom": 0,
          }
        }
      >
        <h2
          id="chartbackgroundbox"
          style={
            Object {
              "fontSize": "30px",
              "fontWeight": 600,
              "margin": 0,
              "padding": 0,
            }
          }
        >
          ChartBackgroundBox
        </h2>
        <div
          style={
            Object {
              "fontSize": "15px",
            }
          }
        >
          Returns an SVG 
          <code>
            rect
          </code>
           element to be used to cover the
background of the chart area.
        </div>
      </div>
      <div>
        <h1
          style={
            Object {
              "borderBottom": "1px solid #EEE",
              "fontSize": "25px",
              "margin": "20px 0 0 0",
              "padding": "0 0 5px 0",
            }
          }
        >
          Prop Types
        </h1>
        <div>
          <h3
            style={
              Object {
                "margin": "20px 0 0 0",
              }
            }
          >
            "
            ChartBackgroundBox
            " Component
          </h3>
          <table
            className="info-table"
          >
            <thead>
              <tr>
                <th>
                  property
                </th>
                <th>
                  propType
                </th>
                <th>
                  required
                </th>
                <th>
                  default
                </th>
                <th>
                  description
                </th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  chartInnerHeight
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    number
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  The width of the box
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  chartInnerWidth
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    number
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  The height of the box
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  innerLeft
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    number
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  The x position of the box
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  innerTop
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    number
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  The y position of the box
                </td>
              </tr>
            </tbody>
          </table>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Presentational|Chart/Components/ChartBars default 1`] = `
<div>
  <div
    id="story-root"
    style={Object {}}
  >
    <div
      className="nature-graphic"
    >
      <svg
        aria-hidden={true}
        focusable={false}
        height="300px"
        viewBox="0 0 600 300"
        width="600px"
      >
        <g
          transform="translate(20,20)"
        >
          <rect
            fill="#EA5153"
            height={23}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={23.47826086956522}
            x={0}
            y={237}
          />
          <rect
            fill="#EA5153"
            height={24.80000000000001}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={23.47826086956522}
            x={46.95652173913044}
            y={235.2}
          />
          <rect
            fill="#EA5153"
            height={26.599999999999994}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={23.47826086956522}
            x={93.91304347826087}
            y={233.4}
          />
          <rect
            fill="#EA5153"
            height={30.19999999999999}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={23.47826086956522}
            x={140.8695652173913}
            y={229.8}
          />
          <rect
            fill="#EA5153"
            height={35}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={23.47826086956522}
            x={187.82608695652175}
            y={225}
          />
          <rect
            fill="#EA5153"
            height={42.80000000000001}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={23.47826086956522}
            x={234.7826086956522}
            y={217.2}
          />
          <rect
            fill="#EA5153"
            height={54.19999999999999}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={23.47826086956522}
            x={281.7391304347826}
            y={205.8}
          />
          <rect
            fill="#EA5153"
            height={71}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={23.47826086956522}
            x={328.69565217391306}
            y={189}
          />
          <rect
            fill="#EA5153"
            height={96.80000000000001}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={23.47826086956522}
            x={375.6521739130435}
            y={163.2}
          />
          <rect
            fill="#EA5153"
            height={135.2}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={23.47826086956522}
            x={422.60869565217394}
            y={124.80000000000001}
          />
          <rect
            fill="#EA5153"
            height={192.79999999999998}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={23.47826086956522}
            x={469.5652173913044}
            y={67.20000000000002}
          />
          <rect
            fill="#EA5153"
            height={279.20000000000005}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={23.47826086956522}
            x={516.5217391304348}
            y={-19.200000000000045}
          />
        </g>
      </svg>
    </div>
  </div>
  <div>
    <div
      style={
        Object {
          "backgroundColor": "#fff",
          "border": "1px solid #eee",
          "borderRadius": "2px",
          "color": "black",
          "fontFamily": "Helvetica Neue, Helvetica, Segoe UI, Arial, freesans, sans-serif",
          "fontSize": "15px",
          "fontWeight": 300,
          "lineHeight": 1.45,
          "marginBottom": "20px",
          "marginTop": "20px",
          "padding": "20px 40px 40px",
        }
      }
    >
      <div
        style={
          Object {
            "marginBottom": 0,
          }
        }
      >
        <h2
          id="chartbars"
          style={
            Object {
              "fontSize": "30px",
              "fontWeight": 600,
              "margin": 0,
              "padding": 0,
            }
          }
        >
          ChartBars
        </h2>
        <div
          style={
            Object {
              "fontSize": "15px",
            }
          }
        >
          Returns an array of svg 
          <code>
            rect
          </code>
           elements to form the
bars of the bar chart.
        </div>
        <div
          style={
            Object {
              "fontSize": "15px",
            }
          }
        >
          When a bar is hovered over, 
          <code>
            handleMouseEnterDataElem
          </code>
           is
called and returns the information needed to fill and positon
a tooltip.
        </div>
        <div
          style={
            Object {
              "fontSize": "15px",
            }
          }
        >
          Similarly when the mouse movess away, 
          <code>
            handleMouseLeaveDataElem
          </code>
          
is called to hide the tooltip.
        </div>
        <div
          style={
            Object {
              "fontSize": "15px",
            }
          }
        >
          TODO: When the bars are hovered over their opacity is changed
using js. This could be done with CSS.
        </div>
      </div>
      <div>
        <h1
          style={
            Object {
              "borderBottom": "1px solid #EEE",
              "fontSize": "25px",
              "margin": "20px 0 0 0",
              "padding": "0 0 5px 0",
            }
          }
        >
          Prop Types
        </h1>
        <div>
          <h3
            style={
              Object {
                "margin": "20px 0 0 0",
              }
            }
          >
            "
            ChartBars
            " Component
          </h3>
          <table
            className="info-table"
          >
            <thead>
              <tr>
                <th>
                  property
                </th>
                <th>
                  propType
                </th>
                <th>
                  required
                </th>
                <th>
                  default
                </th>
                <th>
                  description
                </th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  chartInnerHeight
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    number
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  Height of chart area - used to align bars to the baseline
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  chartInnerWidth
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    number
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  Width of chart area - used to position tooltip
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  columnNames
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    <span>
                      [
                    </span>
                    <span>
                      <span>
                        <span>
                          string
                        </span>
                        <span>
                           | 
                        </span>
                        <span>
                          number
                        </span>
                      </span>
                    </span>
                    <span>
                      ]
                    </span>
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  Used to label data points so they can be positioned with a band scale
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  data
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    <span>
                      [
                    </span>
                    <span>
                      <span>
                        <button
                          onClick={[Function]}
                          style={
                            Object {
                              "background": "none",
                              "border": "0 none",
                              "color": "gray",
                              "cursor": "pointer",
                              "display": "inline-block",
                            }
                          }
                          type="button"
                        >
                          {
                        </button>
                        <button
                          onClick={[Function]}
                          style={
                            Object {
                              "background": "none",
                              "border": "0 none",
                              "color": "gray",
                              "cursor": "pointer",
                              "display": "inline-block",
                            }
                          }
                          type="button"
                        >
                          ...
                        </button>
                        <div
                          style={
                            Object {
                              "marginLeft": 15,
                            }
                          }
                        >
                          <span
                            style={
                              Object {
                                "whiteSpace": "nowrap",
                              }
                            }
                          >
                            key
                            ?
                            :
                             
                          </span>
                          <span>
                            string
                          </span>
                          ,
                        </div>
                        <div
                          style={
                            Object {
                              "marginLeft": 15,
                            }
                          }
                        >
                          <span
                            style={
                              Object {
                                "whiteSpace": "nowrap",
                              }
                            }
                          >
                            values
                            ?
                            :
                             
                          </span>
                          <span>
                            array
                          </span>
                          ,
                        </div>
                        <button
                          onClick={[Function]}
                          style={
                            Object {
                              "background": "none",
                              "border": "0 none",
                              "color": "gray",
                              "cursor": "pointer",
                              "display": "inline-block",
                            }
                          }
                          type="button"
                        >
                          }
                        </button>
                      </span>
                    </span>
                    <span>
                      ]
                    </span>
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  Array of { key, values: []} - only data[index].values will be rendered
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  handleMouseEnterDataElem
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    func
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  <span>
                     
                    Function to be called when the cursor enters a bar.
                  </span>
                  <span>
                    <br />
                     
                    Returns an object of {x, y, value, alignment }
                  </span>
                  <span>
                    <br />
                     
                    used to position the tooltip.
                  </span>
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  handleMouseLeaveDataElem
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    func
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  Function to be called when the cursor leaves a bar
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  index
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    number
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  Used to select data range and apply a stroke color
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  innerLeft
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    number
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  <span>
                     
                    TODO: Position bars within dataLayer
                  </span>
                  <span>
                    <br />
                     
                    Used to correctly position the tooltip
                  </span>
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  innerTop
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    number
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  <span>
                     
                    TODO: Position bars within dataLayer
                  </span>
                  <span>
                    <br />
                     
                    Used to correctly position the tooltip
                  </span>
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  xScale
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    func
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  d3.scaleBand used to position the bars horizontally
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  yAxisFormat
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    func
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  <span>
                     
                    Used to format the 'value' that is returned to handleMouseEnterDataElem
                  </span>
                  <span>
                    <br />
                     
                    to be displayed in the tooltip.
                  </span>
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  yScale
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    func
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  d3.scaleLinear used to determine the height of the bars
                </td>
              </tr>
            </tbody>
          </table>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Presentational|Chart/Components/ChartDataLayerGroupedBars alt data 1`] = `
<div>
  <div
    id="story-root"
    style={Object {}}
  >
    <div
      className="nature-graphic"
    >
      <svg
        aria-hidden={true}
        focusable={false}
        height="300px"
        viewBox="0 0 600 300"
        width="600px"
      >
        <g
          transform="translate(20,20)"
        >
          <g>
            <g>
              <rect
                fill="#EA5153"
                height={164}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                opacity={1}
                width={9.667519181585677}
                x={0}
                y={96}
              />
              <rect
                fill="#EA5153"
                height={45.14285714285714}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                opacity={1}
                width={9.667519181585677}
                x={154.28571428571428}
                y={214.85714285714286}
              />
              <rect
                fill="#EA5153"
                height={36}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                opacity={1}
                width={9.667519181585677}
                x={308.57142857142856}
                y={224}
              />
              <rect
                fill="#EA5153"
                height={20.022857142857134}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                opacity={1}
                width={9.667519181585677}
                x={462.85714285714283}
                y={239.97714285714287}
              />
            </g>
          </g>
          <g>
            <g>
              <rect
                fill="#75C6C5"
                height={260}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                opacity={1}
                width={9.667519181585677}
                x={13.81074168797954}
                y={0}
              />
              <rect
                fill="#75C6C5"
                height={68}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                opacity={1}
                width={9.667519181585677}
                x={168.09645597369382}
                y={192}
              />
              <rect
                fill="#75C6C5"
                height={54.28571428571428}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                opacity={1}
                width={9.667519181585677}
                x={322.3821702594081}
                y={205.71428571428572}
              />
              <rect
                fill="#75C6C5"
                height={54.28571428571428}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                opacity={1}
                width={9.667519181585677}
                x={476.6678845451224}
                y={205.71428571428572}
              />
            </g>
          </g>
        </g>
      </svg>
    </div>
  </div>
  <div>
    <div
      style={
        Object {
          "backgroundColor": "#fff",
          "border": "1px solid #eee",
          "borderRadius": "2px",
          "color": "black",
          "fontFamily": "Helvetica Neue, Helvetica, Segoe UI, Arial, freesans, sans-serif",
          "fontSize": "15px",
          "fontWeight": 300,
          "lineHeight": 1.45,
          "marginBottom": "20px",
          "marginTop": "20px",
          "padding": "20px 40px 40px",
        }
      }
    >
      <div
        style={
          Object {
            "marginBottom": 0,
          }
        }
      >
        <h2
          id="chartdatalayergroupedbars"
          style={
            Object {
              "fontSize": "30px",
              "fontWeight": 600,
              "margin": 0,
              "padding": 0,
            }
          }
        >
          ChartDataLayerGroupedBars
        </h2>
        <div
          style={
            Object {
              "fontSize": "15px",
            }
          }
        >
          Returns an SVG group containing an array of 
          <code>
            ChartGroupedBars
          </code>
          
components. Each group of bars is passed an index so that the
bars can be positioned and coloured within their group.
        </div>
        <div
          style={
            Object {
              "fontSize": "15px",
            }
          }
        >
          The group is positioned by innerLeft and innerTop all other
props are passed to the the 
          <code>
            ChartGroupedBars
          </code>
           components.
        </div>
      </div>
      <div>
        <h1
          style={
            Object {
              "borderBottom": "1px solid #EEE",
              "fontSize": "25px",
              "margin": "20px 0 0 0",
              "padding": "0 0 5px 0",
            }
          }
        >
          Prop Types
        </h1>
        <div>
          <h3
            style={
              Object {
                "margin": "20px 0 0 0",
              }
            }
          >
            "
            ChartDataLayerGroupedBars
            " Component
          </h3>
          <table
            className="info-table"
          >
            <thead>
              <tr>
                <th>
                  property
                </th>
                <th>
                  propType
                </th>
                <th>
                  required
                </th>
                <th>
                  default
                </th>
                <th>
                  description
                </th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  chartInnerHeight
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    number
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  chartInnerWidth
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    number
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  columnNames
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    <span>
                      [
                    </span>
                    <span>
                      <span>
                        <span>
                          string
                        </span>
                        <span>
                           | 
                        </span>
                        <span>
                          number
                        </span>
                      </span>
                    </span>
                    <span>
                      ]
                    </span>
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  data
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    <span>
                      [
                    </span>
                    <span>
                      <span>
                        <button
                          onClick={[Function]}
                          style={
                            Object {
                              "background": "none",
                              "border": "0 none",
                              "color": "gray",
                              "cursor": "pointer",
                              "display": "inline-block",
                            }
                          }
                          type="button"
                        >
                          {
                        </button>
                        <button
                          onClick={[Function]}
                          style={
                            Object {
                              "background": "none",
                              "border": "0 none",
                              "color": "gray",
                              "cursor": "pointer",
                              "display": "inline-block",
                            }
                          }
                          type="button"
                        >
                          ...
                        </button>
                        <div
                          style={
                            Object {
                              "marginLeft": 15,
                            }
                          }
                        >
                          <span
                            style={
                              Object {
                                "whiteSpace": "nowrap",
                              }
                            }
                          >
                            key
                            ?
                            :
                             
                          </span>
                          <span>
                            string
                          </span>
                          ,
                        </div>
                        <div
                          style={
                            Object {
                              "marginLeft": 15,
                            }
                          }
                        >
                          <span
                            style={
                              Object {
                                "whiteSpace": "nowrap",
                              }
                            }
                          >
                            values
                            ?
                            :
                             
                          </span>
                          <span>
                            array
                          </span>
                          ,
                        </div>
                        <button
                          onClick={[Function]}
                          style={
                            Object {
                              "background": "none",
                              "border": "0 none",
                              "color": "gray",
                              "cursor": "pointer",
                              "display": "inline-block",
                            }
                          }
                          type="button"
                        >
                          }
                        </button>
                      </span>
                    </span>
                    <span>
                      ]
                    </span>
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  handleMouseEnterDataElem
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    func
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  handleMouseLeaveDataElem
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    func
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  innerLeft
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    number
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  Used to position the group.
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  innerTop
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    number
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  Used to position the group.
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  xScale
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    func
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  xScaleInternal
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    func
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  yAxisFormat
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    func
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  yScale
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    func
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  
                </td>
              </tr>
            </tbody>
          </table>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Presentational|Chart/Components/ChartDataLayerGroupedBars default 1`] = `
<div>
  <div
    id="story-root"
    style={Object {}}
  >
    <div
      className="nature-graphic"
    >
      <svg
        aria-hidden={true}
        focusable={false}
        height="300px"
        viewBox="0 0 600 300"
        width="600px"
      >
        <g
          transform="translate(20,20)"
        >
          <g>
            <g>
              <rect
                fill="#EA5153"
                height={23}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                opacity={1}
                width={3.496762257169288}
                x={0}
                y={237}
              />
              <rect
                fill="#EA5153"
                height={24.80000000000001}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                opacity={1}
                width={3.496762257169288}
                x={46.95652173913044}
                y={235.2}
              />
              <rect
                fill="#EA5153"
                height={26.599999999999994}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                opacity={1}
                width={3.496762257169288}
                x={93.91304347826087}
                y={233.4}
              />
              <rect
                fill="#EA5153"
                height={30.19999999999999}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                opacity={1}
                width={3.496762257169288}
                x={140.8695652173913}
                y={229.8}
              />
              <rect
                fill="#EA5153"
                height={35}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                opacity={1}
                width={3.496762257169288}
                x={187.82608695652175}
                y={225}
              />
              <rect
                fill="#EA5153"
                height={42.80000000000001}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                opacity={1}
                width={3.496762257169288}
                x={234.7826086956522}
                y={217.2}
              />
              <rect
                fill="#EA5153"
                height={54.19999999999999}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                opacity={1}
                width={3.496762257169288}
                x={281.7391304347826}
                y={205.8}
              />
              <rect
                fill="#EA5153"
                height={71}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                opacity={1}
                width={3.496762257169288}
                x={328.69565217391306}
                y={189}
              />
              <rect
                fill="#EA5153"
                height={96.80000000000001}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                opacity={1}
                width={3.496762257169288}
                x={375.6521739130435}
                y={163.2}
              />
              <rect
                fill="#EA5153"
                height={135.2}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                opacity={1}
                width={3.496762257169288}
                x={422.60869565217394}
                y={124.80000000000001}
              />
              <rect
                fill="#EA5153"
                height={192.79999999999998}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                opacity={1}
                width={3.496762257169288}
                x={469.5652173913044}
                y={67.20000000000002}
              />
              <rect
                fill="#EA5153"
                height={279.20000000000005}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                opacity={1}
                width={3.496762257169288}
                x={516.5217391304348}
                y={-19.200000000000045}
              />
            </g>
          </g>
          <g>
            <g>
              <rect
                fill="#75C6C5"
                height={22.400000000000006}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                opacity={1}
                width={3.496762257169288}
                x={4.995374653098983}
                y={237.6}
              />
              <rect
                fill="#75C6C5"
                height={23}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                opacity={1}
                width={3.496762257169288}
                x={51.95189639222942}
                y={237}
              />
              <rect
                fill="#75C6C5"
                height={23.599999999999994}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                opacity={1}
                width={3.496762257169288}
                x={98.90841813135985}
                y={236.4}
              />
              <rect
                fill="#75C6C5"
                height={26}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                opacity={1}
                width={3.496762257169288}
                x={145.8649398704903}
                y={234}
              />
              <rect
                fill="#75C6C5"
                height={34.400000000000006}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                opacity={1}
                width={3.496762257169288}
                x={192.82146160962074}
                y={225.6}
              />
              <rect
                fill="#75C6C5"
                height={39.19999999999999}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                opacity={1}
                width={3.496762257169288}
                x={239.77798334875118}
                y={220.8}
              />
              <rect
                fill="#75C6C5"
                height={44}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                opacity={1}
                width={3.496762257169288}
                x={286.7345050878816}
                y={216}
              />
              <rect
                fill="#75C6C5"
                height={50}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                opacity={1}
                width={3.496762257169288}
                x={333.691026827012}
                y={210}
              />
              <rect
                fill="#75C6C5"
                height={68}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                opacity={1}
                width={3.496762257169288}
                x={380.64754856614246}
                y={192}
              />
              <rect
                fill="#75C6C5"
                height={170}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                opacity={1}
                width={3.496762257169288}
                x={427.6040703052729}
                y={90}
              />
              <rect
                fill="#75C6C5"
                height={200}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                opacity={1}
                width={3.496762257169288}
                x={474.56059204440334}
                y={60}
              />
              <rect
                fill="#75C6C5"
                height={230}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                opacity={1}
                width={3.496762257169288}
                x={521.5171137835338}
                y={30}
              />
            </g>
          </g>
          <g>
            <g>
              <rect
                fill="#5A527E"
                height={21.80000000000001}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                opacity={1}
                width={3.496762257169288}
                x={9.990749306197966}
                y={238.2}
              />
              <rect
                fill="#5A527E"
                height={23}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                opacity={1}
                width={3.496762257169288}
                x={56.94727104532841}
                y={237}
              />
              <rect
                fill="#5A527E"
                height={23}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                opacity={1}
                width={3.496762257169288}
                x={103.90379278445884}
                y={237}
              />
              <rect
                fill="#5A527E"
                height={26}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                opacity={1}
                width={3.496762257169288}
                x={150.86031452358927}
                y={234}
              />
              <rect
                fill="#5A527E"
                height={32}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                opacity={1}
                width={3.496762257169288}
                x={197.8168362627197}
                y={228}
              />
              <rect
                fill="#5A527E"
                height={26}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                opacity={1}
                width={3.496762257169288}
                x={244.77335800185014}
                y={234}
              />
              <rect
                fill="#5A527E"
                height={32}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                opacity={1}
                width={3.496762257169288}
                x={291.7298797409806}
                y={228}
              />
              <rect
                fill="#5A527E"
                height={32}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                opacity={1}
                width={3.496762257169288}
                x={338.68640148011104}
                y={228}
              />
              <rect
                fill="#5A527E"
                height={56}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                opacity={1}
                width={3.496762257169288}
                x={385.6429232192415}
                y={204}
              />
              <rect
                fill="#5A527E"
                height={80}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                opacity={1}
                width={3.496762257169288}
                x={432.5994449583719}
                y={180}
              />
              <rect
                fill="#5A527E"
                height={170}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                opacity={1}
                width={3.496762257169288}
                x={479.55596669750236}
                y={90}
              />
              <rect
                fill="#5A527E"
                height={188}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                opacity={1}
                width={3.496762257169288}
                x={526.5124884366327}
                y={72}
              />
            </g>
          </g>
          <g>
            <g>
              <rect
                fill="#8B0D16"
                height={21.19999999999999}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                opacity={1}
                width={3.496762257169288}
                x={14.986123959296949}
                y={238.8}
              />
              <rect
                fill="#8B0D16"
                height={23.599999999999994}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                opacity={1}
                width={3.496762257169288}
                x={61.942645698427384}
                y={236.4}
              />
              <rect
                fill="#8B0D16"
                height={24.80000000000001}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                opacity={1}
                width={3.496762257169288}
                x={108.89916743755782}
                y={235.2}
              />
              <rect
                fill="#8B0D16"
                height={32}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                opacity={1}
                width={3.496762257169288}
                x={155.85568917668826}
                y={228}
              />
              <rect
                fill="#8B0D16"
                height={38}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                opacity={1}
                width={3.496762257169288}
                x={202.8122109158187}
                y={222}
              />
              <rect
                fill="#8B0D16"
                height={74}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                opacity={1}
                width={3.496762257169288}
                x={249.76873265494913}
                y={186}
              />
              <rect
                fill="#8B0D16"
                height={80}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                opacity={1}
                width={3.496762257169288}
                x={296.72525439407957}
                y={180}
              />
              <rect
                fill="#8B0D16"
                height={140}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                opacity={1}
                width={3.496762257169288}
                x={343.68177613321}
                y={120}
              />
              <rect
                fill="#8B0D16"
                height={140}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                opacity={1}
                width={3.496762257169288}
                x={390.63829787234044}
                y={120}
              />
              <rect
                fill="#8B0D16"
                height={128}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                opacity={1}
                width={3.496762257169288}
                x={437.5948196114709}
                y={132}
              />
              <rect
                fill="#8B0D16"
                height={146}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                opacity={1}
                width={3.496762257169288}
                x={484.5513413506013}
                y={114}
              />
              <rect
                fill="#8B0D16"
                height={140}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                opacity={1}
                width={3.496762257169288}
                x={531.5078630897317}
                y={120}
              />
            </g>
          </g>
          <g>
            <g>
              <rect
                fill="#8FC297"
                height={20.599999999999994}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                opacity={1}
                width={3.496762257169288}
                x={19.98149861239593}
                y={239.4}
              />
              <rect
                fill="#8FC297"
                height={24.19999999999999}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                opacity={1}
                width={3.496762257169288}
                x={66.93802035152638}
                y={235.8}
              />
              <rect
                fill="#8FC297"
                height={38}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                opacity={1}
                width={3.496762257169288}
                x={113.89454209065681}
                y={222}
              />
              <rect
                fill="#8FC297"
                height={50}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                opacity={1}
                width={3.496762257169288}
                x={160.85106382978725}
                y={210}
              />
              <rect
                fill="#8FC297"
                height={74}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                opacity={1}
                width={3.496762257169288}
                x={207.8075855689177}
                y={186}
              />
              <rect
                fill="#8FC297"
                height={56}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                opacity={1}
                width={3.496762257169288}
                x={254.76410730804812}
                y={204}
              />
              <rect
                fill="#8FC297"
                height={110}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                opacity={1}
                width={3.496762257169288}
                x={301.72062904717853}
                y={150}
              />
              <rect
                fill="#8FC297"
                height={86}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                opacity={1}
                width={3.496762257169288}
                x={348.67715078630897}
                y={174}
              />
              <rect
                fill="#8FC297"
                height={116}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                opacity={1}
                width={3.496762257169288}
                x={395.6336725254394}
                y={144}
              />
              <rect
                fill="#8FC297"
                height={200}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                opacity={1}
                width={3.496762257169288}
                x={442.59019426456985}
                y={60}
              />
              <rect
                fill="#8FC297"
                height={230}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                opacity={1}
                width={3.496762257169288}
                x={489.5467160037003}
                y={30}
              />
              <rect
                fill="#8FC297"
                height={170}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                opacity={1}
                width={3.496762257169288}
                x={536.5032377428307}
                y={90}
              />
            </g>
          </g>
        </g>
      </svg>
    </div>
  </div>
  <div>
    <div
      style={
        Object {
          "backgroundColor": "#fff",
          "border": "1px solid #eee",
          "borderRadius": "2px",
          "color": "black",
          "fontFamily": "Helvetica Neue, Helvetica, Segoe UI, Arial, freesans, sans-serif",
          "fontSize": "15px",
          "fontWeight": 300,
          "lineHeight": 1.45,
          "marginBottom": "20px",
          "marginTop": "20px",
          "padding": "20px 40px 40px",
        }
      }
    >
      <div
        style={
          Object {
            "marginBottom": 0,
          }
        }
      >
        <h2
          id="chartdatalayergroupedbars"
          style={
            Object {
              "fontSize": "30px",
              "fontWeight": 600,
              "margin": 0,
              "padding": 0,
            }
          }
        >
          ChartDataLayerGroupedBars
        </h2>
        <div
          style={
            Object {
              "fontSize": "15px",
            }
          }
        >
          Returns an SVG group containing an array of 
          <code>
            ChartGroupedBars
          </code>
          
components. Each group of bars is passed an index so that the
bars can be positioned and coloured within their group.
        </div>
        <div
          style={
            Object {
              "fontSize": "15px",
            }
          }
        >
          The group is positioned by innerLeft and innerTop all other
props are passed to the the 
          <code>
            ChartGroupedBars
          </code>
           components.
        </div>
      </div>
      <div>
        <h1
          style={
            Object {
              "borderBottom": "1px solid #EEE",
              "fontSize": "25px",
              "margin": "20px 0 0 0",
              "padding": "0 0 5px 0",
            }
          }
        >
          Prop Types
        </h1>
        <div>
          <h3
            style={
              Object {
                "margin": "20px 0 0 0",
              }
            }
          >
            "
            ChartDataLayerGroupedBars
            " Component
          </h3>
          <table
            className="info-table"
          >
            <thead>
              <tr>
                <th>
                  property
                </th>
                <th>
                  propType
                </th>
                <th>
                  required
                </th>
                <th>
                  default
                </th>
                <th>
                  description
                </th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  chartInnerHeight
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    number
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  chartInnerWidth
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    number
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  columnNames
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    <span>
                      [
                    </span>
                    <span>
                      <span>
                        <span>
                          string
                        </span>
                        <span>
                           | 
                        </span>
                        <span>
                          number
                        </span>
                      </span>
                    </span>
                    <span>
                      ]
                    </span>
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  data
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    <span>
                      [
                    </span>
                    <span>
                      <span>
                        <button
                          onClick={[Function]}
                          style={
                            Object {
                              "background": "none",
                              "border": "0 none",
                              "color": "gray",
                              "cursor": "pointer",
                              "display": "inline-block",
                            }
                          }
                          type="button"
                        >
                          {
                        </button>
                        <button
                          onClick={[Function]}
                          style={
                            Object {
                              "background": "none",
                              "border": "0 none",
                              "color": "gray",
                              "cursor": "pointer",
                              "display": "inline-block",
                            }
                          }
                          type="button"
                        >
                          ...
                        </button>
                        <div
                          style={
                            Object {
                              "marginLeft": 15,
                            }
                          }
                        >
                          <span
                            style={
                              Object {
                                "whiteSpace": "nowrap",
                              }
                            }
                          >
                            key
                            ?
                            :
                             
                          </span>
                          <span>
                            string
                          </span>
                          ,
                        </div>
                        <div
                          style={
                            Object {
                              "marginLeft": 15,
                            }
                          }
                        >
                          <span
                            style={
                              Object {
                                "whiteSpace": "nowrap",
                              }
                            }
                          >
                            values
                            ?
                            :
                             
                          </span>
                          <span>
                            array
                          </span>
                          ,
                        </div>
                        <button
                          onClick={[Function]}
                          style={
                            Object {
                              "background": "none",
                              "border": "0 none",
                              "color": "gray",
                              "cursor": "pointer",
                              "display": "inline-block",
                            }
                          }
                          type="button"
                        >
                          }
                        </button>
                      </span>
                    </span>
                    <span>
                      ]
                    </span>
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  handleMouseEnterDataElem
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    func
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  handleMouseLeaveDataElem
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    func
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  innerLeft
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    number
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  Used to position the group.
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  innerTop
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    number
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  Used to position the group.
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  xScale
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    func
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  xScaleInternal
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    func
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  yAxisFormat
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    func
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  yScale
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    func
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  
                </td>
              </tr>
            </tbody>
          </table>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Presentational|Chart/Components/ChartDataLayerLine line 1`] = `
<div>
  <div
    id="story-root"
    style={Object {}}
  >
    <div
      className="nature-graphic"
    >
      <svg
        aria-hidden={true}
        focusable={false}
        height="300px"
        viewBox="0 0 600 300"
        width="600px"
      >
        <g
          transform="translate(20,20)"
        >
          <g>
            <path
              d="M0,237L49.09090909090909,235.2L98.18181818181819,233.4L147.27272727272725,229.8L196.36363636363637,225L245.45454545454544,217.2L294.5454545454545,205.8L343.6363636363636,189L392.72727272727275,163.2L441.81818181818187,124.80000000000001L490.9090909090909,67.20000000000002L540,-19.200000000000045"
              fill="none"
              index={0}
              stroke="#EA5153"
              strokeLinecap="round"
              strokeLinejoin="round"
              strokeWidth="3px"
            />
            <g>
              <circle
                cx={0}
                cy={237}
                fill="#EA5153"
                index={0}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                r="4px"
              />
              <circle
                cx={49.09090909090909}
                cy={235.2}
                fill="#EA5153"
                index={0}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                r="4px"
              />
              <circle
                cx={98.18181818181819}
                cy={233.4}
                fill="#EA5153"
                index={0}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                r="4px"
              />
              <circle
                cx={147.27272727272725}
                cy={229.8}
                fill="#EA5153"
                index={0}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                r="4px"
              />
              <circle
                cx={196.36363636363637}
                cy={225}
                fill="#EA5153"
                index={0}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                r="4px"
              />
              <circle
                cx={245.45454545454544}
                cy={217.2}
                fill="#EA5153"
                index={0}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                r="4px"
              />
              <circle
                cx={294.5454545454545}
                cy={205.8}
                fill="#EA5153"
                index={0}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                r="4px"
              />
              <circle
                cx={343.6363636363636}
                cy={189}
                fill="#EA5153"
                index={0}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                r="4px"
              />
              <circle
                cx={392.72727272727275}
                cy={163.2}
                fill="#EA5153"
                index={0}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                r="4px"
              />
              <circle
                cx={441.81818181818187}
                cy={124.80000000000001}
                fill="#EA5153"
                index={0}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                r="4px"
              />
              <circle
                cx={490.9090909090909}
                cy={67.20000000000002}
                fill="#EA5153"
                index={0}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                r="4px"
              />
              <circle
                cx={540}
                cy={-19.200000000000045}
                fill="#EA5153"
                index={0}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                r="4px"
              />
            </g>
          </g>
          <g>
            <path
              d="M0,237.6L49.09090909090909,237L98.18181818181819,236.4L147.27272727272725,234L196.36363636363637,225.6L245.45454545454544,220.8L294.5454545454545,216L343.6363636363636,210L392.72727272727275,192L441.81818181818187,90L490.9090909090909,60L540,30"
              fill="none"
              index={1}
              stroke="#75C6C5"
              strokeLinecap="round"
              strokeLinejoin="round"
              strokeWidth="3px"
            />
            <g>
              <circle
                cx={0}
                cy={237.6}
                fill="#75C6C5"
                index={1}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                r="4px"
              />
              <circle
                cx={49.09090909090909}
                cy={237}
                fill="#75C6C5"
                index={1}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                r="4px"
              />
              <circle
                cx={98.18181818181819}
                cy={236.4}
                fill="#75C6C5"
                index={1}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                r="4px"
              />
              <circle
                cx={147.27272727272725}
                cy={234}
                fill="#75C6C5"
                index={1}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                r="4px"
              />
              <circle
                cx={196.36363636363637}
                cy={225.6}
                fill="#75C6C5"
                index={1}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                r="4px"
              />
              <circle
                cx={245.45454545454544}
                cy={220.8}
                fill="#75C6C5"
                index={1}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                r="4px"
              />
              <circle
                cx={294.5454545454545}
                cy={216}
                fill="#75C6C5"
                index={1}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                r="4px"
              />
              <circle
                cx={343.6363636363636}
                cy={210}
                fill="#75C6C5"
                index={1}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                r="4px"
              />
              <circle
                cx={392.72727272727275}
                cy={192}
                fill="#75C6C5"
                index={1}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                r="4px"
              />
              <circle
                cx={441.81818181818187}
                cy={90}
                fill="#75C6C5"
                index={1}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                r="4px"
              />
              <circle
                cx={490.9090909090909}
                cy={60}
                fill="#75C6C5"
                index={1}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                r="4px"
              />
              <circle
                cx={540}
                cy={30}
                fill="#75C6C5"
                index={1}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                r="4px"
              />
            </g>
          </g>
          <g>
            <path
              d="M0,238.2L49.09090909090909,237L98.18181818181819,237L147.27272727272725,234L196.36363636363637,228L245.45454545454544,234L294.5454545454545,228L343.6363636363636,228L392.72727272727275,204L441.81818181818187,180L490.9090909090909,90L540,72"
              fill="none"
              index={2}
              stroke="#5A527E"
              strokeLinecap="round"
              strokeLinejoin="round"
              strokeWidth="3px"
            />
            <g>
              <circle
                cx={0}
                cy={238.2}
                fill="#5A527E"
                index={2}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                r="4px"
              />
              <circle
                cx={49.09090909090909}
                cy={237}
                fill="#5A527E"
                index={2}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                r="4px"
              />
              <circle
                cx={98.18181818181819}
                cy={237}
                fill="#5A527E"
                index={2}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                r="4px"
              />
              <circle
                cx={147.27272727272725}
                cy={234}
                fill="#5A527E"
                index={2}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                r="4px"
              />
              <circle
                cx={196.36363636363637}
                cy={228}
                fill="#5A527E"
                index={2}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                r="4px"
              />
              <circle
                cx={245.45454545454544}
                cy={234}
                fill="#5A527E"
                index={2}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                r="4px"
              />
              <circle
                cx={294.5454545454545}
                cy={228}
                fill="#5A527E"
                index={2}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                r="4px"
              />
              <circle
                cx={343.6363636363636}
                cy={228}
                fill="#5A527E"
                index={2}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                r="4px"
              />
              <circle
                cx={392.72727272727275}
                cy={204}
                fill="#5A527E"
                index={2}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                r="4px"
              />
              <circle
                cx={441.81818181818187}
                cy={180}
                fill="#5A527E"
                index={2}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                r="4px"
              />
              <circle
                cx={490.9090909090909}
                cy={90}
                fill="#5A527E"
                index={2}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                r="4px"
              />
              <circle
                cx={540}
                cy={72}
                fill="#5A527E"
                index={2}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                r="4px"
              />
            </g>
          </g>
          <g>
            <path
              d="M0,238.8L49.09090909090909,236.4L98.18181818181819,235.2L147.27272727272725,228L196.36363636363637,222L245.45454545454544,186L294.5454545454545,180L343.6363636363636,120L392.72727272727275,120L441.81818181818187,132L490.9090909090909,114L540,120"
              fill="none"
              index={3}
              stroke="#8B0D16"
              strokeLinecap="round"
              strokeLinejoin="round"
              strokeWidth="3px"
            />
            <g>
              <circle
                cx={0}
                cy={238.8}
                fill="#8B0D16"
                index={3}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                r="4px"
              />
              <circle
                cx={49.09090909090909}
                cy={236.4}
                fill="#8B0D16"
                index={3}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                r="4px"
              />
              <circle
                cx={98.18181818181819}
                cy={235.2}
                fill="#8B0D16"
                index={3}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                r="4px"
              />
              <circle
                cx={147.27272727272725}
                cy={228}
                fill="#8B0D16"
                index={3}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                r="4px"
              />
              <circle
                cx={196.36363636363637}
                cy={222}
                fill="#8B0D16"
                index={3}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                r="4px"
              />
              <circle
                cx={245.45454545454544}
                cy={186}
                fill="#8B0D16"
                index={3}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                r="4px"
              />
              <circle
                cx={294.5454545454545}
                cy={180}
                fill="#8B0D16"
                index={3}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                r="4px"
              />
              <circle
                cx={343.6363636363636}
                cy={120}
                fill="#8B0D16"
                index={3}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                r="4px"
              />
              <circle
                cx={392.72727272727275}
                cy={120}
                fill="#8B0D16"
                index={3}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                r="4px"
              />
              <circle
                cx={441.81818181818187}
                cy={132}
                fill="#8B0D16"
                index={3}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                r="4px"
              />
              <circle
                cx={490.9090909090909}
                cy={114}
                fill="#8B0D16"
                index={3}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                r="4px"
              />
              <circle
                cx={540}
                cy={120}
                fill="#8B0D16"
                index={3}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                r="4px"
              />
            </g>
          </g>
          <g>
            <path
              d="M0,239.4L49.09090909090909,235.8L98.18181818181819,222L147.27272727272725,210L196.36363636363637,186L245.45454545454544,204L294.5454545454545,150L343.6363636363636,174L392.72727272727275,144L441.81818181818187,60L490.9090909090909,30L540,90"
              fill="none"
              index={4}
              stroke="#8FC297"
              strokeLinecap="round"
              strokeLinejoin="round"
              strokeWidth="3px"
            />
            <g>
              <circle
                cx={0}
                cy={239.4}
                fill="#8FC297"
                index={4}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                r="4px"
              />
              <circle
                cx={49.09090909090909}
                cy={235.8}
                fill="#8FC297"
                index={4}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                r="4px"
              />
              <circle
                cx={98.18181818181819}
                cy={222}
                fill="#8FC297"
                index={4}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                r="4px"
              />
              <circle
                cx={147.27272727272725}
                cy={210}
                fill="#8FC297"
                index={4}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                r="4px"
              />
              <circle
                cx={196.36363636363637}
                cy={186}
                fill="#8FC297"
                index={4}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                r="4px"
              />
              <circle
                cx={245.45454545454544}
                cy={204}
                fill="#8FC297"
                index={4}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                r="4px"
              />
              <circle
                cx={294.5454545454545}
                cy={150}
                fill="#8FC297"
                index={4}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                r="4px"
              />
              <circle
                cx={343.6363636363636}
                cy={174}
                fill="#8FC297"
                index={4}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                r="4px"
              />
              <circle
                cx={392.72727272727275}
                cy={144}
                fill="#8FC297"
                index={4}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                r="4px"
              />
              <circle
                cx={441.81818181818187}
                cy={60}
                fill="#8FC297"
                index={4}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                r="4px"
              />
              <circle
                cx={490.9090909090909}
                cy={30}
                fill="#8FC297"
                index={4}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                r="4px"
              />
              <circle
                cx={540}
                cy={90}
                fill="#8FC297"
                index={4}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                r="4px"
              />
            </g>
          </g>
        </g>
      </svg>
    </div>
  </div>
  <div>
    <div
      style={
        Object {
          "backgroundColor": "#fff",
          "border": "1px solid #eee",
          "borderRadius": "2px",
          "color": "black",
          "fontFamily": "Helvetica Neue, Helvetica, Segoe UI, Arial, freesans, sans-serif",
          "fontSize": "15px",
          "fontWeight": 300,
          "lineHeight": 1.45,
          "marginBottom": "20px",
          "marginTop": "20px",
          "padding": "20px 40px 40px",
        }
      }
    >
      <div
        style={
          Object {
            "marginBottom": 0,
          }
        }
      >
        <h2
          id="chartdatalayerline"
          style={
            Object {
              "fontSize": "30px",
              "fontWeight": 600,
              "margin": 0,
              "padding": 0,
            }
          }
        >
          ChartDataLayerLine
        </h2>
        <div
          style={
            Object {
              "fontSize": "15px",
            }
          }
        >
          Returns an SVG group containing an array of SVG groups
containing a 
          <code>
            ChartLine
          </code>
           and a 
          <code>
            ChartDots
          </code>
           component.
        </div>
        <div
          style={
            Object {
              "fontSize": "15px",
            }
          }
        >
          The group is positioned by innerLeft and innerTop all
other props are passed to the the 
          <code>
            ChartLine
          </code>
           and 
          <code>
            ChartDots
          </code>
           components.
        </div>
      </div>
      <div>
        <h1
          style={
            Object {
              "borderBottom": "1px solid #EEE",
              "fontSize": "25px",
              "margin": "20px 0 0 0",
              "padding": "0 0 5px 0",
            }
          }
        >
          Prop Types
        </h1>
        <div>
          <h3
            style={
              Object {
                "margin": "20px 0 0 0",
              }
            }
          >
            "
            ChartDataLayerLine
            " Component
          </h3>
          <table
            className="info-table"
          >
            <thead>
              <tr>
                <th>
                  property
                </th>
                <th>
                  propType
                </th>
                <th>
                  required
                </th>
                <th>
                  default
                </th>
                <th>
                  description
                </th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  chartInnerWidth
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    number
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  columnNames
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    <span>
                      [
                    </span>
                    <span>
                      <span>
                        <span>
                          string
                        </span>
                        <span>
                           | 
                        </span>
                        <span>
                          number
                        </span>
                      </span>
                    </span>
                    <span>
                      ]
                    </span>
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  data
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    <span>
                      [
                    </span>
                    <span>
                      <span>
                        <button
                          onClick={[Function]}
                          style={
                            Object {
                              "background": "none",
                              "border": "0 none",
                              "color": "gray",
                              "cursor": "pointer",
                              "display": "inline-block",
                            }
                          }
                          type="button"
                        >
                          {
                        </button>
                        <button
                          onClick={[Function]}
                          style={
                            Object {
                              "background": "none",
                              "border": "0 none",
                              "color": "gray",
                              "cursor": "pointer",
                              "display": "inline-block",
                            }
                          }
                          type="button"
                        >
                          ...
                        </button>
                        <div
                          style={
                            Object {
                              "marginLeft": 15,
                            }
                          }
                        >
                          <span
                            style={
                              Object {
                                "whiteSpace": "nowrap",
                              }
                            }
                          >
                            key
                            ?
                            :
                             
                          </span>
                          <span>
                            string
                          </span>
                          ,
                        </div>
                        <div
                          style={
                            Object {
                              "marginLeft": 15,
                            }
                          }
                        >
                          <span
                            style={
                              Object {
                                "whiteSpace": "nowrap",
                              }
                            }
                          >
                            values
                            ?
                            :
                             
                          </span>
                          <span>
                            array
                          </span>
                          ,
                        </div>
                        <button
                          onClick={[Function]}
                          style={
                            Object {
                              "background": "none",
                              "border": "0 none",
                              "color": "gray",
                              "cursor": "pointer",
                              "display": "inline-block",
                            }
                          }
                          type="button"
                        >
                          }
                        </button>
                      </span>
                    </span>
                    <span>
                      ]
                    </span>
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  handleMouseEnterDataElem
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    func
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  handleMouseLeaveDataElem
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    func
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  innerLeft
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    number
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  Used to position the group.
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  innerTop
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    number
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  Used to position the group.
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  xScale
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    func
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  yAxisFormat
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    func
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  yScale
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    func
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  
                </td>
              </tr>
            </tbody>
          </table>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Presentational|Chart/Components/ChartDataLayerStackedBars default 1`] = `
<div>
  <div
    id="story-root"
    style={Object {}}
  >
    <div
      className="nature-graphic"
    >
      <svg
        aria-hidden={true}
        focusable={false}
        height="300px"
        viewBox="0 0 600 300"
        width="600px"
      >
        <g
          transform="translate(20,20)"
        >
          <g>
            <g>
              <rect
                fill="#EA5153"
                height={0.75}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                opacity={1}
                width={23.47826086956522}
                x={0}
                y={239.25}
              />
              <rect
                fill="#EA5153"
                height={1.1999999999999886}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                opacity={1}
                width={23.47826086956522}
                x={46.95652173913044}
                y={238.8}
              />
              <rect
                fill="#EA5153"
                height={1.6500000000000057}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                opacity={1}
                width={23.47826086956522}
                x={93.91304347826087}
                y={238.35}
              />
              <rect
                fill="#EA5153"
                height={2.5500000000000114}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                opacity={1}
                width={23.47826086956522}
                x={140.8695652173913}
                y={237.45}
              />
              <rect
                fill="#EA5153"
                height={3.75}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                opacity={1}
                width={23.47826086956522}
                x={187.82608695652175}
                y={236.25}
              />
              <rect
                fill="#EA5153"
                height={5.699999999999989}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                opacity={1}
                width={23.47826086956522}
                x={234.7826086956522}
                y={234.3}
              />
              <rect
                fill="#EA5153"
                height={8.550000000000011}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                opacity={1}
                width={23.47826086956522}
                x={281.7391304347826}
                y={231.45}
              />
              <rect
                fill="#EA5153"
                height={12.75}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                opacity={1}
                width={23.47826086956522}
                x={328.69565217391306}
                y={227.25}
              />
              <rect
                fill="#EA5153"
                height={19.19999999999999}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                opacity={1}
                width={23.47826086956522}
                x={375.6521739130435}
                y={220.8}
              />
              <rect
                fill="#EA5153"
                height={28.80000000000001}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                opacity={1}
                width={23.47826086956522}
                x={422.60869565217394}
                y={211.2}
              />
              <rect
                fill="#EA5153"
                height={43.19999999999999}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                opacity={1}
                width={23.47826086956522}
                x={469.5652173913044}
                y={196.8}
              />
              <rect
                fill="#EA5153"
                height={64.80000000000001}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                opacity={1}
                width={23.47826086956522}
                x={516.5217391304348}
                y={175.2}
              />
            </g>
          </g>
          <g>
            <g>
              <rect
                fill="#75C6C5"
                height={0.5999999999999943}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                opacity={1}
                width={23.47826086956522}
                x={0}
                y={238.65}
              />
              <rect
                fill="#75C6C5"
                height={0.75}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                opacity={1}
                width={23.47826086956522}
                x={46.95652173913044}
                y={238.05}
              />
              <rect
                fill="#75C6C5"
                height={0.9000000000000057}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                opacity={1}
                width={23.47826086956522}
                x={93.91304347826087}
                y={237.45}
              />
              <rect
                fill="#75C6C5"
                height={1.5}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                opacity={1}
                width={23.47826086956522}
                x={140.8695652173913}
                y={235.95}
              />
              <rect
                fill="#75C6C5"
                height={3.5999999999999943}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                opacity={1}
                width={23.47826086956522}
                x={187.82608695652175}
                y={232.65}
              />
              <rect
                fill="#75C6C5"
                height={4.800000000000011}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                opacity={1}
                width={23.47826086956522}
                x={234.7826086956522}
                y={229.5}
              />
              <rect
                fill="#75C6C5"
                height={6}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                opacity={1}
                width={23.47826086956522}
                x={281.7391304347826}
                y={225.45}
              />
              <rect
                fill="#75C6C5"
                height={7.5}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                opacity={1}
                width={23.47826086956522}
                x={328.69565217391306}
                y={219.75}
              />
              <rect
                fill="#75C6C5"
                height={12}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                opacity={1}
                width={23.47826086956522}
                x={375.6521739130435}
                y={208.8}
              />
              <rect
                fill="#75C6C5"
                height={37.5}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                opacity={1}
                width={23.47826086956522}
                x={422.60869565217394}
                y={173.7}
              />
              <rect
                fill="#75C6C5"
                height={45}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                opacity={1}
                width={23.47826086956522}
                x={469.5652173913044}
                y={151.8}
              />
              <rect
                fill="#75C6C5"
                height={52.5}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                opacity={1}
                width={23.47826086956522}
                x={516.5217391304348}
                y={122.69999999999999}
              />
            </g>
          </g>
          <g>
            <g>
              <rect
                fill="#5A527E"
                height={0.45000000000001705}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                opacity={1}
                width={23.47826086956522}
                x={0}
                y={238.2}
              />
              <rect
                fill="#5A527E"
                height={0.75}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                opacity={1}
                width={23.47826086956522}
                x={46.95652173913044}
                y={237.3}
              />
              <rect
                fill="#5A527E"
                height={0.75}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                opacity={1}
                width={23.47826086956522}
                x={93.91304347826087}
                y={236.7}
              />
              <rect
                fill="#5A527E"
                height={1.5}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                opacity={1}
                width={23.47826086956522}
                x={140.8695652173913}
                y={234.45}
              />
              <rect
                fill="#5A527E"
                height={3}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                opacity={1}
                width={23.47826086956522}
                x={187.82608695652175}
                y={229.65}
              />
              <rect
                fill="#5A527E"
                height={1.5}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                opacity={1}
                width={23.47826086956522}
                x={234.7826086956522}
                y={228}
              />
              <rect
                fill="#5A527E"
                height={3}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                opacity={1}
                width={23.47826086956522}
                x={281.7391304347826}
                y={222.45}
              />
              <rect
                fill="#5A527E"
                height={3}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                opacity={1}
                width={23.47826086956522}
                x={328.69565217391306}
                y={216.75}
              />
              <rect
                fill="#5A527E"
                height={9}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                opacity={1}
                width={23.47826086956522}
                x={375.6521739130435}
                y={199.8}
              />
              <rect
                fill="#5A527E"
                height={15}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                opacity={1}
                width={23.47826086956522}
                x={422.60869565217394}
                y={158.7}
              />
              <rect
                fill="#5A527E"
                height={37.50000000000003}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                opacity={1}
                width={23.47826086956522}
                x={469.5652173913044}
                y={114.29999999999998}
              />
              <rect
                fill="#5A527E"
                height={41.99999999999997}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                opacity={1}
                width={23.47826086956522}
                x={516.5217391304348}
                y={80.70000000000002}
              />
            </g>
          </g>
          <g>
            <g>
              <rect
                fill="#8B0D16"
                height={0.29999999999998295}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                opacity={1}
                width={23.47826086956522}
                x={0}
                y={237.9}
              />
              <rect
                fill="#8B0D16"
                height={0.9000000000000057}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                opacity={1}
                width={23.47826086956522}
                x={46.95652173913044}
                y={236.4}
              />
              <rect
                fill="#8B0D16"
                height={1.1999999999999886}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                opacity={1}
                width={23.47826086956522}
                x={93.91304347826087}
                y={235.5}
              />
              <rect
                fill="#8B0D16"
                height={3}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                opacity={1}
                width={23.47826086956522}
                x={140.8695652173913}
                y={231.45}
              />
              <rect
                fill="#8B0D16"
                height={4.5}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                opacity={1}
                width={23.47826086956522}
                x={187.82608695652175}
                y={225.15}
              />
              <rect
                fill="#8B0D16"
                height={13.5}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                opacity={1}
                width={23.47826086956522}
                x={234.7826086956522}
                y={214.5}
              />
              <rect
                fill="#8B0D16"
                height={15}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                opacity={1}
                width={23.47826086956522}
                x={281.7391304347826}
                y={207.45}
              />
              <rect
                fill="#8B0D16"
                height={30}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                opacity={1}
                width={23.47826086956522}
                x={328.69565217391306}
                y={186.75}
              />
              <rect
                fill="#8B0D16"
                height={30}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                opacity={1}
                width={23.47826086956522}
                x={375.6521739130435}
                y={169.8}
              />
              <rect
                fill="#8B0D16"
                height={27}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                opacity={1}
                width={23.47826086956522}
                x={422.60869565217394}
                y={131.7}
              />
              <rect
                fill="#8B0D16"
                height={31.5}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                opacity={1}
                width={23.47826086956522}
                x={469.5652173913044}
                y={82.79999999999998}
              />
              <rect
                fill="#8B0D16"
                height={30}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                opacity={1}
                width={23.47826086956522}
                x={516.5217391304348}
                y={50.70000000000002}
              />
            </g>
          </g>
          <g>
            <g>
              <rect
                fill="#8FC297"
                height={0.15000000000000568}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                opacity={1}
                width={23.47826086956522}
                x={0}
                y={237.75}
              />
              <rect
                fill="#8FC297"
                height={1.0500000000000114}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                opacity={1}
                width={23.47826086956522}
                x={46.95652173913044}
                y={235.35}
              />
              <rect
                fill="#8FC297"
                height={4.5}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                opacity={1}
                width={23.47826086956522}
                x={93.91304347826087}
                y={231}
              />
              <rect
                fill="#8FC297"
                height={7.5}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                opacity={1}
                width={23.47826086956522}
                x={140.8695652173913}
                y={223.95}
              />
              <rect
                fill="#8FC297"
                height={13.5}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                opacity={1}
                width={23.47826086956522}
                x={187.82608695652175}
                y={211.65}
              />
              <rect
                fill="#8FC297"
                height={9}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                opacity={1}
                width={23.47826086956522}
                x={234.7826086956522}
                y={205.5}
              />
              <rect
                fill="#8FC297"
                height={22.5}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                opacity={1}
                width={23.47826086956522}
                x={281.7391304347826}
                y={184.95}
              />
              <rect
                fill="#8FC297"
                height={16.5}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                opacity={1}
                width={23.47826086956522}
                x={328.69565217391306}
                y={170.25}
              />
              <rect
                fill="#8FC297"
                height={24}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                opacity={1}
                width={23.47826086956522}
                x={375.6521739130435}
                y={145.8}
              />
              <rect
                fill="#8FC297"
                height={45}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                opacity={1}
                width={23.47826086956522}
                x={422.60869565217394}
                y={86.69999999999999}
              />
              <rect
                fill="#8FC297"
                height={52.5}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                opacity={1}
                width={23.47826086956522}
                x={469.5652173913044}
                y={30.299999999999983}
              />
              <rect
                fill="#8FC297"
                height={37.5}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                opacity={1}
                width={23.47826086956522}
                x={516.5217391304348}
                y={13.200000000000017}
              />
            </g>
          </g>
        </g>
      </svg>
    </div>
  </div>
  <div>
    <div
      style={
        Object {
          "backgroundColor": "#fff",
          "border": "1px solid #eee",
          "borderRadius": "2px",
          "color": "black",
          "fontFamily": "Helvetica Neue, Helvetica, Segoe UI, Arial, freesans, sans-serif",
          "fontSize": "15px",
          "fontWeight": 300,
          "lineHeight": 1.45,
          "marginBottom": "20px",
          "marginTop": "20px",
          "padding": "20px 40px 40px",
        }
      }
    >
      <div
        style={
          Object {
            "marginBottom": 0,
          }
        }
      >
        <h2
          id="chartdatalayerstackedbars"
          style={
            Object {
              "fontSize": "30px",
              "fontWeight": 600,
              "margin": 0,
              "padding": 0,
            }
          }
        >
          ChartDataLayerStackedBars
        </h2>
        <div
          style={
            Object {
              "fontSize": "15px",
            }
          }
        >
          Returns an SVG group containing an array of 
          <code>
            ChartStackedBars
          </code>
           components.
Each group of bars is passed an index so that the bars can be positioned
and coloured within their stack.
        </div>
        <div
          style={
            Object {
              "fontSize": "15px",
            }
          }
        >
          The group is positioned by innerLeft and innerTop all other props
are passed to the the 
          <code>
            ChartStackedBars
          </code>
           components.
        </div>
      </div>
      <div>
        <h1
          style={
            Object {
              "borderBottom": "1px solid #EEE",
              "fontSize": "25px",
              "margin": "20px 0 0 0",
              "padding": "0 0 5px 0",
            }
          }
        >
          Prop Types
        </h1>
        <div>
          <h3
            style={
              Object {
                "margin": "20px 0 0 0",
              }
            }
          >
            "
            ChartDataLayerStackedBars
            " Component
          </h3>
          <table
            className="info-table"
          >
            <thead>
              <tr>
                <th>
                  property
                </th>
                <th>
                  propType
                </th>
                <th>
                  required
                </th>
                <th>
                  default
                </th>
                <th>
                  description
                </th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  chartInnerWidth
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    number
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  handleMouseEnterDataElem
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    func
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  handleMouseLeaveDataElem
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    func
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  innerLeft
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    number
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  Used to position the group.
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  innerTop
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    number
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  Used to position the group.
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  stacked
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    <span>
                      [
                    </span>
                    <span>
                      <span>
                        <span>
                          [
                        </span>
                        <span>
                          <span>
                            array
                          </span>
                        </span>
                        <span>
                          ]
                        </span>
                      </span>
                    </span>
                    <span>
                      ]
                    </span>
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  xScale
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    func
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  yAxisFormat
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    func
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  yScale
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    func
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  
                </td>
              </tr>
            </tbody>
          </table>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Presentational|Chart/Components/ChartDots default 1`] = `
<div>
  <div
    id="story-root"
    style={Object {}}
  >
    <div
      className="nature-graphic"
    >
      <svg
        aria-hidden={true}
        focusable={false}
        height="300px"
        viewBox="0 0 600 300"
        width="600px"
      >
        <g>
          <circle
            cx={0}
            cy={237}
            fill="#EA5153"
            index={0}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            r="4px"
          />
          <circle
            cx={49.09090909090909}
            cy={235.2}
            fill="#EA5153"
            index={0}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            r="4px"
          />
          <circle
            cx={98.18181818181819}
            cy={233.4}
            fill="#EA5153"
            index={0}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            r="4px"
          />
          <circle
            cx={147.27272727272725}
            cy={229.8}
            fill="#EA5153"
            index={0}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            r="4px"
          />
          <circle
            cx={196.36363636363637}
            cy={225}
            fill="#EA5153"
            index={0}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            r="4px"
          />
          <circle
            cx={245.45454545454544}
            cy={217.2}
            fill="#EA5153"
            index={0}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            r="4px"
          />
          <circle
            cx={294.5454545454545}
            cy={205.8}
            fill="#EA5153"
            index={0}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            r="4px"
          />
          <circle
            cx={343.6363636363636}
            cy={189}
            fill="#EA5153"
            index={0}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            r="4px"
          />
          <circle
            cx={392.72727272727275}
            cy={163.2}
            fill="#EA5153"
            index={0}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            r="4px"
          />
          <circle
            cx={441.81818181818187}
            cy={124.80000000000001}
            fill="#EA5153"
            index={0}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            r="4px"
          />
          <circle
            cx={490.9090909090909}
            cy={67.20000000000002}
            fill="#EA5153"
            index={0}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            r="4px"
          />
          <circle
            cx={540}
            cy={-19.200000000000045}
            fill="#EA5153"
            index={0}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            r="4px"
          />
        </g>
      </svg>
    </div>
  </div>
  <div>
    <div
      style={
        Object {
          "backgroundColor": "#fff",
          "border": "1px solid #eee",
          "borderRadius": "2px",
          "color": "black",
          "fontFamily": "Helvetica Neue, Helvetica, Segoe UI, Arial, freesans, sans-serif",
          "fontSize": "15px",
          "fontWeight": 300,
          "lineHeight": 1.45,
          "marginBottom": "20px",
          "marginTop": "20px",
          "padding": "20px 40px 40px",
        }
      }
    >
      <div
        style={
          Object {
            "marginBottom": 0,
          }
        }
      >
        <h2
          id="chartdots"
          style={
            Object {
              "fontSize": "30px",
              "fontWeight": 600,
              "margin": 0,
              "padding": 0,
            }
          }
        >
          ChartDots
        </h2>
        <div
          style={
            Object {
              "fontSize": "15px",
            }
          }
        >
          Returns an SVG group containing and array of SVG 
          <code>
            circle
          </code>
           elements
to form the ‘marks’ on a scatter plot or the ‘data points’ on a line
chart - that can be interacted with or used table cells.
        </div>
        <div
          style={
            Object {
              "fontSize": "15px",
            }
          }
        >
          When a dot is hovered over, 
          <code>
            handleMouseEnterDataElem
          </code>
           is called and
returns the information needed to fill and positon a tooltip.
        </div>
        <div
          style={
            Object {
              "fontSize": "15px",
            }
          }
        >
          Similarly when the mouse movess away, 
          <code>
            handleMouseLeaveDataElem
          </code>
          
is called to hide the tooltip.
        </div>
        <div
          style={
            Object {
              "fontSize": "15px",
            }
          }
        >
          TODO: When the bars are hovered over their radius is changed using js.
This could be done with a CSS transform.
        </div>
        <div
          style={
            Object {
              "fontSize": "15px",
            }
          }
        >
          TODO: 
          <code>
            onMouseEnter
          </code>
           and 
          <code>
            onMouseLeave
          </code>
           could be extracted into generic
functions, so that the same function could be used by bars.
For instance, dot could store its ‘alignment’ as a variable to be passed
to the function.
        </div>
      </div>
      <div>
        <h1
          style={
            Object {
              "borderBottom": "1px solid #EEE",
              "fontSize": "25px",
              "margin": "20px 0 0 0",
              "padding": "0 0 5px 0",
            }
          }
        >
          Prop Types
        </h1>
        <div>
          <h3
            style={
              Object {
                "margin": "20px 0 0 0",
              }
            }
          >
            "
            ChartDots
            " Component
          </h3>
          <table
            className="info-table"
          >
            <thead>
              <tr>
                <th>
                  property
                </th>
                <th>
                  propType
                </th>
                <th>
                  required
                </th>
                <th>
                  default
                </th>
                <th>
                  description
                </th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  chartInnerWidth
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    number
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  Width of chart area - used to position tooltip
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  columnNames
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    <span>
                      [
                    </span>
                    <span>
                      <span>
                        <span>
                          string
                        </span>
                        <span>
                           | 
                        </span>
                        <span>
                          number
                        </span>
                      </span>
                    </span>
                    <span>
                      ]
                    </span>
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  Used to label data points so they can be positioned with the x scale
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  data
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    <span>
                      [
                    </span>
                    <span>
                      <span>
                        <button
                          onClick={[Function]}
                          style={
                            Object {
                              "background": "none",
                              "border": "0 none",
                              "color": "gray",
                              "cursor": "pointer",
                              "display": "inline-block",
                            }
                          }
                          type="button"
                        >
                          {
                        </button>
                        <button
                          onClick={[Function]}
                          style={
                            Object {
                              "background": "none",
                              "border": "0 none",
                              "color": "gray",
                              "cursor": "pointer",
                              "display": "inline-block",
                            }
                          }
                          type="button"
                        >
                          ...
                        </button>
                        <div
                          style={
                            Object {
                              "marginLeft": 15,
                            }
                          }
                        >
                          <span
                            style={
                              Object {
                                "whiteSpace": "nowrap",
                              }
                            }
                          >
                            key
                            ?
                            :
                             
                          </span>
                          <span>
                            string
                          </span>
                          ,
                        </div>
                        <div
                          style={
                            Object {
                              "marginLeft": 15,
                            }
                          }
                        >
                          <span
                            style={
                              Object {
                                "whiteSpace": "nowrap",
                              }
                            }
                          >
                            values
                            ?
                            :
                             
                          </span>
                          <span>
                            array
                          </span>
                          ,
                        </div>
                        <button
                          onClick={[Function]}
                          style={
                            Object {
                              "background": "none",
                              "border": "0 none",
                              "color": "gray",
                              "cursor": "pointer",
                              "display": "inline-block",
                            }
                          }
                          type="button"
                        >
                          }
                        </button>
                      </span>
                    </span>
                    <span>
                      ]
                    </span>
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  Array of { key, values: []} - only data[index].values will be rendered
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  handleMouseEnterDataElem
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    func
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  <span>
                     
                    Function to be called when the cursor enters a dot.
                  </span>
                  <span>
                    <br />
                     
                    Returns an object of {x, y, value, alignment }
                  </span>
                  <span>
                    <br />
                     
                    used to position the tooltip.
                  </span>
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  handleMouseLeaveDataElem
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    func
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  Function to be called when the cursor leaves a dot
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  index
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    number
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  Used to select data range and apply a stroke color
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  innerLeft
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    number
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  Used to correctly position the tooltip
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  innerTop
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    number
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  Used to correctly position the tooltip
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  xScale
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    func
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  d3.scaleLinear used to position the bars horizontally
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  yAxisFormat
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    func
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  <span>
                     
                    Used to format the 'value' that is returned to
                  </span>
                  <span>
                    <br />
                     
                    handleMouseEnterDataElem to be displayed in the tooltip.
                  </span>
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  yScale
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    func
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  d3.scaleLinear used to position the bars vertically
                </td>
              </tr>
            </tbody>
          </table>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Presentational|Chart/Components/ChartDots multiple 1`] = `
<div>
  <div
    id="story-root"
    style={Object {}}
  >
    <div
      className="nature-graphic"
    >
      <svg
        aria-hidden={true}
        focusable={false}
        height="300px"
        viewBox="0 0 600 300"
        width="600px"
      >
        <g>
          <circle
            cx={0}
            cy={237}
            fill="#EA5153"
            index={0}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            r="4px"
          />
          <circle
            cx={49.09090909090909}
            cy={235.2}
            fill="#EA5153"
            index={0}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            r="4px"
          />
          <circle
            cx={98.18181818181819}
            cy={233.4}
            fill="#EA5153"
            index={0}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            r="4px"
          />
          <circle
            cx={147.27272727272725}
            cy={229.8}
            fill="#EA5153"
            index={0}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            r="4px"
          />
          <circle
            cx={196.36363636363637}
            cy={225}
            fill="#EA5153"
            index={0}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            r="4px"
          />
          <circle
            cx={245.45454545454544}
            cy={217.2}
            fill="#EA5153"
            index={0}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            r="4px"
          />
          <circle
            cx={294.5454545454545}
            cy={205.8}
            fill="#EA5153"
            index={0}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            r="4px"
          />
          <circle
            cx={343.6363636363636}
            cy={189}
            fill="#EA5153"
            index={0}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            r="4px"
          />
          <circle
            cx={392.72727272727275}
            cy={163.2}
            fill="#EA5153"
            index={0}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            r="4px"
          />
          <circle
            cx={441.81818181818187}
            cy={124.80000000000001}
            fill="#EA5153"
            index={0}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            r="4px"
          />
          <circle
            cx={490.9090909090909}
            cy={67.20000000000002}
            fill="#EA5153"
            index={0}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            r="4px"
          />
          <circle
            cx={540}
            cy={-19.200000000000045}
            fill="#EA5153"
            index={0}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            r="4px"
          />
        </g>
        <g>
          <circle
            cx={0}
            cy={237.6}
            fill="#75C6C5"
            index={1}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            r="4px"
          />
          <circle
            cx={49.09090909090909}
            cy={237}
            fill="#75C6C5"
            index={1}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            r="4px"
          />
          <circle
            cx={98.18181818181819}
            cy={236.4}
            fill="#75C6C5"
            index={1}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            r="4px"
          />
          <circle
            cx={147.27272727272725}
            cy={234}
            fill="#75C6C5"
            index={1}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            r="4px"
          />
          <circle
            cx={196.36363636363637}
            cy={225.6}
            fill="#75C6C5"
            index={1}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            r="4px"
          />
          <circle
            cx={245.45454545454544}
            cy={220.8}
            fill="#75C6C5"
            index={1}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            r="4px"
          />
          <circle
            cx={294.5454545454545}
            cy={216}
            fill="#75C6C5"
            index={1}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            r="4px"
          />
          <circle
            cx={343.6363636363636}
            cy={210}
            fill="#75C6C5"
            index={1}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            r="4px"
          />
          <circle
            cx={392.72727272727275}
            cy={192}
            fill="#75C6C5"
            index={1}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            r="4px"
          />
          <circle
            cx={441.81818181818187}
            cy={90}
            fill="#75C6C5"
            index={1}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            r="4px"
          />
          <circle
            cx={490.9090909090909}
            cy={60}
            fill="#75C6C5"
            index={1}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            r="4px"
          />
          <circle
            cx={540}
            cy={30}
            fill="#75C6C5"
            index={1}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            r="4px"
          />
        </g>
        <g>
          <circle
            cx={0}
            cy={238.2}
            fill="#5A527E"
            index={2}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            r="4px"
          />
          <circle
            cx={49.09090909090909}
            cy={237}
            fill="#5A527E"
            index={2}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            r="4px"
          />
          <circle
            cx={98.18181818181819}
            cy={237}
            fill="#5A527E"
            index={2}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            r="4px"
          />
          <circle
            cx={147.27272727272725}
            cy={234}
            fill="#5A527E"
            index={2}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            r="4px"
          />
          <circle
            cx={196.36363636363637}
            cy={228}
            fill="#5A527E"
            index={2}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            r="4px"
          />
          <circle
            cx={245.45454545454544}
            cy={234}
            fill="#5A527E"
            index={2}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            r="4px"
          />
          <circle
            cx={294.5454545454545}
            cy={228}
            fill="#5A527E"
            index={2}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            r="4px"
          />
          <circle
            cx={343.6363636363636}
            cy={228}
            fill="#5A527E"
            index={2}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            r="4px"
          />
          <circle
            cx={392.72727272727275}
            cy={204}
            fill="#5A527E"
            index={2}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            r="4px"
          />
          <circle
            cx={441.81818181818187}
            cy={180}
            fill="#5A527E"
            index={2}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            r="4px"
          />
          <circle
            cx={490.9090909090909}
            cy={90}
            fill="#5A527E"
            index={2}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            r="4px"
          />
          <circle
            cx={540}
            cy={72}
            fill="#5A527E"
            index={2}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            r="4px"
          />
        </g>
        <g>
          <circle
            cx={0}
            cy={238.8}
            fill="#8B0D16"
            index={3}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            r="4px"
          />
          <circle
            cx={49.09090909090909}
            cy={236.4}
            fill="#8B0D16"
            index={3}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            r="4px"
          />
          <circle
            cx={98.18181818181819}
            cy={235.2}
            fill="#8B0D16"
            index={3}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            r="4px"
          />
          <circle
            cx={147.27272727272725}
            cy={228}
            fill="#8B0D16"
            index={3}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            r="4px"
          />
          <circle
            cx={196.36363636363637}
            cy={222}
            fill="#8B0D16"
            index={3}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            r="4px"
          />
          <circle
            cx={245.45454545454544}
            cy={186}
            fill="#8B0D16"
            index={3}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            r="4px"
          />
          <circle
            cx={294.5454545454545}
            cy={180}
            fill="#8B0D16"
            index={3}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            r="4px"
          />
          <circle
            cx={343.6363636363636}
            cy={120}
            fill="#8B0D16"
            index={3}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            r="4px"
          />
          <circle
            cx={392.72727272727275}
            cy={120}
            fill="#8B0D16"
            index={3}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            r="4px"
          />
          <circle
            cx={441.81818181818187}
            cy={132}
            fill="#8B0D16"
            index={3}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            r="4px"
          />
          <circle
            cx={490.9090909090909}
            cy={114}
            fill="#8B0D16"
            index={3}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            r="4px"
          />
          <circle
            cx={540}
            cy={120}
            fill="#8B0D16"
            index={3}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            r="4px"
          />
        </g>
        <g>
          <circle
            cx={0}
            cy={239.4}
            fill="#8FC297"
            index={4}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            r="4px"
          />
          <circle
            cx={49.09090909090909}
            cy={235.8}
            fill="#8FC297"
            index={4}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            r="4px"
          />
          <circle
            cx={98.18181818181819}
            cy={222}
            fill="#8FC297"
            index={4}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            r="4px"
          />
          <circle
            cx={147.27272727272725}
            cy={210}
            fill="#8FC297"
            index={4}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            r="4px"
          />
          <circle
            cx={196.36363636363637}
            cy={186}
            fill="#8FC297"
            index={4}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            r="4px"
          />
          <circle
            cx={245.45454545454544}
            cy={204}
            fill="#8FC297"
            index={4}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            r="4px"
          />
          <circle
            cx={294.5454545454545}
            cy={150}
            fill="#8FC297"
            index={4}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            r="4px"
          />
          <circle
            cx={343.6363636363636}
            cy={174}
            fill="#8FC297"
            index={4}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            r="4px"
          />
          <circle
            cx={392.72727272727275}
            cy={144}
            fill="#8FC297"
            index={4}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            r="4px"
          />
          <circle
            cx={441.81818181818187}
            cy={60}
            fill="#8FC297"
            index={4}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            r="4px"
          />
          <circle
            cx={490.9090909090909}
            cy={30}
            fill="#8FC297"
            index={4}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            r="4px"
          />
          <circle
            cx={540}
            cy={90}
            fill="#8FC297"
            index={4}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            r="4px"
          />
        </g>
      </svg>
    </div>
  </div>
  <div>
    <div
      style={
        Object {
          "backgroundColor": "#fff",
          "border": "1px solid #eee",
          "borderRadius": "2px",
          "color": "black",
          "fontFamily": "Helvetica Neue, Helvetica, Segoe UI, Arial, freesans, sans-serif",
          "fontSize": "15px",
          "fontWeight": 300,
          "lineHeight": 1.45,
          "marginBottom": "20px",
          "marginTop": "20px",
          "padding": "20px 40px 40px",
        }
      }
    >
      <div
        style={
          Object {
            "marginBottom": 0,
          }
        }
      >
        <h2
          id="chartdots"
          style={
            Object {
              "fontSize": "30px",
              "fontWeight": 600,
              "margin": 0,
              "padding": 0,
            }
          }
        >
          ChartDots
        </h2>
        <div
          style={
            Object {
              "fontSize": "15px",
            }
          }
        >
          Returns an SVG group containing and array of SVG 
          <code>
            circle
          </code>
           elements
to form the ‘marks’ on a scatter plot or the ‘data points’ on a line
chart - that can be interacted with or used table cells.
        </div>
        <div
          style={
            Object {
              "fontSize": "15px",
            }
          }
        >
          When a dot is hovered over, 
          <code>
            handleMouseEnterDataElem
          </code>
           is called and
returns the information needed to fill and positon a tooltip.
        </div>
        <div
          style={
            Object {
              "fontSize": "15px",
            }
          }
        >
          Similarly when the mouse movess away, 
          <code>
            handleMouseLeaveDataElem
          </code>
          
is called to hide the tooltip.
        </div>
        <div
          style={
            Object {
              "fontSize": "15px",
            }
          }
        >
          TODO: When the bars are hovered over their radius is changed using js.
This could be done with a CSS transform.
        </div>
        <div
          style={
            Object {
              "fontSize": "15px",
            }
          }
        >
          TODO: 
          <code>
            onMouseEnter
          </code>
           and 
          <code>
            onMouseLeave
          </code>
           could be extracted into generic
functions, so that the same function could be used by bars.
For instance, dot could store its ‘alignment’ as a variable to be passed
to the function.
        </div>
      </div>
      <div>
        <h1
          style={
            Object {
              "borderBottom": "1px solid #EEE",
              "fontSize": "25px",
              "margin": "20px 0 0 0",
              "padding": "0 0 5px 0",
            }
          }
        >
          Prop Types
        </h1>
        <div>
          <h3
            style={
              Object {
                "margin": "20px 0 0 0",
              }
            }
          >
            "
            ChartDots
            " Component
          </h3>
          <table
            className="info-table"
          >
            <thead>
              <tr>
                <th>
                  property
                </th>
                <th>
                  propType
                </th>
                <th>
                  required
                </th>
                <th>
                  default
                </th>
                <th>
                  description
                </th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  chartInnerWidth
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    number
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  Width of chart area - used to position tooltip
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  columnNames
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    <span>
                      [
                    </span>
                    <span>
                      <span>
                        <span>
                          string
                        </span>
                        <span>
                           | 
                        </span>
                        <span>
                          number
                        </span>
                      </span>
                    </span>
                    <span>
                      ]
                    </span>
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  Used to label data points so they can be positioned with the x scale
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  data
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    <span>
                      [
                    </span>
                    <span>
                      <span>
                        <button
                          onClick={[Function]}
                          style={
                            Object {
                              "background": "none",
                              "border": "0 none",
                              "color": "gray",
                              "cursor": "pointer",
                              "display": "inline-block",
                            }
                          }
                          type="button"
                        >
                          {
                        </button>
                        <button
                          onClick={[Function]}
                          style={
                            Object {
                              "background": "none",
                              "border": "0 none",
                              "color": "gray",
                              "cursor": "pointer",
                              "display": "inline-block",
                            }
                          }
                          type="button"
                        >
                          ...
                        </button>
                        <div
                          style={
                            Object {
                              "marginLeft": 15,
                            }
                          }
                        >
                          <span
                            style={
                              Object {
                                "whiteSpace": "nowrap",
                              }
                            }
                          >
                            key
                            ?
                            :
                             
                          </span>
                          <span>
                            string
                          </span>
                          ,
                        </div>
                        <div
                          style={
                            Object {
                              "marginLeft": 15,
                            }
                          }
                        >
                          <span
                            style={
                              Object {
                                "whiteSpace": "nowrap",
                              }
                            }
                          >
                            values
                            ?
                            :
                             
                          </span>
                          <span>
                            array
                          </span>
                          ,
                        </div>
                        <button
                          onClick={[Function]}
                          style={
                            Object {
                              "background": "none",
                              "border": "0 none",
                              "color": "gray",
                              "cursor": "pointer",
                              "display": "inline-block",
                            }
                          }
                          type="button"
                        >
                          }
                        </button>
                      </span>
                    </span>
                    <span>
                      ]
                    </span>
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  Array of { key, values: []} - only data[index].values will be rendered
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  handleMouseEnterDataElem
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    func
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  <span>
                     
                    Function to be called when the cursor enters a dot.
                  </span>
                  <span>
                    <br />
                     
                    Returns an object of {x, y, value, alignment }
                  </span>
                  <span>
                    <br />
                     
                    used to position the tooltip.
                  </span>
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  handleMouseLeaveDataElem
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    func
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  Function to be called when the cursor leaves a dot
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  index
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    number
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  Used to select data range and apply a stroke color
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  innerLeft
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    number
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  Used to correctly position the tooltip
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  innerTop
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    number
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  Used to correctly position the tooltip
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  xScale
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    func
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  d3.scaleLinear used to position the bars horizontally
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  yAxisFormat
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    func
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  <span>
                     
                    Used to format the 'value' that is returned to
                  </span>
                  <span>
                    <br />
                     
                    handleMouseEnterDataElem to be displayed in the tooltip.
                  </span>
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  yScale
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    func
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  d3.scaleLinear used to position the bars vertically
                </td>
              </tr>
            </tbody>
          </table>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Presentational|Chart/Components/ChartGroupedBars alt data 1`] = `
<div>
  <div
    id="story-root"
    style={Object {}}
  >
    <div
      className="nature-graphic"
    >
      <svg
        aria-hidden={true}
        focusable={false}
        height="300px"
        viewBox="0 0 600 300"
        width="600px"
      >
        <g>
          <rect
            fill="#EA5153"
            height={164}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={9.667519181585677}
            x={0}
            y={96}
          />
          <rect
            fill="#EA5153"
            height={45.14285714285714}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={9.667519181585677}
            x={154.28571428571428}
            y={214.85714285714286}
          />
          <rect
            fill="#EA5153"
            height={36}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={9.667519181585677}
            x={308.57142857142856}
            y={224}
          />
          <rect
            fill="#EA5153"
            height={20.022857142857134}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={9.667519181585677}
            x={462.85714285714283}
            y={239.97714285714287}
          />
        </g>
      </svg>
    </div>
  </div>
  <div>
    <div
      style={
        Object {
          "backgroundColor": "#fff",
          "border": "1px solid #eee",
          "borderRadius": "2px",
          "color": "black",
          "fontFamily": "Helvetica Neue, Helvetica, Segoe UI, Arial, freesans, sans-serif",
          "fontSize": "15px",
          "fontWeight": 300,
          "lineHeight": 1.45,
          "marginBottom": "20px",
          "marginTop": "20px",
          "padding": "20px 40px 40px",
        }
      }
    >
      <div
        style={
          Object {
            "marginBottom": 0,
          }
        }
      >
        <h2
          id="chartgroupedbars"
          style={
            Object {
              "fontSize": "30px",
              "fontWeight": 600,
              "margin": 0,
              "padding": 0,
            }
          }
        >
          ChartGroupedBars
        </h2>
        <div
          style={
            Object {
              "fontSize": "15px",
            }
          }
        >
          Similar to 
          <code>
            ChartBars
          </code>
           component except an internal
scale is added so that the bars can be positioned
next to each other in groups.
TODO: Rename to 
          <code>
            ChartBarsGrouped
          </code>
        </div>
      </div>
      <div>
        <h1
          style={
            Object {
              "borderBottom": "1px solid #EEE",
              "fontSize": "25px",
              "margin": "20px 0 0 0",
              "padding": "0 0 5px 0",
            }
          }
        >
          Prop Types
        </h1>
        <div>
          <h3
            style={
              Object {
                "margin": "20px 0 0 0",
              }
            }
          >
            "
            ChartGroupedBars
            " Component
          </h3>
          <table
            className="info-table"
          >
            <thead>
              <tr>
                <th>
                  property
                </th>
                <th>
                  propType
                </th>
                <th>
                  required
                </th>
                <th>
                  default
                </th>
                <th>
                  description
                </th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  chartInnerHeight
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    number
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  Height of chart area - used to align bars to the baseline
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  chartInnerWidth
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    number
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  Width of chart area - used to position tooltip
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  columnNames
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    <span>
                      [
                    </span>
                    <span>
                      <span>
                        <span>
                          string
                        </span>
                        <span>
                           | 
                        </span>
                        <span>
                          number
                        </span>
                      </span>
                    </span>
                    <span>
                      ]
                    </span>
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  Used to label data points so they can be positioned with a band scale
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  data
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    <span>
                      [
                    </span>
                    <span>
                      <span>
                        <button
                          onClick={[Function]}
                          style={
                            Object {
                              "background": "none",
                              "border": "0 none",
                              "color": "gray",
                              "cursor": "pointer",
                              "display": "inline-block",
                            }
                          }
                          type="button"
                        >
                          {
                        </button>
                        <button
                          onClick={[Function]}
                          style={
                            Object {
                              "background": "none",
                              "border": "0 none",
                              "color": "gray",
                              "cursor": "pointer",
                              "display": "inline-block",
                            }
                          }
                          type="button"
                        >
                          ...
                        </button>
                        <div
                          style={
                            Object {
                              "marginLeft": 15,
                            }
                          }
                        >
                          <span
                            style={
                              Object {
                                "whiteSpace": "nowrap",
                              }
                            }
                          >
                            key
                            ?
                            :
                             
                          </span>
                          <span>
                            string
                          </span>
                          ,
                        </div>
                        <div
                          style={
                            Object {
                              "marginLeft": 15,
                            }
                          }
                        >
                          <span
                            style={
                              Object {
                                "whiteSpace": "nowrap",
                              }
                            }
                          >
                            values
                            ?
                            :
                             
                          </span>
                          <span>
                            array
                          </span>
                          ,
                        </div>
                        <button
                          onClick={[Function]}
                          style={
                            Object {
                              "background": "none",
                              "border": "0 none",
                              "color": "gray",
                              "cursor": "pointer",
                              "display": "inline-block",
                            }
                          }
                          type="button"
                        >
                          }
                        </button>
                      </span>
                    </span>
                    <span>
                      ]
                    </span>
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  Array of { key, values: []} - only data[index].values will be rendered
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  handleMouseEnterDataElem
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    func
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  <span>
                     
                    Function to be called when the cursor enters a bar.
                  </span>
                  <span>
                    <br />
                     
                    Returns an object of {x, y, value, alignment }
                  </span>
                  <span>
                    <br />
                     
                    used to position the tooltip.
                  </span>
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  handleMouseLeaveDataElem
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    func
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  Function to be called when the cursor leaves a bar
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  index
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    number
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  Used to select data range and apply a stroke color
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  innerLeft
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    number
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  Used to correctly position the tooltip
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  innerTop
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    number
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  Used to correctly position the tooltip
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  xScale
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    func
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  d3.scaleBand used to position the groups bars horizontally
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  xScaleInternal
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    func
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  d3.scaleBand used to position the bars horizontally within the groups
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  yAxisFormat
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    func
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  <span>
                     
                    Used to format the 'value' that is returned to handleMouseEnterDataElem
                  </span>
                  <span>
                    <br />
                     
                    to be displayed in the tooltip.
                  </span>
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  yScale
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    func
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  d3.scaleLinear used to determine the height of the bars
                </td>
              </tr>
            </tbody>
          </table>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Presentational|Chart/Components/ChartGroupedBars default 1`] = `
<div>
  <div
    id="story-root"
    style={Object {}}
  >
    <div
      className="nature-graphic"
    >
      <svg
        aria-hidden={true}
        focusable={false}
        height="300px"
        viewBox="0 0 600 300"
        width="600px"
      >
        <g>
          <rect
            fill="#EA5153"
            height={23}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={3.496762257169288}
            x={0}
            y={237}
          />
          <rect
            fill="#EA5153"
            height={24.80000000000001}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={3.496762257169288}
            x={46.95652173913044}
            y={235.2}
          />
          <rect
            fill="#EA5153"
            height={26.599999999999994}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={3.496762257169288}
            x={93.91304347826087}
            y={233.4}
          />
          <rect
            fill="#EA5153"
            height={30.19999999999999}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={3.496762257169288}
            x={140.8695652173913}
            y={229.8}
          />
          <rect
            fill="#EA5153"
            height={35}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={3.496762257169288}
            x={187.82608695652175}
            y={225}
          />
          <rect
            fill="#EA5153"
            height={42.80000000000001}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={3.496762257169288}
            x={234.7826086956522}
            y={217.2}
          />
          <rect
            fill="#EA5153"
            height={54.19999999999999}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={3.496762257169288}
            x={281.7391304347826}
            y={205.8}
          />
          <rect
            fill="#EA5153"
            height={71}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={3.496762257169288}
            x={328.69565217391306}
            y={189}
          />
          <rect
            fill="#EA5153"
            height={96.80000000000001}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={3.496762257169288}
            x={375.6521739130435}
            y={163.2}
          />
          <rect
            fill="#EA5153"
            height={135.2}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={3.496762257169288}
            x={422.60869565217394}
            y={124.80000000000001}
          />
          <rect
            fill="#EA5153"
            height={192.79999999999998}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={3.496762257169288}
            x={469.5652173913044}
            y={67.20000000000002}
          />
          <rect
            fill="#EA5153"
            height={279.20000000000005}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={3.496762257169288}
            x={516.5217391304348}
            y={-19.200000000000045}
          />
        </g>
      </svg>
    </div>
  </div>
  <div>
    <div
      style={
        Object {
          "backgroundColor": "#fff",
          "border": "1px solid #eee",
          "borderRadius": "2px",
          "color": "black",
          "fontFamily": "Helvetica Neue, Helvetica, Segoe UI, Arial, freesans, sans-serif",
          "fontSize": "15px",
          "fontWeight": 300,
          "lineHeight": 1.45,
          "marginBottom": "20px",
          "marginTop": "20px",
          "padding": "20px 40px 40px",
        }
      }
    >
      <div
        style={
          Object {
            "marginBottom": 0,
          }
        }
      >
        <h2
          id="chartgroupedbars"
          style={
            Object {
              "fontSize": "30px",
              "fontWeight": 600,
              "margin": 0,
              "padding": 0,
            }
          }
        >
          ChartGroupedBars
        </h2>
        <div
          style={
            Object {
              "fontSize": "15px",
            }
          }
        >
          Similar to 
          <code>
            ChartBars
          </code>
           component except an internal
scale is added so that the bars can be positioned
next to each other in groups.
TODO: Rename to 
          <code>
            ChartBarsGrouped
          </code>
        </div>
      </div>
      <div>
        <h1
          style={
            Object {
              "borderBottom": "1px solid #EEE",
              "fontSize": "25px",
              "margin": "20px 0 0 0",
              "padding": "0 0 5px 0",
            }
          }
        >
          Prop Types
        </h1>
        <div>
          <h3
            style={
              Object {
                "margin": "20px 0 0 0",
              }
            }
          >
            "
            ChartGroupedBars
            " Component
          </h3>
          <table
            className="info-table"
          >
            <thead>
              <tr>
                <th>
                  property
                </th>
                <th>
                  propType
                </th>
                <th>
                  required
                </th>
                <th>
                  default
                </th>
                <th>
                  description
                </th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  chartInnerHeight
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    number
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  Height of chart area - used to align bars to the baseline
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  chartInnerWidth
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    number
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  Width of chart area - used to position tooltip
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  columnNames
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    <span>
                      [
                    </span>
                    <span>
                      <span>
                        <span>
                          string
                        </span>
                        <span>
                           | 
                        </span>
                        <span>
                          number
                        </span>
                      </span>
                    </span>
                    <span>
                      ]
                    </span>
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  Used to label data points so they can be positioned with a band scale
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  data
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    <span>
                      [
                    </span>
                    <span>
                      <span>
                        <button
                          onClick={[Function]}
                          style={
                            Object {
                              "background": "none",
                              "border": "0 none",
                              "color": "gray",
                              "cursor": "pointer",
                              "display": "inline-block",
                            }
                          }
                          type="button"
                        >
                          {
                        </button>
                        <button
                          onClick={[Function]}
                          style={
                            Object {
                              "background": "none",
                              "border": "0 none",
                              "color": "gray",
                              "cursor": "pointer",
                              "display": "inline-block",
                            }
                          }
                          type="button"
                        >
                          ...
                        </button>
                        <div
                          style={
                            Object {
                              "marginLeft": 15,
                            }
                          }
                        >
                          <span
                            style={
                              Object {
                                "whiteSpace": "nowrap",
                              }
                            }
                          >
                            key
                            ?
                            :
                             
                          </span>
                          <span>
                            string
                          </span>
                          ,
                        </div>
                        <div
                          style={
                            Object {
                              "marginLeft": 15,
                            }
                          }
                        >
                          <span
                            style={
                              Object {
                                "whiteSpace": "nowrap",
                              }
                            }
                          >
                            values
                            ?
                            :
                             
                          </span>
                          <span>
                            array
                          </span>
                          ,
                        </div>
                        <button
                          onClick={[Function]}
                          style={
                            Object {
                              "background": "none",
                              "border": "0 none",
                              "color": "gray",
                              "cursor": "pointer",
                              "display": "inline-block",
                            }
                          }
                          type="button"
                        >
                          }
                        </button>
                      </span>
                    </span>
                    <span>
                      ]
                    </span>
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  Array of { key, values: []} - only data[index].values will be rendered
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  handleMouseEnterDataElem
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    func
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  <span>
                     
                    Function to be called when the cursor enters a bar.
                  </span>
                  <span>
                    <br />
                     
                    Returns an object of {x, y, value, alignment }
                  </span>
                  <span>
                    <br />
                     
                    used to position the tooltip.
                  </span>
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  handleMouseLeaveDataElem
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    func
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  Function to be called when the cursor leaves a bar
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  index
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    number
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  Used to select data range and apply a stroke color
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  innerLeft
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    number
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  Used to correctly position the tooltip
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  innerTop
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    number
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  Used to correctly position the tooltip
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  xScale
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    func
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  d3.scaleBand used to position the groups bars horizontally
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  xScaleInternal
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    func
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  d3.scaleBand used to position the bars horizontally within the groups
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  yAxisFormat
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    func
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  <span>
                     
                    Used to format the 'value' that is returned to handleMouseEnterDataElem
                  </span>
                  <span>
                    <br />
                     
                    to be displayed in the tooltip.
                  </span>
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  yScale
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    func
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  d3.scaleLinear used to determine the height of the bars
                </td>
              </tr>
            </tbody>
          </table>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Presentational|Chart/Components/ChartLine default 1`] = `
<div>
  <div
    id="story-root"
    style={Object {}}
  >
    <div
      className="nature-graphic"
    >
      <svg
        aria-hidden={true}
        focusable={false}
        height="300px"
        viewBox="0 0 600 300"
        width="600px"
      >
        <path
          d="M0,237.33333333333334L49.09090909090909,235.73333333333332L98.18181818181819,234.13333333333333L147.27272727272725,230.93333333333334L196.36363636363637,226.66666666666666L245.45454545454544,219.73333333333335L294.5454545454545,209.6L343.6363636363636,194.66666666666669L392.72727272727275,171.73333333333335L441.81818181818187,137.6L490.9090909090909,86.4L540,9.600000000000023"
          fill="none"
          index={0}
          stroke="#EA5153"
          strokeLinecap="round"
          strokeLinejoin="round"
          strokeWidth="3px"
        />
      </svg>
    </div>
  </div>
  <div>
    <div
      style={
        Object {
          "backgroundColor": "#fff",
          "border": "1px solid #eee",
          "borderRadius": "2px",
          "color": "black",
          "fontFamily": "Helvetica Neue, Helvetica, Segoe UI, Arial, freesans, sans-serif",
          "fontSize": "15px",
          "fontWeight": 300,
          "lineHeight": 1.45,
          "marginBottom": "20px",
          "marginTop": "20px",
          "padding": "20px 40px 40px",
        }
      }
    >
      <div
        style={
          Object {
            "marginBottom": 0,
          }
        }
      >
        <h2
          id="chartline"
          style={
            Object {
              "fontSize": "30px",
              "fontWeight": 600,
              "margin": 0,
              "padding": 0,
            }
          }
        >
          ChartLine
        </h2>
        <div
          style={
            Object {
              "fontSize": "15px",
            }
          }
        >
          Returns an svg 
          <code>
            path
          </code>
           element to form the line of a line chart.
        </div>
      </div>
      <div>
        <h1
          style={
            Object {
              "borderBottom": "1px solid #EEE",
              "fontSize": "25px",
              "margin": "20px 0 0 0",
              "padding": "0 0 5px 0",
            }
          }
        >
          Prop Types
        </h1>
        <div>
          <h3
            style={
              Object {
                "margin": "20px 0 0 0",
              }
            }
          >
            "
            ChartLine
            " Component
          </h3>
          <table
            className="info-table"
          >
            <thead>
              <tr>
                <th>
                  property
                </th>
                <th>
                  propType
                </th>
                <th>
                  required
                </th>
                <th>
                  default
                </th>
                <th>
                  description
                </th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  columnNames
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    <span>
                      [
                    </span>
                    <span>
                      <span>
                        <span>
                          string
                        </span>
                        <span>
                           | 
                        </span>
                        <span>
                          number
                        </span>
                      </span>
                    </span>
                    <span>
                      ]
                    </span>
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  Used to label data points so they can be positioned with the x linear scale
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  data
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    <span>
                      [
                    </span>
                    <span>
                      <span>
                        <button
                          onClick={[Function]}
                          style={
                            Object {
                              "background": "none",
                              "border": "0 none",
                              "color": "gray",
                              "cursor": "pointer",
                              "display": "inline-block",
                            }
                          }
                          type="button"
                        >
                          {
                        </button>
                        <button
                          onClick={[Function]}
                          style={
                            Object {
                              "background": "none",
                              "border": "0 none",
                              "color": "gray",
                              "cursor": "pointer",
                              "display": "inline-block",
                            }
                          }
                          type="button"
                        >
                          ...
                        </button>
                        <div
                          style={
                            Object {
                              "marginLeft": 15,
                            }
                          }
                        >
                          <span
                            style={
                              Object {
                                "whiteSpace": "nowrap",
                              }
                            }
                          >
                            key
                            ?
                            :
                             
                          </span>
                          <span>
                            string
                          </span>
                          ,
                        </div>
                        <div
                          style={
                            Object {
                              "marginLeft": 15,
                            }
                          }
                        >
                          <span
                            style={
                              Object {
                                "whiteSpace": "nowrap",
                              }
                            }
                          >
                            values
                            ?
                            :
                             
                          </span>
                          <span>
                            array
                          </span>
                          ,
                        </div>
                        <button
                          onClick={[Function]}
                          style={
                            Object {
                              "background": "none",
                              "border": "0 none",
                              "color": "gray",
                              "cursor": "pointer",
                              "display": "inline-block",
                            }
                          }
                          type="button"
                        >
                          }
                        </button>
                      </span>
                    </span>
                    <span>
                      ]
                    </span>
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  Array of { key, values: []} - only data[index].values will be rendered
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  index
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    number
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  Used to select data range and apply a stroke color
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  xScale
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    func
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  d3.scaleLinear used to create the d3.line function
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  yScale
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    func
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  d3.scaleLinear used to create the d3.line function
                </td>
              </tr>
            </tbody>
          </table>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Presentational|Chart/Components/ChartLine multiple 1`] = `
<div>
  <div
    id="story-root"
    style={Object {}}
  >
    <div
      className="nature-graphic"
    >
      <svg
        aria-hidden={true}
        focusable={false}
        height="300px"
        viewBox="0 0 600 300"
        width="600px"
      >
        <path
          d="M0,237.33333333333334L49.09090909090909,235.73333333333332L98.18181818181819,234.13333333333333L147.27272727272725,230.93333333333334L196.36363636363637,226.66666666666666L245.45454545454544,219.73333333333335L294.5454545454545,209.6L343.6363636363636,194.66666666666669L392.72727272727275,171.73333333333335L441.81818181818187,137.6L490.9090909090909,86.4L540,9.600000000000023"
          fill="none"
          index={0}
          stroke="#EA5153"
          strokeLinecap="round"
          strokeLinejoin="round"
          strokeWidth="3px"
        />
        <path
          d="M0,237.86666666666667L49.09090909090909,237.33333333333334L98.18181818181819,236.8L147.27272727272725,234.66666666666666L196.36363636363637,227.2L245.45454545454544,222.93333333333334L294.5454545454545,218.66666666666666L343.6363636363636,213.33333333333334L392.72727272727275,197.33333333333331L441.81818181818187,106.66666666666666L490.9090909090909,80L540,53.33333333333334"
          fill="none"
          index={1}
          stroke="#75C6C5"
          strokeLinecap="round"
          strokeLinejoin="round"
          strokeWidth="3px"
        />
        <path
          d="M0,238.4L49.09090909090909,237.33333333333334L98.18181818181819,237.33333333333334L147.27272727272725,234.66666666666666L196.36363636363637,229.33333333333334L245.45454545454544,234.66666666666666L294.5454545454545,229.33333333333334L343.6363636363636,229.33333333333334L392.72727272727275,208L441.81818181818187,186.66666666666669L490.9090909090909,106.66666666666666L540,90.66666666666666"
          fill="none"
          index={2}
          stroke="#5A527E"
          strokeLinecap="round"
          strokeLinejoin="round"
          strokeWidth="3px"
        />
        <path
          d="M0,238.93333333333334L49.09090909090909,236.8L98.18181818181819,235.73333333333332L147.27272727272725,229.33333333333334L196.36363636363637,224L245.45454545454544,192L294.5454545454545,186.66666666666669L343.6363636363636,133.33333333333334L392.72727272727275,133.33333333333334L441.81818181818187,144L490.9090909090909,128L540,133.33333333333334"
          fill="none"
          index={3}
          stroke="#8B0D16"
          strokeLinecap="round"
          strokeLinejoin="round"
          strokeWidth="3px"
        />
        <path
          d="M0,239.46666666666667L49.09090909090909,236.26666666666668L98.18181818181819,224L147.27272727272725,213.33333333333334L196.36363636363637,192L245.45454545454544,208L294.5454545454545,160L343.6363636363636,181.33333333333334L392.72727272727275,154.66666666666666L441.81818181818187,80L490.9090909090909,53.33333333333334L540,106.66666666666666"
          fill="none"
          index={4}
          stroke="#8FC297"
          strokeLinecap="round"
          strokeLinejoin="round"
          strokeWidth="3px"
        />
      </svg>
    </div>
  </div>
  <div>
    <div
      style={
        Object {
          "backgroundColor": "#fff",
          "border": "1px solid #eee",
          "borderRadius": "2px",
          "color": "black",
          "fontFamily": "Helvetica Neue, Helvetica, Segoe UI, Arial, freesans, sans-serif",
          "fontSize": "15px",
          "fontWeight": 300,
          "lineHeight": 1.45,
          "marginBottom": "20px",
          "marginTop": "20px",
          "padding": "20px 40px 40px",
        }
      }
    >
      <div
        style={
          Object {
            "marginBottom": 0,
          }
        }
      >
        <h2
          id="chartline"
          style={
            Object {
              "fontSize": "30px",
              "fontWeight": 600,
              "margin": 0,
              "padding": 0,
            }
          }
        >
          ChartLine
        </h2>
        <div
          style={
            Object {
              "fontSize": "15px",
            }
          }
        >
          Returns an svg 
          <code>
            path
          </code>
           element to form the line of a line chart.
        </div>
      </div>
      <div>
        <h1
          style={
            Object {
              "borderBottom": "1px solid #EEE",
              "fontSize": "25px",
              "margin": "20px 0 0 0",
              "padding": "0 0 5px 0",
            }
          }
        >
          Prop Types
        </h1>
        <div>
          <h3
            style={
              Object {
                "margin": "20px 0 0 0",
              }
            }
          >
            "
            ChartLine
            " Component
          </h3>
          <table
            className="info-table"
          >
            <thead>
              <tr>
                <th>
                  property
                </th>
                <th>
                  propType
                </th>
                <th>
                  required
                </th>
                <th>
                  default
                </th>
                <th>
                  description
                </th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  columnNames
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    <span>
                      [
                    </span>
                    <span>
                      <span>
                        <span>
                          string
                        </span>
                        <span>
                           | 
                        </span>
                        <span>
                          number
                        </span>
                      </span>
                    </span>
                    <span>
                      ]
                    </span>
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  Used to label data points so they can be positioned with the x linear scale
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  data
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    <span>
                      [
                    </span>
                    <span>
                      <span>
                        <button
                          onClick={[Function]}
                          style={
                            Object {
                              "background": "none",
                              "border": "0 none",
                              "color": "gray",
                              "cursor": "pointer",
                              "display": "inline-block",
                            }
                          }
                          type="button"
                        >
                          {
                        </button>
                        <button
                          onClick={[Function]}
                          style={
                            Object {
                              "background": "none",
                              "border": "0 none",
                              "color": "gray",
                              "cursor": "pointer",
                              "display": "inline-block",
                            }
                          }
                          type="button"
                        >
                          ...
                        </button>
                        <div
                          style={
                            Object {
                              "marginLeft": 15,
                            }
                          }
                        >
                          <span
                            style={
                              Object {
                                "whiteSpace": "nowrap",
                              }
                            }
                          >
                            key
                            ?
                            :
                             
                          </span>
                          <span>
                            string
                          </span>
                          ,
                        </div>
                        <div
                          style={
                            Object {
                              "marginLeft": 15,
                            }
                          }
                        >
                          <span
                            style={
                              Object {
                                "whiteSpace": "nowrap",
                              }
                            }
                          >
                            values
                            ?
                            :
                             
                          </span>
                          <span>
                            array
                          </span>
                          ,
                        </div>
                        <button
                          onClick={[Function]}
                          style={
                            Object {
                              "background": "none",
                              "border": "0 none",
                              "color": "gray",
                              "cursor": "pointer",
                              "display": "inline-block",
                            }
                          }
                          type="button"
                        >
                          }
                        </button>
                      </span>
                    </span>
                    <span>
                      ]
                    </span>
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  Array of { key, values: []} - only data[index].values will be rendered
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  index
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    number
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  Used to select data range and apply a stroke color
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  xScale
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    func
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  d3.scaleLinear used to create the d3.line function
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  yScale
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    func
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  d3.scaleLinear used to create the d3.line function
                </td>
              </tr>
            </tbody>
          </table>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Presentational|Chart/Components/ChartSVG default 1`] = `
<div>
  <div
    id="story-root"
    style={Object {}}
  >
    <div
      className="nature-graphic"
    >
      <svg
        aria-hidden={true}
        focusable={false}
        height="300px"
        viewBox="0 0 600 300"
        width="600px"
      >
        <rect
          fill="none"
          height={298}
          stroke="red"
          strokeWidth="2px"
          width={598}
          x="1"
          y="1"
        />
        <circle
          cx="150"
          cy="150"
          fill="none"
          r="80"
          stroke="green"
          strokeWidth="2px"
        />
        <path
          d="M 300,125 L 400,50 L 500,100 L 400,250 Z"
          fill="none"
          stroke="blue"
          strokeWidth="2px"
        />
        <text
          dx="2em"
          dy="2em"
        >
          This is an SVG text element
        </text>
      </svg>
    </div>
  </div>
  <div>
    <div
      style={
        Object {
          "backgroundColor": "#fff",
          "border": "1px solid #eee",
          "borderRadius": "2px",
          "color": "black",
          "fontFamily": "Helvetica Neue, Helvetica, Segoe UI, Arial, freesans, sans-serif",
          "fontSize": "15px",
          "fontWeight": 300,
          "lineHeight": 1.45,
          "marginBottom": "20px",
          "marginTop": "20px",
          "padding": "20px 40px 40px",
        }
      }
    >
      <div
        style={
          Object {
            "marginBottom": 0,
          }
        }
      >
        <h2
          id="chartsvg"
          style={
            Object {
              "fontSize": "30px",
              "fontWeight": 600,
              "margin": 0,
              "padding": 0,
            }
          }
        >
          ChartSVG
        </h2>
        <div
          style={
            Object {
              "fontSize": "15px",
            }
          }
        >
          Returns an SVG element into which the chart elements
can be rendered.
        </div>
      </div>
      <div>
        <h1
          style={
            Object {
              "borderBottom": "1px solid #EEE",
              "fontSize": "25px",
              "margin": "20px 0 0 0",
              "padding": "0 0 5px 0",
            }
          }
        >
          Prop Types
        </h1>
        <div>
          <h3
            style={
              Object {
                "margin": "20px 0 0 0",
              }
            }
          >
            "
            ChartSVG
            " Component
          </h3>
          <table
            className="info-table"
          >
            <thead>
              <tr>
                <th>
                  property
                </th>
                <th>
                  propType
                </th>
                <th>
                  required
                </th>
                <th>
                  default
                </th>
                <th>
                  description
                </th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  chartHeight
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    number
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  chartWidth
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    number
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  children
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    <span>
                      <span>
                        [
                      </span>
                      <span>
                        <span>
                          element
                        </span>
                      </span>
                      <span>
                        ]
                      </span>
                    </span>
                    <span>
                       | 
                    </span>
                    <span>
                      element
                    </span>
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  <span>
                     
                    SVG elements or React components to be rendered
                  </span>
                  <span>
                    <br />
                     
                    within the SVG.
                  </span>
                </td>
              </tr>
            </tbody>
          </table>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Presentational|Chart/Components/ChartStackedBars alt data 1`] = `
<div>
  <div
    id="story-root"
    style={Object {}}
  >
    <div
      className="nature-graphic"
    >
      <svg
        aria-hidden={true}
        focusable={false}
        height="300px"
        viewBox="0 0 600 300"
        width="600px"
      >
        <g>
          <rect
            fill="#EA5153"
            height={144}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={77.14285714285714}
            x={0}
            y={96}
          />
          <rect
            fill="#EA5153"
            height={25.14285714285714}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={77.14285714285714}
            x={154.28571428571428}
            y={214.85714285714286}
          />
          <rect
            fill="#EA5153"
            height={16}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={77.14285714285714}
            x={308.57142857142856}
            y={224}
          />
          <rect
            fill="#EA5153"
            height={0.02285714285713425}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={77.14285714285714}
            x={462.85714285714283}
            y={239.97714285714287}
          />
        </g>
      </svg>
    </div>
  </div>
  <div>
    <div
      style={
        Object {
          "backgroundColor": "#fff",
          "border": "1px solid #eee",
          "borderRadius": "2px",
          "color": "black",
          "fontFamily": "Helvetica Neue, Helvetica, Segoe UI, Arial, freesans, sans-serif",
          "fontSize": "15px",
          "fontWeight": 300,
          "lineHeight": 1.45,
          "marginBottom": "20px",
          "marginTop": "20px",
          "padding": "20px 40px 40px",
        }
      }
    >
      <div
        style={
          Object {
            "marginBottom": 0,
          }
        }
      >
        <h2
          id="chartstackedbars"
          style={
            Object {
              "fontSize": "30px",
              "fontWeight": 600,
              "margin": 0,
              "padding": 0,
            }
          }
        >
          ChartStackedBars
        </h2>
        <div
          style={
            Object {
              "fontSize": "15px",
            }
          }
        >
          Similar to 
          <code>
            ChartBars
          </code>
           component, except data is passed
through a 
          <code>
            d3.stack
          </code>
           function so that the bars can be stacked vertically.
        </div>
        <div
          style={
            Object {
              "fontSize": "15px",
            }
          }
        >
          TODO: The 
          <code>
            rect
          </code>
           bar element should be a separate component.
        </div>
        <div
          style={
            Object {
              "fontSize": "15px",
            }
          }
        >
          TODO: Rename to 
          <code>
            ChartBarsStacked
          </code>
          .
        </div>
      </div>
      <div>
        <h1
          style={
            Object {
              "borderBottom": "1px solid #EEE",
              "fontSize": "25px",
              "margin": "20px 0 0 0",
              "padding": "0 0 5px 0",
            }
          }
        >
          Prop Types
        </h1>
        <div>
          <h3
            style={
              Object {
                "margin": "20px 0 0 0",
              }
            }
          >
            "
            ChartStackedBars
            " Component
          </h3>
          <table
            className="info-table"
          >
            <thead>
              <tr>
                <th>
                  property
                </th>
                <th>
                  propType
                </th>
                <th>
                  required
                </th>
                <th>
                  default
                </th>
                <th>
                  description
                </th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  chartInnerWidth
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    number
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  Width of chart area - used to position tooltip
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  handleMouseEnterDataElem
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    func
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  <span>
                     
                    Function to be called when the cursor enters a bar.
                  </span>
                  <span>
                    <br />
                     
                    Returns an object of {x, y, value, alignment }
                  </span>
                  <span>
                    <br />
                     
                    used to position the tooltip.
                  </span>
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  handleMouseLeaveDataElem
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    func
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  Function to be called when the cursor leaves a bar
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  index
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    number
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  Used to select data range and apply a stroke color
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  innerLeft
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    number
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  Used to correctly position the tooltip
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  innerTop
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    number
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  Used to correctly position the tooltip
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  stacked
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    <span>
                      [
                    </span>
                    <span>
                      <span>
                        <span>
                          [
                        </span>
                        <span>
                          <span>
                            array
                          </span>
                        </span>
                        <span>
                          ]
                        </span>
                      </span>
                    </span>
                    <span>
                      ]
                    </span>
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  <span>
                     
                    A d3 'stack' of the given array of data, containing an
                  </span>
                  <span>
                    <br />
                     
                    array representing each series in the data
                  </span>
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  xScale
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    func
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  d3.scaleBand used to position the bars horizontally
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  yAxisFormat
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    func
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  <span>
                     
                    Used to format the 'value' that is returned to handleMouseEnterDataElem
                  </span>
                  <span>
                    <br />
                     
                    to be displayed in the tooltip.
                  </span>
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  yScale
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    func
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  d3.scaleLinear used to determine the height of the bars
                </td>
              </tr>
            </tbody>
          </table>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Presentational|Chart/Components/ChartStackedBars default 1`] = `
<div>
  <div
    id="story-root"
    style={Object {}}
  >
    <div
      className="nature-graphic"
    >
      <svg
        aria-hidden={true}
        focusable={false}
        height="300px"
        viewBox="0 0 600 300"
        width="600px"
      >
        <g>
          <rect
            fill="#EA5153"
            height={0.75}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={23.47826086956522}
            x={0}
            y={239.25}
          />
          <rect
            fill="#EA5153"
            height={1.1999999999999886}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={23.47826086956522}
            x={46.95652173913044}
            y={238.8}
          />
          <rect
            fill="#EA5153"
            height={1.6500000000000057}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={23.47826086956522}
            x={93.91304347826087}
            y={238.35}
          />
          <rect
            fill="#EA5153"
            height={2.5500000000000114}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={23.47826086956522}
            x={140.8695652173913}
            y={237.45}
          />
          <rect
            fill="#EA5153"
            height={3.75}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={23.47826086956522}
            x={187.82608695652175}
            y={236.25}
          />
          <rect
            fill="#EA5153"
            height={5.699999999999989}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={23.47826086956522}
            x={234.7826086956522}
            y={234.3}
          />
          <rect
            fill="#EA5153"
            height={8.550000000000011}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={23.47826086956522}
            x={281.7391304347826}
            y={231.45}
          />
          <rect
            fill="#EA5153"
            height={12.75}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={23.47826086956522}
            x={328.69565217391306}
            y={227.25}
          />
          <rect
            fill="#EA5153"
            height={19.19999999999999}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={23.47826086956522}
            x={375.6521739130435}
            y={220.8}
          />
          <rect
            fill="#EA5153"
            height={28.80000000000001}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={23.47826086956522}
            x={422.60869565217394}
            y={211.2}
          />
          <rect
            fill="#EA5153"
            height={43.19999999999999}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={23.47826086956522}
            x={469.5652173913044}
            y={196.8}
          />
          <rect
            fill="#EA5153"
            height={64.80000000000001}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={23.47826086956522}
            x={516.5217391304348}
            y={175.2}
          />
        </g>
      </svg>
    </div>
  </div>
  <div>
    <div
      style={
        Object {
          "backgroundColor": "#fff",
          "border": "1px solid #eee",
          "borderRadius": "2px",
          "color": "black",
          "fontFamily": "Helvetica Neue, Helvetica, Segoe UI, Arial, freesans, sans-serif",
          "fontSize": "15px",
          "fontWeight": 300,
          "lineHeight": 1.45,
          "marginBottom": "20px",
          "marginTop": "20px",
          "padding": "20px 40px 40px",
        }
      }
    >
      <div
        style={
          Object {
            "marginBottom": 0,
          }
        }
      >
        <h2
          id="chartstackedbars"
          style={
            Object {
              "fontSize": "30px",
              "fontWeight": 600,
              "margin": 0,
              "padding": 0,
            }
          }
        >
          ChartStackedBars
        </h2>
        <div
          style={
            Object {
              "fontSize": "15px",
            }
          }
        >
          Similar to 
          <code>
            ChartBars
          </code>
           component, except data is passed
through a 
          <code>
            d3.stack
          </code>
           function so that the bars can be stacked vertically.
        </div>
        <div
          style={
            Object {
              "fontSize": "15px",
            }
          }
        >
          TODO: The 
          <code>
            rect
          </code>
           bar element should be a separate component.
        </div>
        <div
          style={
            Object {
              "fontSize": "15px",
            }
          }
        >
          TODO: Rename to 
          <code>
            ChartBarsStacked
          </code>
          .
        </div>
      </div>
      <div>
        <h1
          style={
            Object {
              "borderBottom": "1px solid #EEE",
              "fontSize": "25px",
              "margin": "20px 0 0 0",
              "padding": "0 0 5px 0",
            }
          }
        >
          Prop Types
        </h1>
        <div>
          <h3
            style={
              Object {
                "margin": "20px 0 0 0",
              }
            }
          >
            "
            ChartStackedBars
            " Component
          </h3>
          <table
            className="info-table"
          >
            <thead>
              <tr>
                <th>
                  property
                </th>
                <th>
                  propType
                </th>
                <th>
                  required
                </th>
                <th>
                  default
                </th>
                <th>
                  description
                </th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  chartInnerWidth
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    number
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  Width of chart area - used to position tooltip
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  handleMouseEnterDataElem
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    func
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  <span>
                     
                    Function to be called when the cursor enters a bar.
                  </span>
                  <span>
                    <br />
                     
                    Returns an object of {x, y, value, alignment }
                  </span>
                  <span>
                    <br />
                     
                    used to position the tooltip.
                  </span>
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  handleMouseLeaveDataElem
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    func
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  Function to be called when the cursor leaves a bar
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  index
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    number
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  Used to select data range and apply a stroke color
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  innerLeft
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    number
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  Used to correctly position the tooltip
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  innerTop
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    number
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  Used to correctly position the tooltip
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  stacked
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    <span>
                      [
                    </span>
                    <span>
                      <span>
                        <span>
                          [
                        </span>
                        <span>
                          <span>
                            array
                          </span>
                        </span>
                        <span>
                          ]
                        </span>
                      </span>
                    </span>
                    <span>
                      ]
                    </span>
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  <span>
                     
                    A d3 'stack' of the given array of data, containing an
                  </span>
                  <span>
                    <br />
                     
                    array representing each series in the data
                  </span>
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  xScale
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    func
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  d3.scaleBand used to position the bars horizontally
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  yAxisFormat
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    func
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  <span>
                     
                    Used to format the 'value' that is returned to handleMouseEnterDataElem
                  </span>
                  <span>
                    <br />
                     
                    to be displayed in the tooltip.
                  </span>
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  yScale
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    func
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  d3.scaleLinear used to determine the height of the bars
                </td>
              </tr>
            </tbody>
          </table>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Presentational|Chart/Components/ChartXAxisBand default 1`] = `
<div>
  <div
    id="story-root"
    style={Object {}}
  >
    <div
      className="nature-graphic"
    >
      <svg
        aria-hidden={true}
        focusable={false}
        height="300px"
        viewBox="0 0 600 300"
        width="600px"
      >
        <g
          transform="translate(20,240)"
        >
          <line
            shapeRendering="crispEdges"
            stroke="#333333"
            strokeDasharray="none"
            strokeWidth="1px"
            x1={12.173913043478262}
            x2={12.173913043478262}
            y1={0}
            y2="0.5em"
          />
          <line
            shapeRendering="crispEdges"
            stroke="#333333"
            strokeDasharray="none"
            strokeWidth="1px"
            x1={60.86956521739131}
            x2={60.86956521739131}
            y1={0}
            y2="0.5em"
          />
          <line
            shapeRendering="crispEdges"
            stroke="#333333"
            strokeDasharray="none"
            strokeWidth="1px"
            x1={109.56521739130436}
            x2={109.56521739130436}
            y1={0}
            y2="0.5em"
          />
          <line
            shapeRendering="crispEdges"
            stroke="#333333"
            strokeDasharray="none"
            strokeWidth="1px"
            x1={158.26086956521738}
            x2={158.26086956521738}
            y1={0}
            y2="0.5em"
          />
          <line
            shapeRendering="crispEdges"
            stroke="#333333"
            strokeDasharray="none"
            strokeWidth="1px"
            x1={206.95652173913044}
            x2={206.95652173913044}
            y1={0}
            y2="0.5em"
          />
          <line
            shapeRendering="crispEdges"
            stroke="#333333"
            strokeDasharray="none"
            strokeWidth="1px"
            x1={255.6521739130435}
            x2={255.6521739130435}
            y1={0}
            y2="0.5em"
          />
          <line
            shapeRendering="crispEdges"
            stroke="#333333"
            strokeDasharray="none"
            strokeWidth="1px"
            x1={304.3478260869565}
            x2={304.3478260869565}
            y1={0}
            y2="0.5em"
          />
          <line
            shapeRendering="crispEdges"
            stroke="#333333"
            strokeDasharray="none"
            strokeWidth="1px"
            x1={353.04347826086956}
            x2={353.04347826086956}
            y1={0}
            y2="0.5em"
          />
          <line
            shapeRendering="crispEdges"
            stroke="#333333"
            strokeDasharray="none"
            strokeWidth="1px"
            x1={401.7391304347826}
            x2={401.7391304347826}
            y1={0}
            y2="0.5em"
          />
          <line
            shapeRendering="crispEdges"
            stroke="#333333"
            strokeDasharray="none"
            strokeWidth="1px"
            x1={450.4347826086957}
            x2={450.4347826086957}
            y1={0}
            y2="0.5em"
          />
          <line
            shapeRendering="crispEdges"
            stroke="#333333"
            strokeDasharray="none"
            strokeWidth="1px"
            x1={499.13043478260875}
            x2={499.13043478260875}
            y1={0}
            y2="0.5em"
          />
          <line
            shapeRendering="crispEdges"
            stroke="#333333"
            strokeDasharray="none"
            strokeWidth="1px"
            x1={547.8260869565217}
            x2={547.8260869565217}
            y1={0}
            y2="0.5em"
          />
          <text
            dy="1.5em"
            fontSize="1rem"
            textAnchor="middle"
            x={12.173913043478262}
            y={0}
          >
            2008
          </text>
          <text
            dy="1.5em"
            fontSize="1rem"
            textAnchor="middle"
            x={60.86956521739131}
            y={0}
          >
            2009
          </text>
          <text
            dy="1.5em"
            fontSize="1rem"
            textAnchor="middle"
            x={109.56521739130436}
            y={0}
          >
            2010
          </text>
          <text
            dy="1.5em"
            fontSize="1rem"
            textAnchor="middle"
            x={158.26086956521738}
            y={0}
          >
            2011
          </text>
          <text
            dy="1.5em"
            fontSize="1rem"
            textAnchor="middle"
            x={206.95652173913044}
            y={0}
          >
            2012
          </text>
          <text
            dy="1.5em"
            fontSize="1rem"
            textAnchor="middle"
            x={255.6521739130435}
            y={0}
          >
            2013
          </text>
          <text
            dy="1.5em"
            fontSize="1rem"
            textAnchor="middle"
            x={304.3478260869565}
            y={0}
          >
            2014
          </text>
          <text
            dy="1.5em"
            fontSize="1rem"
            textAnchor="middle"
            x={353.04347826086956}
            y={0}
          >
            2015
          </text>
          <text
            dy="1.5em"
            fontSize="1rem"
            textAnchor="middle"
            x={401.7391304347826}
            y={0}
          >
            2016
          </text>
          <text
            dy="1.5em"
            fontSize="1rem"
            textAnchor="middle"
            x={450.4347826086957}
            y={0}
          >
            2017
          </text>
          <text
            dy="1.5em"
            fontSize="1rem"
            textAnchor="middle"
            x={499.13043478260875}
            y={0}
          >
            2018
          </text>
          <text
            dy="1.5em"
            fontSize="1rem"
            textAnchor="middle"
            x={547.8260869565217}
            y={0}
          >
            2019
          </text>
        </g>
      </svg>
    </div>
  </div>
  <div>
    <div
      style={
        Object {
          "backgroundColor": "#fff",
          "border": "1px solid #eee",
          "borderRadius": "2px",
          "color": "black",
          "fontFamily": "Helvetica Neue, Helvetica, Segoe UI, Arial, freesans, sans-serif",
          "fontSize": "15px",
          "fontWeight": 300,
          "lineHeight": 1.45,
          "marginBottom": "20px",
          "marginTop": "20px",
          "padding": "20px 40px 40px",
        }
      }
    >
      <div
        style={
          Object {
            "marginBottom": 0,
          }
        }
      >
        <h2
          id="chartxaxisband"
          style={
            Object {
              "fontSize": "30px",
              "fontWeight": 600,
              "margin": 0,
              "padding": 0,
            }
          }
        >
          ChartXAxisBand
        </h2>
        <div
          style={
            Object {
              "fontSize": "15px",
            }
          }
        >
          Returns an SVG group containing an array of text elements and an
array of line elements.
        </div>
        <div
          style={
            Object {
              "fontSize": "15px",
            }
          }
        >
          TODO: 
          <code>
            textWidthExceedsChartInnerWidth
          </code>
           variable is true if combined width
of the text nodes is greater than the width of the chart. If so, only
the odd text nodes are displayed. This is quite brittle - breaks down if the
chart width is less than half the the total text with, or if there is one or
more really long label. A proper collision detection system is needed.
        </div>
      </div>
      <div>
        <h1
          style={
            Object {
              "borderBottom": "1px solid #EEE",
              "fontSize": "25px",
              "margin": "20px 0 0 0",
              "padding": "0 0 5px 0",
            }
          }
        >
          Prop Types
        </h1>
        <div>
          <h3
            style={
              Object {
                "margin": "20px 0 0 0",
              }
            }
          >
            "
            ChartXAxisBand
            " Component
          </h3>
          <table
            className="info-table"
          >
            <thead>
              <tr>
                <th>
                  property
                </th>
                <th>
                  propType
                </th>
                <th>
                  required
                </th>
                <th>
                  default
                </th>
                <th>
                  description
                </th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  chartInnerHeight
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    number
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  Height of the chart inner area
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  chartInnerWidth
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    number
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  Width of the chart inner area
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  innerLeft
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    number
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  Used to translate group horizontally into position
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  innerTop
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    number
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  Used to translate group vertically into position
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  xAxisFormat
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    func
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  Used to apply formating to the axis labels
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  xScale
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    func
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  d3 scale - used to determine the position of the lines / labels
                </td>
              </tr>
            </tbody>
          </table>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Presentational|Chart/Components/ChartXAxisLinear default 1`] = `
<div>
  <div
    id="story-root"
    style={Object {}}
  >
    <div
      className="nature-graphic"
    >
      <svg
        aria-hidden={true}
        focusable={false}
        height="300px"
        viewBox="0 0 600 300"
        width="600px"
      >
        <g
          transform="translate(20,240)"
        >
          <line
            shapeRendering="crispEdges"
            stroke="#333333"
            strokeDasharray="none"
            strokeWidth="1px"
            x1={0}
            x2={0}
            y1={0}
            y2="0.5em"
          />
          <line
            shapeRendering="crispEdges"
            stroke="#333333"
            strokeDasharray="none"
            strokeWidth="1px"
            x1={56}
            x2={56}
            y1={0}
            y2="0.5em"
          />
          <line
            shapeRendering="crispEdges"
            stroke="#333333"
            strokeDasharray="none"
            strokeWidth="1px"
            x1={112}
            x2={112}
            y1={0}
            y2="0.5em"
          />
          <line
            shapeRendering="crispEdges"
            stroke="#333333"
            strokeDasharray="none"
            strokeWidth="1px"
            x1={168}
            x2={168}
            y1={0}
            y2="0.5em"
          />
          <line
            shapeRendering="crispEdges"
            stroke="#333333"
            strokeDasharray="none"
            strokeWidth="1px"
            x1={224}
            x2={224}
            y1={0}
            y2="0.5em"
          />
          <line
            shapeRendering="crispEdges"
            stroke="#333333"
            strokeDasharray="none"
            strokeWidth="1px"
            x1={280}
            x2={280}
            y1={0}
            y2="0.5em"
          />
          <line
            shapeRendering="crispEdges"
            stroke="#333333"
            strokeDasharray="none"
            strokeWidth="1px"
            x1={336}
            x2={336}
            y1={0}
            y2="0.5em"
          />
          <line
            shapeRendering="crispEdges"
            stroke="#333333"
            strokeDasharray="none"
            strokeWidth="1px"
            x1={392}
            x2={392}
            y1={0}
            y2="0.5em"
          />
          <line
            shapeRendering="crispEdges"
            stroke="#333333"
            strokeDasharray="none"
            strokeWidth="1px"
            x1={448}
            x2={448}
            y1={0}
            y2="0.5em"
          />
          <line
            shapeRendering="crispEdges"
            stroke="#333333"
            strokeDasharray="none"
            strokeWidth="1px"
            x1={504}
            x2={504}
            y1={0}
            y2="0.5em"
          />
          <line
            shapeRendering="crispEdges"
            stroke="#333333"
            strokeDasharray="none"
            strokeWidth="1px"
            x1={560}
            x2={560}
            y1={0}
            y2="0.5em"
          />
          <text
            dy="1.5em"
            fontSize="1rem"
            textAnchor="middle"
            x={0}
            y={0}
          >
            0
          </text>
          <text
            dy="1.5em"
            fontSize="1rem"
            textAnchor="middle"
            x={56}
            y={0}
          >
            50
          </text>
          <text
            dy="1.5em"
            fontSize="1rem"
            textAnchor="middle"
            x={112}
            y={0}
          >
            100
          </text>
          <text
            dy="1.5em"
            fontSize="1rem"
            textAnchor="middle"
            x={168}
            y={0}
          >
            150
          </text>
          <text
            dy="1.5em"
            fontSize="1rem"
            textAnchor="middle"
            x={224}
            y={0}
          >
            200
          </text>
          <text
            dy="1.5em"
            fontSize="1rem"
            textAnchor="middle"
            x={280}
            y={0}
          >
            250
          </text>
          <text
            dy="1.5em"
            fontSize="1rem"
            textAnchor="middle"
            x={336}
            y={0}
          >
            300
          </text>
          <text
            dy="1.5em"
            fontSize="1rem"
            textAnchor="middle"
            x={392}
            y={0}
          >
            350
          </text>
          <text
            dy="1.5em"
            fontSize="1rem"
            textAnchor="middle"
            x={448}
            y={0}
          >
            400
          </text>
          <text
            dy="1.5em"
            fontSize="1rem"
            textAnchor="middle"
            x={504}
            y={0}
          >
            450
          </text>
          <text
            dy="1.5em"
            fontSize="1rem"
            textAnchor="middle"
            x={560}
            y={0}
          >
            500
          </text>
        </g>
      </svg>
    </div>
  </div>
  <div>
    <div
      style={
        Object {
          "backgroundColor": "#fff",
          "border": "1px solid #eee",
          "borderRadius": "2px",
          "color": "black",
          "fontFamily": "Helvetica Neue, Helvetica, Segoe UI, Arial, freesans, sans-serif",
          "fontSize": "15px",
          "fontWeight": 300,
          "lineHeight": 1.45,
          "marginBottom": "20px",
          "marginTop": "20px",
          "padding": "20px 40px 40px",
        }
      }
    >
      <div
        style={
          Object {
            "marginBottom": 0,
          }
        }
      >
        <h2
          id="chartxaxislinear"
          style={
            Object {
              "fontSize": "30px",
              "fontWeight": 600,
              "margin": 0,
              "padding": 0,
            }
          }
        >
          ChartXAxisLinear
        </h2>
        <div
          style={
            Object {
              "fontSize": "15px",
            }
          }
        >
          Returns an SVG group containing an array of text elements
and an array of line elements.
        </div>
        <div
          style={
            Object {
              "fontSize": "15px",
            }
          }
        >
          The number of text elements to display is screen is calculated
based on the average text node width and how many times this width
will fit into the the chart width. This value is then used as the

          <code>
            tickCount
          </code>
           arguement for the x-axis function.
        </div>
      </div>
      <div>
        <h1
          style={
            Object {
              "borderBottom": "1px solid #EEE",
              "fontSize": "25px",
              "margin": "20px 0 0 0",
              "padding": "0 0 5px 0",
            }
          }
        >
          Prop Types
        </h1>
        <div>
          <h3
            style={
              Object {
                "margin": "20px 0 0 0",
              }
            }
          >
            "
            ChartXAxisLinear
            " Component
          </h3>
          <table
            className="info-table"
          >
            <thead>
              <tr>
                <th>
                  property
                </th>
                <th>
                  propType
                </th>
                <th>
                  required
                </th>
                <th>
                  default
                </th>
                <th>
                  description
                </th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  chartInnerHeight
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    number
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  Height of the chart inner area
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  chartInnerWidth
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    number
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  Width of the chart inner area
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  innerLeft
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    number
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  Used to translate group horizontally into position
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  innerTop
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    number
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  Used to translate group vertically into position
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  xAxisFormat
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    func
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  Used to apply formating to the axis labels
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  xAxisTickCount
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    number
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  Ideal number of ticks in the x-axis.
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  xScale
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    func
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  d3 scale - used to determine the position of the lines / labels
                </td>
              </tr>
            </tbody>
          </table>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Presentational|Chart/Components/ChartYAxis default 1`] = `
<div>
  <div
    id="story-root"
    style={Object {}}
  >
    <div
      className="nature-graphic"
    >
      <svg
        aria-hidden={true}
        focusable={false}
        height="300px"
        viewBox="0 0 600 300"
        width="600px"
      >
        <g
          transform="translate(50,20)"
        >
          <text
            dy="0.3em"
            fontSize="1rem"
            textAnchor="end"
            x={-15}
            y={260}
          >
            0
          </text>
          <text
            dy="0.3em"
            fontSize="1rem"
            textAnchor="end"
            x={-15}
            y={216.66666666666669}
          >
            100
          </text>
          <text
            dy="0.3em"
            fontSize="1rem"
            textAnchor="end"
            x={-15}
            y={173.33333333333334}
          >
            200
          </text>
          <text
            dy="0.3em"
            fontSize="1rem"
            textAnchor="end"
            x={-15}
            y={130}
          >
            300
          </text>
          <text
            dy="0.3em"
            fontSize="1rem"
            textAnchor="end"
            x={-15}
            y={86.66666666666669}
          >
            400
          </text>
          <text
            dy="0.3em"
            fontSize="1rem"
            textAnchor="end"
            x={-15}
            y={43.333333333333314}
          >
            500
          </text>
          <text
            dy="0.3em"
            fontSize="1rem"
            textAnchor="end"
            x={-15}
            y={0}
          >
            600
          </text>
          <line
            stroke="#333333"
            strokeDasharray="2, 3"
            strokeWidth="1px"
            x1={-8}
            x2={500}
            y1={216.66666666666669}
            y2={216.66666666666669}
          />
          <line
            stroke="#333333"
            strokeDasharray="2, 3"
            strokeWidth="1px"
            x1={-8}
            x2={500}
            y1={173.33333333333334}
            y2={173.33333333333334}
          />
          <line
            stroke="#333333"
            strokeDasharray="2, 3"
            strokeWidth="1px"
            x1={-8}
            x2={500}
            y1={130}
            y2={130}
          />
          <line
            stroke="#333333"
            strokeDasharray="2, 3"
            strokeWidth="1px"
            x1={-8}
            x2={500}
            y1={86.66666666666669}
            y2={86.66666666666669}
          />
          <line
            stroke="#333333"
            strokeDasharray="2, 3"
            strokeWidth="1px"
            x1={-8}
            x2={500}
            y1={43.333333333333314}
            y2={43.333333333333314}
          />
          <line
            stroke="#333333"
            strokeDasharray="2, 3"
            strokeWidth="1px"
            x1={-8}
            x2={500}
            y1={0}
            y2={0}
          />
        </g>
      </svg>
    </div>
  </div>
  <div>
    <div
      style={
        Object {
          "backgroundColor": "#fff",
          "border": "1px solid #eee",
          "borderRadius": "2px",
          "color": "black",
          "fontFamily": "Helvetica Neue, Helvetica, Segoe UI, Arial, freesans, sans-serif",
          "fontSize": "15px",
          "fontWeight": 300,
          "lineHeight": 1.45,
          "marginBottom": "20px",
          "marginTop": "20px",
          "padding": "20px 40px 40px",
        }
      }
    >
      <div
        style={
          Object {
            "marginBottom": 0,
          }
        }
      >
        <h2
          id="chartyaxis"
          style={
            Object {
              "fontSize": "30px",
              "fontWeight": 600,
              "margin": 0,
              "padding": 0,
            }
          }
        >
          ChartYAxis
        </h2>
        <div
          style={
            Object {
              "fontSize": "15px",
            }
          }
        >
          Returns an array of lines, and text elements to form
the y-axis and horrizontal lines of the chart.
        </div>
        <div
          style={
            Object {
              "fontSize": "15px",
            }
          }
        >
          The 
          <code>
            ChartYAxisBaseline
          </code>
           is rendered as a separate element
so that it can sit infront of the data elements, whereas
these lines sit behind.
        </div>
      </div>
      <div>
        <h1
          style={
            Object {
              "borderBottom": "1px solid #EEE",
              "fontSize": "25px",
              "margin": "20px 0 0 0",
              "padding": "0 0 5px 0",
            }
          }
        >
          Prop Types
        </h1>
        <div>
          <h3
            style={
              Object {
                "margin": "20px 0 0 0",
              }
            }
          >
            "
            ChartYAxis
            " Component
          </h3>
          <table
            className="info-table"
          >
            <thead>
              <tr>
                <th>
                  property
                </th>
                <th>
                  propType
                </th>
                <th>
                  required
                </th>
                <th>
                  default
                </th>
                <th>
                  description
                </th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  chartInnerWidth
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    number
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  Width of the chart inner area
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  innerLeft
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    number
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  Used to translate group horizontally into position
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  innerTop
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    number
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  Used to translate group vertically into position
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  yAxisFormat
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    func
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  Used to apply formating to the axis labels
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  yAxisTickCount
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    number
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  Ideal number of ticks in the y-axis.
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  yScale
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    func
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  d3 scale - used to determine the position of the lines / labels
                </td>
              </tr>
            </tbody>
          </table>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Presentational|Chart/Components/ChartYAxisBaseline default 1`] = `
<div>
  <div
    id="story-root"
    style={Object {}}
  >
    <div
      className="nature-graphic"
    >
      <svg
        aria-hidden={true}
        focusable={false}
        height="300px"
        viewBox="0 0 600 300"
        width="600px"
      >
        <g
          transform="translate(50,20)"
        >
          <line
            stroke="#333333"
            strokeDasharray="none"
            strokeWidth="3px"
            x1={-8}
            x2={500}
            y1={260}
            y2={260}
          />
        </g>
      </svg>
    </div>
  </div>
  <div>
    <div
      style={
        Object {
          "backgroundColor": "#fff",
          "border": "1px solid #eee",
          "borderRadius": "2px",
          "color": "black",
          "fontFamily": "Helvetica Neue, Helvetica, Segoe UI, Arial, freesans, sans-serif",
          "fontSize": "15px",
          "fontWeight": 300,
          "lineHeight": 1.45,
          "marginBottom": "20px",
          "marginTop": "20px",
          "padding": "20px 40px 40px",
        }
      }
    >
      <div
        style={
          Object {
            "marginBottom": 0,
          }
        }
      >
        <h2
          id="chartyaxisbaseline"
          style={
            Object {
              "fontSize": "30px",
              "fontWeight": 600,
              "margin": 0,
              "padding": 0,
            }
          }
        >
          ChartYAxisBaseline
        </h2>
        <div
          style={
            Object {
              "fontSize": "15px",
            }
          }
        >
          Returns as svg 
          <code>
            line
          </code>
           element to represent the
horizontal baseline of the graph.
        </div>
      </div>
      <div>
        <h1
          style={
            Object {
              "borderBottom": "1px solid #EEE",
              "fontSize": "25px",
              "margin": "20px 0 0 0",
              "padding": "0 0 5px 0",
            }
          }
        >
          Prop Types
        </h1>
        <div>
          <h3
            style={
              Object {
                "margin": "20px 0 0 0",
              }
            }
          >
            "
            ChartYAxisBaseline
            " Component
          </h3>
          <table
            className="info-table"
          >
            <thead>
              <tr>
                <th>
                  property
                </th>
                <th>
                  propType
                </th>
                <th>
                  required
                </th>
                <th>
                  default
                </th>
                <th>
                  description
                </th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  chartInnerWidth
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    number
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  Width of the chart inner area
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  innerLeft
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    number
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  Translate group horizontally
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  innerTop
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    number
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  Translate group vertically
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  yAxisTickCount
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    number
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  <span>
                     
                    Ideal number of ticks in the y-axis.
                  </span>
                  <span>
                    <br />
                     
                    TODO: This might not be necessary here as we only want the first tick.
                  </span>
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  yScale
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    func
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  d3 scale - used to determine the position of the baseline
                </td>
              </tr>
            </tbody>
          </table>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Presentational|Chart/Components/Data layer line 1`] = `
<div
  className="nature-graphic"
>
  <svg
    aria-hidden={true}
    focusable={false}
    height="300px"
    viewBox="0 0 600 300"
    width="600px"
  >
    <g
      transform="translate(20,20)"
    >
      <g>
        <path
          d="M0,237L49.09090909090909,235.2L98.18181818181819,233.4L147.27272727272725,229.8L196.36363636363637,225L245.45454545454544,217.2L294.5454545454545,205.8L343.6363636363636,189L392.72727272727275,163.2L441.81818181818187,124.80000000000001L490.9090909090909,67.20000000000002L540,-19.200000000000045"
          fill="none"
          index={0}
          stroke="#EA5153"
          strokeLinecap="round"
          strokeLinejoin="round"
          strokeWidth="3px"
        />
        <g>
          <circle
            cx={0}
            cy={237}
            fill="#EA5153"
            index={0}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            r="4px"
          />
          <circle
            cx={49.09090909090909}
            cy={235.2}
            fill="#EA5153"
            index={0}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            r="4px"
          />
          <circle
            cx={98.18181818181819}
            cy={233.4}
            fill="#EA5153"
            index={0}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            r="4px"
          />
          <circle
            cx={147.27272727272725}
            cy={229.8}
            fill="#EA5153"
            index={0}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            r="4px"
          />
          <circle
            cx={196.36363636363637}
            cy={225}
            fill="#EA5153"
            index={0}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            r="4px"
          />
          <circle
            cx={245.45454545454544}
            cy={217.2}
            fill="#EA5153"
            index={0}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            r="4px"
          />
          <circle
            cx={294.5454545454545}
            cy={205.8}
            fill="#EA5153"
            index={0}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            r="4px"
          />
          <circle
            cx={343.6363636363636}
            cy={189}
            fill="#EA5153"
            index={0}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            r="4px"
          />
          <circle
            cx={392.72727272727275}
            cy={163.2}
            fill="#EA5153"
            index={0}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            r="4px"
          />
          <circle
            cx={441.81818181818187}
            cy={124.80000000000001}
            fill="#EA5153"
            index={0}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            r="4px"
          />
          <circle
            cx={490.9090909090909}
            cy={67.20000000000002}
            fill="#EA5153"
            index={0}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            r="4px"
          />
          <circle
            cx={540}
            cy={-19.200000000000045}
            fill="#EA5153"
            index={0}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            r="4px"
          />
        </g>
      </g>
      <g>
        <path
          d="M0,237.6L49.09090909090909,237L98.18181818181819,236.4L147.27272727272725,234L196.36363636363637,225.6L245.45454545454544,220.8L294.5454545454545,216L343.6363636363636,210L392.72727272727275,192L441.81818181818187,90L490.9090909090909,60L540,30"
          fill="none"
          index={1}
          stroke="#75C6C5"
          strokeLinecap="round"
          strokeLinejoin="round"
          strokeWidth="3px"
        />
        <g>
          <circle
            cx={0}
            cy={237.6}
            fill="#75C6C5"
            index={1}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            r="4px"
          />
          <circle
            cx={49.09090909090909}
            cy={237}
            fill="#75C6C5"
            index={1}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            r="4px"
          />
          <circle
            cx={98.18181818181819}
            cy={236.4}
            fill="#75C6C5"
            index={1}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            r="4px"
          />
          <circle
            cx={147.27272727272725}
            cy={234}
            fill="#75C6C5"
            index={1}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            r="4px"
          />
          <circle
            cx={196.36363636363637}
            cy={225.6}
            fill="#75C6C5"
            index={1}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            r="4px"
          />
          <circle
            cx={245.45454545454544}
            cy={220.8}
            fill="#75C6C5"
            index={1}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            r="4px"
          />
          <circle
            cx={294.5454545454545}
            cy={216}
            fill="#75C6C5"
            index={1}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            r="4px"
          />
          <circle
            cx={343.6363636363636}
            cy={210}
            fill="#75C6C5"
            index={1}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            r="4px"
          />
          <circle
            cx={392.72727272727275}
            cy={192}
            fill="#75C6C5"
            index={1}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            r="4px"
          />
          <circle
            cx={441.81818181818187}
            cy={90}
            fill="#75C6C5"
            index={1}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            r="4px"
          />
          <circle
            cx={490.9090909090909}
            cy={60}
            fill="#75C6C5"
            index={1}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            r="4px"
          />
          <circle
            cx={540}
            cy={30}
            fill="#75C6C5"
            index={1}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            r="4px"
          />
        </g>
      </g>
      <g>
        <path
          d="M0,238.2L49.09090909090909,237L98.18181818181819,237L147.27272727272725,234L196.36363636363637,228L245.45454545454544,234L294.5454545454545,228L343.6363636363636,228L392.72727272727275,204L441.81818181818187,180L490.9090909090909,90L540,72"
          fill="none"
          index={2}
          stroke="#5A527E"
          strokeLinecap="round"
          strokeLinejoin="round"
          strokeWidth="3px"
        />
        <g>
          <circle
            cx={0}
            cy={238.2}
            fill="#5A527E"
            index={2}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            r="4px"
          />
          <circle
            cx={49.09090909090909}
            cy={237}
            fill="#5A527E"
            index={2}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            r="4px"
          />
          <circle
            cx={98.18181818181819}
            cy={237}
            fill="#5A527E"
            index={2}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            r="4px"
          />
          <circle
            cx={147.27272727272725}
            cy={234}
            fill="#5A527E"
            index={2}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            r="4px"
          />
          <circle
            cx={196.36363636363637}
            cy={228}
            fill="#5A527E"
            index={2}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            r="4px"
          />
          <circle
            cx={245.45454545454544}
            cy={234}
            fill="#5A527E"
            index={2}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            r="4px"
          />
          <circle
            cx={294.5454545454545}
            cy={228}
            fill="#5A527E"
            index={2}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            r="4px"
          />
          <circle
            cx={343.6363636363636}
            cy={228}
            fill="#5A527E"
            index={2}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            r="4px"
          />
          <circle
            cx={392.72727272727275}
            cy={204}
            fill="#5A527E"
            index={2}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            r="4px"
          />
          <circle
            cx={441.81818181818187}
            cy={180}
            fill="#5A527E"
            index={2}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            r="4px"
          />
          <circle
            cx={490.9090909090909}
            cy={90}
            fill="#5A527E"
            index={2}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            r="4px"
          />
          <circle
            cx={540}
            cy={72}
            fill="#5A527E"
            index={2}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            r="4px"
          />
        </g>
      </g>
      <g>
        <path
          d="M0,238.8L49.09090909090909,236.4L98.18181818181819,235.2L147.27272727272725,228L196.36363636363637,222L245.45454545454544,186L294.5454545454545,180L343.6363636363636,120L392.72727272727275,120L441.81818181818187,132L490.9090909090909,114L540,120"
          fill="none"
          index={3}
          stroke="#8B0D16"
          strokeLinecap="round"
          strokeLinejoin="round"
          strokeWidth="3px"
        />
        <g>
          <circle
            cx={0}
            cy={238.8}
            fill="#8B0D16"
            index={3}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            r="4px"
          />
          <circle
            cx={49.09090909090909}
            cy={236.4}
            fill="#8B0D16"
            index={3}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            r="4px"
          />
          <circle
            cx={98.18181818181819}
            cy={235.2}
            fill="#8B0D16"
            index={3}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            r="4px"
          />
          <circle
            cx={147.27272727272725}
            cy={228}
            fill="#8B0D16"
            index={3}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            r="4px"
          />
          <circle
            cx={196.36363636363637}
            cy={222}
            fill="#8B0D16"
            index={3}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            r="4px"
          />
          <circle
            cx={245.45454545454544}
            cy={186}
            fill="#8B0D16"
            index={3}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            r="4px"
          />
          <circle
            cx={294.5454545454545}
            cy={180}
            fill="#8B0D16"
            index={3}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            r="4px"
          />
          <circle
            cx={343.6363636363636}
            cy={120}
            fill="#8B0D16"
            index={3}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            r="4px"
          />
          <circle
            cx={392.72727272727275}
            cy={120}
            fill="#8B0D16"
            index={3}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            r="4px"
          />
          <circle
            cx={441.81818181818187}
            cy={132}
            fill="#8B0D16"
            index={3}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            r="4px"
          />
          <circle
            cx={490.9090909090909}
            cy={114}
            fill="#8B0D16"
            index={3}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            r="4px"
          />
          <circle
            cx={540}
            cy={120}
            fill="#8B0D16"
            index={3}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            r="4px"
          />
        </g>
      </g>
      <g>
        <path
          d="M0,239.4L49.09090909090909,235.8L98.18181818181819,222L147.27272727272725,210L196.36363636363637,186L245.45454545454544,204L294.5454545454545,150L343.6363636363636,174L392.72727272727275,144L441.81818181818187,60L490.9090909090909,30L540,90"
          fill="none"
          index={4}
          stroke="#8FC297"
          strokeLinecap="round"
          strokeLinejoin="round"
          strokeWidth="3px"
        />
        <g>
          <circle
            cx={0}
            cy={239.4}
            fill="#8FC297"
            index={4}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            r="4px"
          />
          <circle
            cx={49.09090909090909}
            cy={235.8}
            fill="#8FC297"
            index={4}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            r="4px"
          />
          <circle
            cx={98.18181818181819}
            cy={222}
            fill="#8FC297"
            index={4}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            r="4px"
          />
          <circle
            cx={147.27272727272725}
            cy={210}
            fill="#8FC297"
            index={4}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            r="4px"
          />
          <circle
            cx={196.36363636363637}
            cy={186}
            fill="#8FC297"
            index={4}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            r="4px"
          />
          <circle
            cx={245.45454545454544}
            cy={204}
            fill="#8FC297"
            index={4}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            r="4px"
          />
          <circle
            cx={294.5454545454545}
            cy={150}
            fill="#8FC297"
            index={4}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            r="4px"
          />
          <circle
            cx={343.6363636363636}
            cy={174}
            fill="#8FC297"
            index={4}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            r="4px"
          />
          <circle
            cx={392.72727272727275}
            cy={144}
            fill="#8FC297"
            index={4}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            r="4px"
          />
          <circle
            cx={441.81818181818187}
            cy={60}
            fill="#8FC297"
            index={4}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            r="4px"
          />
          <circle
            cx={490.9090909090909}
            cy={30}
            fill="#8FC297"
            index={4}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            r="4px"
          />
          <circle
            cx={540}
            cy={90}
            fill="#8FC297"
            index={4}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            r="4px"
          />
        </g>
      </g>
    </g>
  </svg>
</div>
`;

exports[`Storyshots Presentational|Chart/Components/Data layer/Bars grouped - alt data 1`] = `
<div
  className="nature-graphic"
>
  <svg
    aria-hidden={true}
    focusable={false}
    height="300px"
    viewBox="0 0 600 300"
    width="600px"
  >
    <g
      transform="translate(20,20)"
    >
      <g>
        <g>
          <rect
            fill="#EA5153"
            height={164}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={9.667519181585677}
            x={0}
            y={96}
          />
          <rect
            fill="#EA5153"
            height={45.14285714285714}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={9.667519181585677}
            x={154.28571428571428}
            y={214.85714285714286}
          />
          <rect
            fill="#EA5153"
            height={36}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={9.667519181585677}
            x={308.57142857142856}
            y={224}
          />
          <rect
            fill="#EA5153"
            height={20.022857142857134}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={9.667519181585677}
            x={462.85714285714283}
            y={239.97714285714287}
          />
        </g>
      </g>
      <g>
        <g>
          <rect
            fill="#75C6C5"
            height={260}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={9.667519181585677}
            x={13.81074168797954}
            y={0}
          />
          <rect
            fill="#75C6C5"
            height={68}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={9.667519181585677}
            x={168.09645597369382}
            y={192}
          />
          <rect
            fill="#75C6C5"
            height={54.28571428571428}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={9.667519181585677}
            x={322.3821702594081}
            y={205.71428571428572}
          />
          <rect
            fill="#75C6C5"
            height={54.28571428571428}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={9.667519181585677}
            x={476.6678845451224}
            y={205.71428571428572}
          />
        </g>
      </g>
    </g>
  </svg>
</div>
`;

exports[`Storyshots Presentational|Chart/Components/Data layer/Bars grouped 1`] = `
<div
  className="nature-graphic"
>
  <svg
    aria-hidden={true}
    focusable={false}
    height="300px"
    viewBox="0 0 600 300"
    width="600px"
  >
    <g
      transform="translate(20,20)"
    >
      <g>
        <g>
          <rect
            fill="#EA5153"
            height={23}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={3.496762257169288}
            x={0}
            y={237}
          />
          <rect
            fill="#EA5153"
            height={24.80000000000001}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={3.496762257169288}
            x={46.95652173913044}
            y={235.2}
          />
          <rect
            fill="#EA5153"
            height={26.599999999999994}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={3.496762257169288}
            x={93.91304347826087}
            y={233.4}
          />
          <rect
            fill="#EA5153"
            height={30.19999999999999}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={3.496762257169288}
            x={140.8695652173913}
            y={229.8}
          />
          <rect
            fill="#EA5153"
            height={35}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={3.496762257169288}
            x={187.82608695652175}
            y={225}
          />
          <rect
            fill="#EA5153"
            height={42.80000000000001}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={3.496762257169288}
            x={234.7826086956522}
            y={217.2}
          />
          <rect
            fill="#EA5153"
            height={54.19999999999999}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={3.496762257169288}
            x={281.7391304347826}
            y={205.8}
          />
          <rect
            fill="#EA5153"
            height={71}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={3.496762257169288}
            x={328.69565217391306}
            y={189}
          />
          <rect
            fill="#EA5153"
            height={96.80000000000001}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={3.496762257169288}
            x={375.6521739130435}
            y={163.2}
          />
          <rect
            fill="#EA5153"
            height={135.2}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={3.496762257169288}
            x={422.60869565217394}
            y={124.80000000000001}
          />
          <rect
            fill="#EA5153"
            height={192.79999999999998}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={3.496762257169288}
            x={469.5652173913044}
            y={67.20000000000002}
          />
          <rect
            fill="#EA5153"
            height={279.20000000000005}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={3.496762257169288}
            x={516.5217391304348}
            y={-19.200000000000045}
          />
        </g>
      </g>
      <g>
        <g>
          <rect
            fill="#75C6C5"
            height={22.400000000000006}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={3.496762257169288}
            x={4.995374653098983}
            y={237.6}
          />
          <rect
            fill="#75C6C5"
            height={23}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={3.496762257169288}
            x={51.95189639222942}
            y={237}
          />
          <rect
            fill="#75C6C5"
            height={23.599999999999994}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={3.496762257169288}
            x={98.90841813135985}
            y={236.4}
          />
          <rect
            fill="#75C6C5"
            height={26}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={3.496762257169288}
            x={145.8649398704903}
            y={234}
          />
          <rect
            fill="#75C6C5"
            height={34.400000000000006}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={3.496762257169288}
            x={192.82146160962074}
            y={225.6}
          />
          <rect
            fill="#75C6C5"
            height={39.19999999999999}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={3.496762257169288}
            x={239.77798334875118}
            y={220.8}
          />
          <rect
            fill="#75C6C5"
            height={44}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={3.496762257169288}
            x={286.7345050878816}
            y={216}
          />
          <rect
            fill="#75C6C5"
            height={50}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={3.496762257169288}
            x={333.691026827012}
            y={210}
          />
          <rect
            fill="#75C6C5"
            height={68}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={3.496762257169288}
            x={380.64754856614246}
            y={192}
          />
          <rect
            fill="#75C6C5"
            height={170}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={3.496762257169288}
            x={427.6040703052729}
            y={90}
          />
          <rect
            fill="#75C6C5"
            height={200}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={3.496762257169288}
            x={474.56059204440334}
            y={60}
          />
          <rect
            fill="#75C6C5"
            height={230}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={3.496762257169288}
            x={521.5171137835338}
            y={30}
          />
        </g>
      </g>
      <g>
        <g>
          <rect
            fill="#5A527E"
            height={21.80000000000001}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={3.496762257169288}
            x={9.990749306197966}
            y={238.2}
          />
          <rect
            fill="#5A527E"
            height={23}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={3.496762257169288}
            x={56.94727104532841}
            y={237}
          />
          <rect
            fill="#5A527E"
            height={23}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={3.496762257169288}
            x={103.90379278445884}
            y={237}
          />
          <rect
            fill="#5A527E"
            height={26}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={3.496762257169288}
            x={150.86031452358927}
            y={234}
          />
          <rect
            fill="#5A527E"
            height={32}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={3.496762257169288}
            x={197.8168362627197}
            y={228}
          />
          <rect
            fill="#5A527E"
            height={26}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={3.496762257169288}
            x={244.77335800185014}
            y={234}
          />
          <rect
            fill="#5A527E"
            height={32}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={3.496762257169288}
            x={291.7298797409806}
            y={228}
          />
          <rect
            fill="#5A527E"
            height={32}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={3.496762257169288}
            x={338.68640148011104}
            y={228}
          />
          <rect
            fill="#5A527E"
            height={56}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={3.496762257169288}
            x={385.6429232192415}
            y={204}
          />
          <rect
            fill="#5A527E"
            height={80}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={3.496762257169288}
            x={432.5994449583719}
            y={180}
          />
          <rect
            fill="#5A527E"
            height={170}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={3.496762257169288}
            x={479.55596669750236}
            y={90}
          />
          <rect
            fill="#5A527E"
            height={188}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={3.496762257169288}
            x={526.5124884366327}
            y={72}
          />
        </g>
      </g>
      <g>
        <g>
          <rect
            fill="#8B0D16"
            height={21.19999999999999}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={3.496762257169288}
            x={14.986123959296949}
            y={238.8}
          />
          <rect
            fill="#8B0D16"
            height={23.599999999999994}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={3.496762257169288}
            x={61.942645698427384}
            y={236.4}
          />
          <rect
            fill="#8B0D16"
            height={24.80000000000001}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={3.496762257169288}
            x={108.89916743755782}
            y={235.2}
          />
          <rect
            fill="#8B0D16"
            height={32}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={3.496762257169288}
            x={155.85568917668826}
            y={228}
          />
          <rect
            fill="#8B0D16"
            height={38}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={3.496762257169288}
            x={202.8122109158187}
            y={222}
          />
          <rect
            fill="#8B0D16"
            height={74}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={3.496762257169288}
            x={249.76873265494913}
            y={186}
          />
          <rect
            fill="#8B0D16"
            height={80}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={3.496762257169288}
            x={296.72525439407957}
            y={180}
          />
          <rect
            fill="#8B0D16"
            height={140}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={3.496762257169288}
            x={343.68177613321}
            y={120}
          />
          <rect
            fill="#8B0D16"
            height={140}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={3.496762257169288}
            x={390.63829787234044}
            y={120}
          />
          <rect
            fill="#8B0D16"
            height={128}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={3.496762257169288}
            x={437.5948196114709}
            y={132}
          />
          <rect
            fill="#8B0D16"
            height={146}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={3.496762257169288}
            x={484.5513413506013}
            y={114}
          />
          <rect
            fill="#8B0D16"
            height={140}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={3.496762257169288}
            x={531.5078630897317}
            y={120}
          />
        </g>
      </g>
      <g>
        <g>
          <rect
            fill="#8FC297"
            height={20.599999999999994}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={3.496762257169288}
            x={19.98149861239593}
            y={239.4}
          />
          <rect
            fill="#8FC297"
            height={24.19999999999999}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={3.496762257169288}
            x={66.93802035152638}
            y={235.8}
          />
          <rect
            fill="#8FC297"
            height={38}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={3.496762257169288}
            x={113.89454209065681}
            y={222}
          />
          <rect
            fill="#8FC297"
            height={50}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={3.496762257169288}
            x={160.85106382978725}
            y={210}
          />
          <rect
            fill="#8FC297"
            height={74}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={3.496762257169288}
            x={207.8075855689177}
            y={186}
          />
          <rect
            fill="#8FC297"
            height={56}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={3.496762257169288}
            x={254.76410730804812}
            y={204}
          />
          <rect
            fill="#8FC297"
            height={110}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={3.496762257169288}
            x={301.72062904717853}
            y={150}
          />
          <rect
            fill="#8FC297"
            height={86}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={3.496762257169288}
            x={348.67715078630897}
            y={174}
          />
          <rect
            fill="#8FC297"
            height={116}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={3.496762257169288}
            x={395.6336725254394}
            y={144}
          />
          <rect
            fill="#8FC297"
            height={200}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={3.496762257169288}
            x={442.59019426456985}
            y={60}
          />
          <rect
            fill="#8FC297"
            height={230}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={3.496762257169288}
            x={489.5467160037003}
            y={30}
          />
          <rect
            fill="#8FC297"
            height={170}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={3.496762257169288}
            x={536.5032377428307}
            y={90}
          />
        </g>
      </g>
    </g>
  </svg>
</div>
`;

exports[`Storyshots Presentational|Chart/Components/Data layer/Bars stacked 1`] = `
<div
  className="nature-graphic"
>
  <svg
    aria-hidden={true}
    focusable={false}
    height="300px"
    viewBox="0 0 600 300"
    width="600px"
  >
    <g
      transform="translate(20,20)"
    >
      <g>
        <g>
          <rect
            fill="#EA5153"
            height={0.75}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={23.47826086956522}
            x={0}
            y={239.25}
          />
          <rect
            fill="#EA5153"
            height={1.1999999999999886}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={23.47826086956522}
            x={46.95652173913044}
            y={238.8}
          />
          <rect
            fill="#EA5153"
            height={1.6500000000000057}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={23.47826086956522}
            x={93.91304347826087}
            y={238.35}
          />
          <rect
            fill="#EA5153"
            height={2.5500000000000114}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={23.47826086956522}
            x={140.8695652173913}
            y={237.45}
          />
          <rect
            fill="#EA5153"
            height={3.75}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={23.47826086956522}
            x={187.82608695652175}
            y={236.25}
          />
          <rect
            fill="#EA5153"
            height={5.699999999999989}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={23.47826086956522}
            x={234.7826086956522}
            y={234.3}
          />
          <rect
            fill="#EA5153"
            height={8.550000000000011}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={23.47826086956522}
            x={281.7391304347826}
            y={231.45}
          />
          <rect
            fill="#EA5153"
            height={12.75}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={23.47826086956522}
            x={328.69565217391306}
            y={227.25}
          />
          <rect
            fill="#EA5153"
            height={19.19999999999999}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={23.47826086956522}
            x={375.6521739130435}
            y={220.8}
          />
          <rect
            fill="#EA5153"
            height={28.80000000000001}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={23.47826086956522}
            x={422.60869565217394}
            y={211.2}
          />
          <rect
            fill="#EA5153"
            height={43.19999999999999}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={23.47826086956522}
            x={469.5652173913044}
            y={196.8}
          />
          <rect
            fill="#EA5153"
            height={64.80000000000001}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={23.47826086956522}
            x={516.5217391304348}
            y={175.2}
          />
        </g>
      </g>
      <g>
        <g>
          <rect
            fill="#75C6C5"
            height={0.5999999999999943}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={23.47826086956522}
            x={0}
            y={238.65}
          />
          <rect
            fill="#75C6C5"
            height={0.75}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={23.47826086956522}
            x={46.95652173913044}
            y={238.05}
          />
          <rect
            fill="#75C6C5"
            height={0.9000000000000057}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={23.47826086956522}
            x={93.91304347826087}
            y={237.45}
          />
          <rect
            fill="#75C6C5"
            height={1.5}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={23.47826086956522}
            x={140.8695652173913}
            y={235.95}
          />
          <rect
            fill="#75C6C5"
            height={3.5999999999999943}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={23.47826086956522}
            x={187.82608695652175}
            y={232.65}
          />
          <rect
            fill="#75C6C5"
            height={4.800000000000011}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={23.47826086956522}
            x={234.7826086956522}
            y={229.5}
          />
          <rect
            fill="#75C6C5"
            height={6}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={23.47826086956522}
            x={281.7391304347826}
            y={225.45}
          />
          <rect
            fill="#75C6C5"
            height={7.5}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={23.47826086956522}
            x={328.69565217391306}
            y={219.75}
          />
          <rect
            fill="#75C6C5"
            height={12}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={23.47826086956522}
            x={375.6521739130435}
            y={208.8}
          />
          <rect
            fill="#75C6C5"
            height={37.5}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={23.47826086956522}
            x={422.60869565217394}
            y={173.7}
          />
          <rect
            fill="#75C6C5"
            height={45}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={23.47826086956522}
            x={469.5652173913044}
            y={151.8}
          />
          <rect
            fill="#75C6C5"
            height={52.5}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={23.47826086956522}
            x={516.5217391304348}
            y={122.69999999999999}
          />
        </g>
      </g>
      <g>
        <g>
          <rect
            fill="#5A527E"
            height={0.45000000000001705}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={23.47826086956522}
            x={0}
            y={238.2}
          />
          <rect
            fill="#5A527E"
            height={0.75}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={23.47826086956522}
            x={46.95652173913044}
            y={237.3}
          />
          <rect
            fill="#5A527E"
            height={0.75}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={23.47826086956522}
            x={93.91304347826087}
            y={236.7}
          />
          <rect
            fill="#5A527E"
            height={1.5}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={23.47826086956522}
            x={140.8695652173913}
            y={234.45}
          />
          <rect
            fill="#5A527E"
            height={3}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={23.47826086956522}
            x={187.82608695652175}
            y={229.65}
          />
          <rect
            fill="#5A527E"
            height={1.5}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={23.47826086956522}
            x={234.7826086956522}
            y={228}
          />
          <rect
            fill="#5A527E"
            height={3}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={23.47826086956522}
            x={281.7391304347826}
            y={222.45}
          />
          <rect
            fill="#5A527E"
            height={3}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={23.47826086956522}
            x={328.69565217391306}
            y={216.75}
          />
          <rect
            fill="#5A527E"
            height={9}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={23.47826086956522}
            x={375.6521739130435}
            y={199.8}
          />
          <rect
            fill="#5A527E"
            height={15}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={23.47826086956522}
            x={422.60869565217394}
            y={158.7}
          />
          <rect
            fill="#5A527E"
            height={37.50000000000003}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={23.47826086956522}
            x={469.5652173913044}
            y={114.29999999999998}
          />
          <rect
            fill="#5A527E"
            height={41.99999999999997}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={23.47826086956522}
            x={516.5217391304348}
            y={80.70000000000002}
          />
        </g>
      </g>
      <g>
        <g>
          <rect
            fill="#8B0D16"
            height={0.29999999999998295}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={23.47826086956522}
            x={0}
            y={237.9}
          />
          <rect
            fill="#8B0D16"
            height={0.9000000000000057}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={23.47826086956522}
            x={46.95652173913044}
            y={236.4}
          />
          <rect
            fill="#8B0D16"
            height={1.1999999999999886}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={23.47826086956522}
            x={93.91304347826087}
            y={235.5}
          />
          <rect
            fill="#8B0D16"
            height={3}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={23.47826086956522}
            x={140.8695652173913}
            y={231.45}
          />
          <rect
            fill="#8B0D16"
            height={4.5}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={23.47826086956522}
            x={187.82608695652175}
            y={225.15}
          />
          <rect
            fill="#8B0D16"
            height={13.5}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={23.47826086956522}
            x={234.7826086956522}
            y={214.5}
          />
          <rect
            fill="#8B0D16"
            height={15}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={23.47826086956522}
            x={281.7391304347826}
            y={207.45}
          />
          <rect
            fill="#8B0D16"
            height={30}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={23.47826086956522}
            x={328.69565217391306}
            y={186.75}
          />
          <rect
            fill="#8B0D16"
            height={30}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={23.47826086956522}
            x={375.6521739130435}
            y={169.8}
          />
          <rect
            fill="#8B0D16"
            height={27}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={23.47826086956522}
            x={422.60869565217394}
            y={131.7}
          />
          <rect
            fill="#8B0D16"
            height={31.5}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={23.47826086956522}
            x={469.5652173913044}
            y={82.79999999999998}
          />
          <rect
            fill="#8B0D16"
            height={30}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={23.47826086956522}
            x={516.5217391304348}
            y={50.70000000000002}
          />
        </g>
      </g>
      <g>
        <g>
          <rect
            fill="#8FC297"
            height={0.15000000000000568}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={23.47826086956522}
            x={0}
            y={237.75}
          />
          <rect
            fill="#8FC297"
            height={1.0500000000000114}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={23.47826086956522}
            x={46.95652173913044}
            y={235.35}
          />
          <rect
            fill="#8FC297"
            height={4.5}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={23.47826086956522}
            x={93.91304347826087}
            y={231}
          />
          <rect
            fill="#8FC297"
            height={7.5}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={23.47826086956522}
            x={140.8695652173913}
            y={223.95}
          />
          <rect
            fill="#8FC297"
            height={13.5}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={23.47826086956522}
            x={187.82608695652175}
            y={211.65}
          />
          <rect
            fill="#8FC297"
            height={9}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={23.47826086956522}
            x={234.7826086956522}
            y={205.5}
          />
          <rect
            fill="#8FC297"
            height={22.5}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={23.47826086956522}
            x={281.7391304347826}
            y={184.95}
          />
          <rect
            fill="#8FC297"
            height={16.5}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={23.47826086956522}
            x={328.69565217391306}
            y={170.25}
          />
          <rect
            fill="#8FC297"
            height={24}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={23.47826086956522}
            x={375.6521739130435}
            y={145.8}
          />
          <rect
            fill="#8FC297"
            height={45}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={23.47826086956522}
            x={422.60869565217394}
            y={86.69999999999999}
          />
          <rect
            fill="#8FC297"
            height={52.5}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={23.47826086956522}
            x={469.5652173913044}
            y={30.299999999999983}
          />
          <rect
            fill="#8FC297"
            height={37.5}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            opacity={1}
            width={23.47826086956522}
            x={516.5217391304348}
            y={13.200000000000017}
          />
        </g>
      </g>
    </g>
  </svg>
</div>
`;

exports[`Storyshots Presentational|Chart/Components/Dots default 1`] = `
<div
  className="nature-graphic"
>
  <svg
    aria-hidden={true}
    focusable={false}
    height="300px"
    viewBox="0 0 600 300"
    width="600px"
  >
    <g>
      <circle
        cx={0}
        cy={237}
        fill="#EA5153"
        index={0}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        r="4px"
      />
      <circle
        cx={49.09090909090909}
        cy={235.2}
        fill="#EA5153"
        index={0}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        r="4px"
      />
      <circle
        cx={98.18181818181819}
        cy={233.4}
        fill="#EA5153"
        index={0}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        r="4px"
      />
      <circle
        cx={147.27272727272725}
        cy={229.8}
        fill="#EA5153"
        index={0}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        r="4px"
      />
      <circle
        cx={196.36363636363637}
        cy={225}
        fill="#EA5153"
        index={0}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        r="4px"
      />
      <circle
        cx={245.45454545454544}
        cy={217.2}
        fill="#EA5153"
        index={0}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        r="4px"
      />
      <circle
        cx={294.5454545454545}
        cy={205.8}
        fill="#EA5153"
        index={0}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        r="4px"
      />
      <circle
        cx={343.6363636363636}
        cy={189}
        fill="#EA5153"
        index={0}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        r="4px"
      />
      <circle
        cx={392.72727272727275}
        cy={163.2}
        fill="#EA5153"
        index={0}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        r="4px"
      />
      <circle
        cx={441.81818181818187}
        cy={124.80000000000001}
        fill="#EA5153"
        index={0}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        r="4px"
      />
      <circle
        cx={490.9090909090909}
        cy={67.20000000000002}
        fill="#EA5153"
        index={0}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        r="4px"
      />
      <circle
        cx={540}
        cy={-19.200000000000045}
        fill="#EA5153"
        index={0}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        r="4px"
      />
    </g>
  </svg>
</div>
`;

exports[`Storyshots Presentational|Chart/Components/Dots multiple 1`] = `
<div
  className="nature-graphic"
>
  <svg
    aria-hidden={true}
    focusable={false}
    height="300px"
    viewBox="0 0 600 300"
    width="600px"
  >
    <g>
      <circle
        cx={0}
        cy={237}
        fill="#EA5153"
        index={0}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        r="4px"
      />
      <circle
        cx={49.09090909090909}
        cy={235.2}
        fill="#EA5153"
        index={0}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        r="4px"
      />
      <circle
        cx={98.18181818181819}
        cy={233.4}
        fill="#EA5153"
        index={0}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        r="4px"
      />
      <circle
        cx={147.27272727272725}
        cy={229.8}
        fill="#EA5153"
        index={0}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        r="4px"
      />
      <circle
        cx={196.36363636363637}
        cy={225}
        fill="#EA5153"
        index={0}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        r="4px"
      />
      <circle
        cx={245.45454545454544}
        cy={217.2}
        fill="#EA5153"
        index={0}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        r="4px"
      />
      <circle
        cx={294.5454545454545}
        cy={205.8}
        fill="#EA5153"
        index={0}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        r="4px"
      />
      <circle
        cx={343.6363636363636}
        cy={189}
        fill="#EA5153"
        index={0}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        r="4px"
      />
      <circle
        cx={392.72727272727275}
        cy={163.2}
        fill="#EA5153"
        index={0}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        r="4px"
      />
      <circle
        cx={441.81818181818187}
        cy={124.80000000000001}
        fill="#EA5153"
        index={0}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        r="4px"
      />
      <circle
        cx={490.9090909090909}
        cy={67.20000000000002}
        fill="#EA5153"
        index={0}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        r="4px"
      />
      <circle
        cx={540}
        cy={-19.200000000000045}
        fill="#EA5153"
        index={0}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        r="4px"
      />
    </g>
    <g>
      <circle
        cx={0}
        cy={237.6}
        fill="#75C6C5"
        index={1}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        r="4px"
      />
      <circle
        cx={49.09090909090909}
        cy={237}
        fill="#75C6C5"
        index={1}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        r="4px"
      />
      <circle
        cx={98.18181818181819}
        cy={236.4}
        fill="#75C6C5"
        index={1}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        r="4px"
      />
      <circle
        cx={147.27272727272725}
        cy={234}
        fill="#75C6C5"
        index={1}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        r="4px"
      />
      <circle
        cx={196.36363636363637}
        cy={225.6}
        fill="#75C6C5"
        index={1}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        r="4px"
      />
      <circle
        cx={245.45454545454544}
        cy={220.8}
        fill="#75C6C5"
        index={1}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        r="4px"
      />
      <circle
        cx={294.5454545454545}
        cy={216}
        fill="#75C6C5"
        index={1}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        r="4px"
      />
      <circle
        cx={343.6363636363636}
        cy={210}
        fill="#75C6C5"
        index={1}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        r="4px"
      />
      <circle
        cx={392.72727272727275}
        cy={192}
        fill="#75C6C5"
        index={1}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        r="4px"
      />
      <circle
        cx={441.81818181818187}
        cy={90}
        fill="#75C6C5"
        index={1}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        r="4px"
      />
      <circle
        cx={490.9090909090909}
        cy={60}
        fill="#75C6C5"
        index={1}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        r="4px"
      />
      <circle
        cx={540}
        cy={30}
        fill="#75C6C5"
        index={1}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        r="4px"
      />
    </g>
    <g>
      <circle
        cx={0}
        cy={238.2}
        fill="#5A527E"
        index={2}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        r="4px"
      />
      <circle
        cx={49.09090909090909}
        cy={237}
        fill="#5A527E"
        index={2}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        r="4px"
      />
      <circle
        cx={98.18181818181819}
        cy={237}
        fill="#5A527E"
        index={2}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        r="4px"
      />
      <circle
        cx={147.27272727272725}
        cy={234}
        fill="#5A527E"
        index={2}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        r="4px"
      />
      <circle
        cx={196.36363636363637}
        cy={228}
        fill="#5A527E"
        index={2}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        r="4px"
      />
      <circle
        cx={245.45454545454544}
        cy={234}
        fill="#5A527E"
        index={2}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        r="4px"
      />
      <circle
        cx={294.5454545454545}
        cy={228}
        fill="#5A527E"
        index={2}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        r="4px"
      />
      <circle
        cx={343.6363636363636}
        cy={228}
        fill="#5A527E"
        index={2}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        r="4px"
      />
      <circle
        cx={392.72727272727275}
        cy={204}
        fill="#5A527E"
        index={2}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        r="4px"
      />
      <circle
        cx={441.81818181818187}
        cy={180}
        fill="#5A527E"
        index={2}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        r="4px"
      />
      <circle
        cx={490.9090909090909}
        cy={90}
        fill="#5A527E"
        index={2}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        r="4px"
      />
      <circle
        cx={540}
        cy={72}
        fill="#5A527E"
        index={2}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        r="4px"
      />
    </g>
    <g>
      <circle
        cx={0}
        cy={238.8}
        fill="#8B0D16"
        index={3}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        r="4px"
      />
      <circle
        cx={49.09090909090909}
        cy={236.4}
        fill="#8B0D16"
        index={3}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        r="4px"
      />
      <circle
        cx={98.18181818181819}
        cy={235.2}
        fill="#8B0D16"
        index={3}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        r="4px"
      />
      <circle
        cx={147.27272727272725}
        cy={228}
        fill="#8B0D16"
        index={3}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        r="4px"
      />
      <circle
        cx={196.36363636363637}
        cy={222}
        fill="#8B0D16"
        index={3}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        r="4px"
      />
      <circle
        cx={245.45454545454544}
        cy={186}
        fill="#8B0D16"
        index={3}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        r="4px"
      />
      <circle
        cx={294.5454545454545}
        cy={180}
        fill="#8B0D16"
        index={3}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        r="4px"
      />
      <circle
        cx={343.6363636363636}
        cy={120}
        fill="#8B0D16"
        index={3}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        r="4px"
      />
      <circle
        cx={392.72727272727275}
        cy={120}
        fill="#8B0D16"
        index={3}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        r="4px"
      />
      <circle
        cx={441.81818181818187}
        cy={132}
        fill="#8B0D16"
        index={3}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        r="4px"
      />
      <circle
        cx={490.9090909090909}
        cy={114}
        fill="#8B0D16"
        index={3}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        r="4px"
      />
      <circle
        cx={540}
        cy={120}
        fill="#8B0D16"
        index={3}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        r="4px"
      />
    </g>
    <g>
      <circle
        cx={0}
        cy={239.4}
        fill="#8FC297"
        index={4}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        r="4px"
      />
      <circle
        cx={49.09090909090909}
        cy={235.8}
        fill="#8FC297"
        index={4}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        r="4px"
      />
      <circle
        cx={98.18181818181819}
        cy={222}
        fill="#8FC297"
        index={4}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        r="4px"
      />
      <circle
        cx={147.27272727272725}
        cy={210}
        fill="#8FC297"
        index={4}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        r="4px"
      />
      <circle
        cx={196.36363636363637}
        cy={186}
        fill="#8FC297"
        index={4}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        r="4px"
      />
      <circle
        cx={245.45454545454544}
        cy={204}
        fill="#8FC297"
        index={4}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        r="4px"
      />
      <circle
        cx={294.5454545454545}
        cy={150}
        fill="#8FC297"
        index={4}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        r="4px"
      />
      <circle
        cx={343.6363636363636}
        cy={174}
        fill="#8FC297"
        index={4}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        r="4px"
      />
      <circle
        cx={392.72727272727275}
        cy={144}
        fill="#8FC297"
        index={4}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        r="4px"
      />
      <circle
        cx={441.81818181818187}
        cy={60}
        fill="#8FC297"
        index={4}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        r="4px"
      />
      <circle
        cx={490.9090909090909}
        cy={30}
        fill="#8FC297"
        index={4}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        r="4px"
      />
      <circle
        cx={540}
        cy={90}
        fill="#8FC297"
        index={4}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        r="4px"
      />
    </g>
  </svg>
</div>
`;

exports[`Storyshots Presentational|Chart/Components/Line default 1`] = `
<div
  className="nature-graphic"
>
  <svg
    aria-hidden={true}
    focusable={false}
    height="300px"
    viewBox="0 0 600 300"
    width="600px"
  >
    <path
      d="M0,237.33333333333334L49.09090909090909,235.73333333333332L98.18181818181819,234.13333333333333L147.27272727272725,230.93333333333334L196.36363636363637,226.66666666666666L245.45454545454544,219.73333333333335L294.5454545454545,209.6L343.6363636363636,194.66666666666669L392.72727272727275,171.73333333333335L441.81818181818187,137.6L490.9090909090909,86.4L540,9.600000000000023"
      fill="none"
      index={0}
      stroke="#EA5153"
      strokeLinecap="round"
      strokeLinejoin="round"
      strokeWidth="3px"
    />
  </svg>
</div>
`;

exports[`Storyshots Presentational|Chart/Components/Line multiple 1`] = `
<div
  className="nature-graphic"
>
  <svg
    aria-hidden={true}
    focusable={false}
    height="300px"
    viewBox="0 0 600 300"
    width="600px"
  >
    <path
      d="M0,237.33333333333334L49.09090909090909,235.73333333333332L98.18181818181819,234.13333333333333L147.27272727272725,230.93333333333334L196.36363636363637,226.66666666666666L245.45454545454544,219.73333333333335L294.5454545454545,209.6L343.6363636363636,194.66666666666669L392.72727272727275,171.73333333333335L441.81818181818187,137.6L490.9090909090909,86.4L540,9.600000000000023"
      fill="none"
      index={0}
      stroke="#EA5153"
      strokeLinecap="round"
      strokeLinejoin="round"
      strokeWidth="3px"
    />
    <path
      d="M0,237.86666666666667L49.09090909090909,237.33333333333334L98.18181818181819,236.8L147.27272727272725,234.66666666666666L196.36363636363637,227.2L245.45454545454544,222.93333333333334L294.5454545454545,218.66666666666666L343.6363636363636,213.33333333333334L392.72727272727275,197.33333333333331L441.81818181818187,106.66666666666666L490.9090909090909,80L540,53.33333333333334"
      fill="none"
      index={1}
      stroke="#75C6C5"
      strokeLinecap="round"
      strokeLinejoin="round"
      strokeWidth="3px"
    />
    <path
      d="M0,238.4L49.09090909090909,237.33333333333334L98.18181818181819,237.33333333333334L147.27272727272725,234.66666666666666L196.36363636363637,229.33333333333334L245.45454545454544,234.66666666666666L294.5454545454545,229.33333333333334L343.6363636363636,229.33333333333334L392.72727272727275,208L441.81818181818187,186.66666666666669L490.9090909090909,106.66666666666666L540,90.66666666666666"
      fill="none"
      index={2}
      stroke="#5A527E"
      strokeLinecap="round"
      strokeLinejoin="round"
      strokeWidth="3px"
    />
    <path
      d="M0,238.93333333333334L49.09090909090909,236.8L98.18181818181819,235.73333333333332L147.27272727272725,229.33333333333334L196.36363636363637,224L245.45454545454544,192L294.5454545454545,186.66666666666669L343.6363636363636,133.33333333333334L392.72727272727275,133.33333333333334L441.81818181818187,144L490.9090909090909,128L540,133.33333333333334"
      fill="none"
      index={3}
      stroke="#8B0D16"
      strokeLinecap="round"
      strokeLinejoin="round"
      strokeWidth="3px"
    />
    <path
      d="M0,239.46666666666667L49.09090909090909,236.26666666666668L98.18181818181819,224L147.27272727272725,213.33333333333334L196.36363636363637,192L245.45454545454544,208L294.5454545454545,160L343.6363636363636,181.33333333333334L392.72727272727275,154.66666666666666L441.81818181818187,80L490.9090909090909,53.33333333333334L540,106.66666666666666"
      fill="none"
      index={4}
      stroke="#8FC297"
      strokeLinecap="round"
      strokeLinejoin="round"
      strokeWidth="3px"
    />
  </svg>
</div>
`;

exports[`Storyshots Presentational|Chart/Components/SVG default 1`] = `
<div
  className="nature-graphic"
>
  <svg
    aria-hidden={true}
    focusable={false}
    height="300px"
    viewBox="0 0 600 300"
    width="600px"
  >
    <rect
      fill="none"
      height={298}
      stroke="red"
      strokeWidth="2px"
      width={598}
      x="1"
      y="1"
    />
    <circle
      cx="150"
      cy="150"
      fill="none"
      r="80"
      stroke="green"
      strokeWidth="2px"
    />
    <path
      d="M 300,125 L 400,50 L 500,100 L 400,250 Z"
      fill="none"
      stroke="blue"
      strokeWidth="2px"
    />
    <text
      dx="2em"
      dy="2em"
    >
      This is an SVG text element
    </text>
  </svg>
</div>
`;

exports[`Storyshots Presentational|Chart/Components/X-axis/Band default 1`] = `
<div
  className="nature-graphic"
>
  <svg
    aria-hidden={true}
    focusable={false}
    height="300px"
    viewBox="0 0 600 300"
    width="600px"
  >
    <g
      transform="translate(20,240)"
    >
      <line
        shapeRendering="crispEdges"
        stroke="#333333"
        strokeDasharray="none"
        strokeWidth="1px"
        x1={12.173913043478262}
        x2={12.173913043478262}
        y1={0}
        y2="0.5em"
      />
      <line
        shapeRendering="crispEdges"
        stroke="#333333"
        strokeDasharray="none"
        strokeWidth="1px"
        x1={60.86956521739131}
        x2={60.86956521739131}
        y1={0}
        y2="0.5em"
      />
      <line
        shapeRendering="crispEdges"
        stroke="#333333"
        strokeDasharray="none"
        strokeWidth="1px"
        x1={109.56521739130436}
        x2={109.56521739130436}
        y1={0}
        y2="0.5em"
      />
      <line
        shapeRendering="crispEdges"
        stroke="#333333"
        strokeDasharray="none"
        strokeWidth="1px"
        x1={158.26086956521738}
        x2={158.26086956521738}
        y1={0}
        y2="0.5em"
      />
      <line
        shapeRendering="crispEdges"
        stroke="#333333"
        strokeDasharray="none"
        strokeWidth="1px"
        x1={206.95652173913044}
        x2={206.95652173913044}
        y1={0}
        y2="0.5em"
      />
      <line
        shapeRendering="crispEdges"
        stroke="#333333"
        strokeDasharray="none"
        strokeWidth="1px"
        x1={255.6521739130435}
        x2={255.6521739130435}
        y1={0}
        y2="0.5em"
      />
      <line
        shapeRendering="crispEdges"
        stroke="#333333"
        strokeDasharray="none"
        strokeWidth="1px"
        x1={304.3478260869565}
        x2={304.3478260869565}
        y1={0}
        y2="0.5em"
      />
      <line
        shapeRendering="crispEdges"
        stroke="#333333"
        strokeDasharray="none"
        strokeWidth="1px"
        x1={353.04347826086956}
        x2={353.04347826086956}
        y1={0}
        y2="0.5em"
      />
      <line
        shapeRendering="crispEdges"
        stroke="#333333"
        strokeDasharray="none"
        strokeWidth="1px"
        x1={401.7391304347826}
        x2={401.7391304347826}
        y1={0}
        y2="0.5em"
      />
      <line
        shapeRendering="crispEdges"
        stroke="#333333"
        strokeDasharray="none"
        strokeWidth="1px"
        x1={450.4347826086957}
        x2={450.4347826086957}
        y1={0}
        y2="0.5em"
      />
      <line
        shapeRendering="crispEdges"
        stroke="#333333"
        strokeDasharray="none"
        strokeWidth="1px"
        x1={499.13043478260875}
        x2={499.13043478260875}
        y1={0}
        y2="0.5em"
      />
      <line
        shapeRendering="crispEdges"
        stroke="#333333"
        strokeDasharray="none"
        strokeWidth="1px"
        x1={547.8260869565217}
        x2={547.8260869565217}
        y1={0}
        y2="0.5em"
      />
      <text
        dy="1.5em"
        fontSize="1rem"
        textAnchor="middle"
        x={12.173913043478262}
        y={0}
      >
        2008
      </text>
      <text
        dy="1.5em"
        fontSize="1rem"
        textAnchor="middle"
        x={60.86956521739131}
        y={0}
      >
        2009
      </text>
      <text
        dy="1.5em"
        fontSize="1rem"
        textAnchor="middle"
        x={109.56521739130436}
        y={0}
      >
        2010
      </text>
      <text
        dy="1.5em"
        fontSize="1rem"
        textAnchor="middle"
        x={158.26086956521738}
        y={0}
      >
        2011
      </text>
      <text
        dy="1.5em"
        fontSize="1rem"
        textAnchor="middle"
        x={206.95652173913044}
        y={0}
      >
        2012
      </text>
      <text
        dy="1.5em"
        fontSize="1rem"
        textAnchor="middle"
        x={255.6521739130435}
        y={0}
      >
        2013
      </text>
      <text
        dy="1.5em"
        fontSize="1rem"
        textAnchor="middle"
        x={304.3478260869565}
        y={0}
      >
        2014
      </text>
      <text
        dy="1.5em"
        fontSize="1rem"
        textAnchor="middle"
        x={353.04347826086956}
        y={0}
      >
        2015
      </text>
      <text
        dy="1.5em"
        fontSize="1rem"
        textAnchor="middle"
        x={401.7391304347826}
        y={0}
      >
        2016
      </text>
      <text
        dy="1.5em"
        fontSize="1rem"
        textAnchor="middle"
        x={450.4347826086957}
        y={0}
      >
        2017
      </text>
      <text
        dy="1.5em"
        fontSize="1rem"
        textAnchor="middle"
        x={499.13043478260875}
        y={0}
      >
        2018
      </text>
      <text
        dy="1.5em"
        fontSize="1rem"
        textAnchor="middle"
        x={547.8260869565217}
        y={0}
      >
        2019
      </text>
    </g>
  </svg>
</div>
`;

exports[`Storyshots Presentational|Chart/Components/X-axis/Linear default 1`] = `
<div
  className="nature-graphic"
>
  <svg
    aria-hidden={true}
    focusable={false}
    height="300px"
    viewBox="0 0 600 300"
    width="600px"
  >
    <g
      transform="translate(20,240)"
    >
      <line
        shapeRendering="crispEdges"
        stroke="#333333"
        strokeDasharray="none"
        strokeWidth="1px"
        x1={0}
        x2={0}
        y1={0}
        y2="0.5em"
      />
      <line
        shapeRendering="crispEdges"
        stroke="#333333"
        strokeDasharray="none"
        strokeWidth="1px"
        x1={56}
        x2={56}
        y1={0}
        y2="0.5em"
      />
      <line
        shapeRendering="crispEdges"
        stroke="#333333"
        strokeDasharray="none"
        strokeWidth="1px"
        x1={112}
        x2={112}
        y1={0}
        y2="0.5em"
      />
      <line
        shapeRendering="crispEdges"
        stroke="#333333"
        strokeDasharray="none"
        strokeWidth="1px"
        x1={168}
        x2={168}
        y1={0}
        y2="0.5em"
      />
      <line
        shapeRendering="crispEdges"
        stroke="#333333"
        strokeDasharray="none"
        strokeWidth="1px"
        x1={224}
        x2={224}
        y1={0}
        y2="0.5em"
      />
      <line
        shapeRendering="crispEdges"
        stroke="#333333"
        strokeDasharray="none"
        strokeWidth="1px"
        x1={280}
        x2={280}
        y1={0}
        y2="0.5em"
      />
      <line
        shapeRendering="crispEdges"
        stroke="#333333"
        strokeDasharray="none"
        strokeWidth="1px"
        x1={336}
        x2={336}
        y1={0}
        y2="0.5em"
      />
      <line
        shapeRendering="crispEdges"
        stroke="#333333"
        strokeDasharray="none"
        strokeWidth="1px"
        x1={392}
        x2={392}
        y1={0}
        y2="0.5em"
      />
      <line
        shapeRendering="crispEdges"
        stroke="#333333"
        strokeDasharray="none"
        strokeWidth="1px"
        x1={448}
        x2={448}
        y1={0}
        y2="0.5em"
      />
      <line
        shapeRendering="crispEdges"
        stroke="#333333"
        strokeDasharray="none"
        strokeWidth="1px"
        x1={504}
        x2={504}
        y1={0}
        y2="0.5em"
      />
      <line
        shapeRendering="crispEdges"
        stroke="#333333"
        strokeDasharray="none"
        strokeWidth="1px"
        x1={560}
        x2={560}
        y1={0}
        y2="0.5em"
      />
      <text
        dy="1.5em"
        fontSize="1rem"
        textAnchor="middle"
        x={0}
        y={0}
      >
        0
      </text>
      <text
        dy="1.5em"
        fontSize="1rem"
        textAnchor="middle"
        x={56}
        y={0}
      >
        50
      </text>
      <text
        dy="1.5em"
        fontSize="1rem"
        textAnchor="middle"
        x={112}
        y={0}
      >
        100
      </text>
      <text
        dy="1.5em"
        fontSize="1rem"
        textAnchor="middle"
        x={168}
        y={0}
      >
        150
      </text>
      <text
        dy="1.5em"
        fontSize="1rem"
        textAnchor="middle"
        x={224}
        y={0}
      >
        200
      </text>
      <text
        dy="1.5em"
        fontSize="1rem"
        textAnchor="middle"
        x={280}
        y={0}
      >
        250
      </text>
      <text
        dy="1.5em"
        fontSize="1rem"
        textAnchor="middle"
        x={336}
        y={0}
      >
        300
      </text>
      <text
        dy="1.5em"
        fontSize="1rem"
        textAnchor="middle"
        x={392}
        y={0}
      >
        350
      </text>
      <text
        dy="1.5em"
        fontSize="1rem"
        textAnchor="middle"
        x={448}
        y={0}
      >
        400
      </text>
      <text
        dy="1.5em"
        fontSize="1rem"
        textAnchor="middle"
        x={504}
        y={0}
      >
        450
      </text>
      <text
        dy="1.5em"
        fontSize="1rem"
        textAnchor="middle"
        x={560}
        y={0}
      >
        500
      </text>
    </g>
  </svg>
</div>
`;

exports[`Storyshots Presentational|Chart/Components/Y-axis/Baseline default 1`] = `
<div
  className="nature-graphic"
>
  <svg
    aria-hidden={true}
    focusable={false}
    height="300px"
    viewBox="0 0 600 300"
    width="600px"
  >
    <g
      transform="translate(50,20)"
    >
      <line
        stroke="#333333"
        strokeDasharray="none"
        strokeWidth="3px"
        x1={-8}
        x2={500}
        y1={260}
        y2={260}
      />
    </g>
  </svg>
</div>
`;

exports[`Storyshots Presentational|Chart/Components/Y-axis/Lines and labels default 1`] = `
<div
  className="nature-graphic"
>
  <svg
    aria-hidden={true}
    focusable={false}
    height="300px"
    viewBox="0 0 600 300"
    width="600px"
  >
    <g
      transform="translate(50,20)"
    >
      <text
        dy="0.3em"
        fontSize="1rem"
        textAnchor="end"
        x={-15}
        y={260}
      >
        0
      </text>
      <text
        dy="0.3em"
        fontSize="1rem"
        textAnchor="end"
        x={-15}
        y={216.66666666666669}
      >
        100
      </text>
      <text
        dy="0.3em"
        fontSize="1rem"
        textAnchor="end"
        x={-15}
        y={173.33333333333334}
      >
        200
      </text>
      <text
        dy="0.3em"
        fontSize="1rem"
        textAnchor="end"
        x={-15}
        y={130}
      >
        300
      </text>
      <text
        dy="0.3em"
        fontSize="1rem"
        textAnchor="end"
        x={-15}
        y={86.66666666666669}
      >
        400
      </text>
      <text
        dy="0.3em"
        fontSize="1rem"
        textAnchor="end"
        x={-15}
        y={43.333333333333314}
      >
        500
      </text>
      <text
        dy="0.3em"
        fontSize="1rem"
        textAnchor="end"
        x={-15}
        y={0}
      >
        600
      </text>
      <line
        stroke="#333333"
        strokeDasharray="2, 3"
        strokeWidth="1px"
        x1={-8}
        x2={500}
        y1={216.66666666666669}
        y2={216.66666666666669}
      />
      <line
        stroke="#333333"
        strokeDasharray="2, 3"
        strokeWidth="1px"
        x1={-8}
        x2={500}
        y1={173.33333333333334}
        y2={173.33333333333334}
      />
      <line
        stroke="#333333"
        strokeDasharray="2, 3"
        strokeWidth="1px"
        x1={-8}
        x2={500}
        y1={130}
        y2={130}
      />
      <line
        stroke="#333333"
        strokeDasharray="2, 3"
        strokeWidth="1px"
        x1={-8}
        x2={500}
        y1={86.66666666666669}
        y2={86.66666666666669}
      />
      <line
        stroke="#333333"
        strokeDasharray="2, 3"
        strokeWidth="1px"
        x1={-8}
        x2={500}
        y1={43.333333333333314}
        y2={43.333333333333314}
      />
      <line
        stroke="#333333"
        strokeDasharray="2, 3"
        strokeWidth="1px"
        x1={-8}
        x2={500}
        y1={0}
        y2={0}
      />
    </g>
  </svg>
</div>
`;

exports[`Storyshots Presentational|Form default 1`] = `
<div
  className="nature-graphic"
>
  <form
    className="css-lzdszq-StyledForm e14k7phy0"
  >
    <fieldset
      className=" e1mok13u0 css-y3sy5r-StyledFieldSet-StyledSlider e6tavoy0"
      disabled={false}
    >
      <label
        className="bold"
        htmlFor="slider"
      >
        Choose a year to display:
      </label>
      <output
        htmlFor="slider"
      >
        1980
      </output>
      <input
        aria-valuemax={2019}
        aria-valuemin={1980}
        aria-valuenow={1980}
        id="slider"
        list="list-slider"
        max={2019}
        min={1980}
        onChange={[Function]}
        step="1"
        type="range"
        value={1980}
      />
      <datalist
        id="list-slider"
      >
        <option
          value={1980}
        />
        <option
          value={1981}
        />
        <option
          value={1982}
        />
        <option
          value={1983}
        />
        <option
          value={1984}
        />
        <option
          value={1985}
        />
        <option
          value={1986}
        />
        <option
          value={1987}
        />
        <option
          value={1988}
        />
        <option
          value={1989}
        />
        <option
          value={1990}
        />
        <option
          value={1991}
        />
        <option
          value={1992}
        />
        <option
          value={1993}
        />
        <option
          value={1994}
        />
        <option
          value={1995}
        />
        <option
          value={1996}
        />
        <option
          value={1997}
        />
        <option
          value={1998}
        />
        <option
          value={1999}
        />
        <option
          value={2000}
        />
        <option
          value={2001}
        />
        <option
          value={2002}
        />
        <option
          value={2003}
        />
        <option
          value={2004}
        />
        <option
          value={2005}
        />
        <option
          value={2006}
        />
        <option
          value={2007}
        />
        <option
          value={2008}
        />
        <option
          value={2009}
        />
        <option
          value={2010}
        />
        <option
          value={2011}
        />
        <option
          value={2012}
        />
        <option
          value={2013}
        />
        <option
          value={2014}
        />
        <option
          value={2015}
        />
        <option
          value={2016}
        />
        <option
          value={2017}
        />
        <option
          value={2018}
        />
        <option
          value={2019}
        />
      </datalist>
    </fieldset>
    <fieldset
      className=" etpmmkk0 css-1f2nrw6-StyledFieldSet-StyledDropdown e6tavoy0"
      disabled={false}
    >
      <label
        className="bold"
        htmlFor="drop-down"
      >
        Select an option:
      </label>
      <select
        id="drop-down"
        onChange={[Function]}
        value="value-1"
      >
        <option
          value="value-1"
        >
          Option 1
        </option>
        <option
          value="value-2"
        >
          Option 2
        </option>
        <option
          value="value-3"
        >
          Option 3
        </option>
        <option
          value="value-4"
        >
          Option 4
        </option>
        <option
          value="value-5"
        >
          Option 5
        </option>
        <option
          value="value-6"
        >
          Option 6
        </option>
        <option
          value="value-7"
        >
          Option 7
        </option>
      </select>
    </fieldset>
    <fieldset
      className=" e1bcox9e0 css-h85td1-StyledFieldSet-StyledToggelButtons e6tavoy0"
      disabled={false}
    >
      <legend
        className="bold"
        id="toggle-buttons"
      >
        Choose an option below:
      </legend>
      <div
        aria-labelledby="toggle-buttons"
        className="radiogroup"
        role="radiogroup"
      >
        <input
          aria-checked={true}
          checked={true}
          id="show-cases"
          name="toggle-buttons"
          onChange={[Function]}
          type="radio"
          value="show-cases"
        />
        <label
          htmlFor="show-cases"
        >
          Show cases
        </label>
        <input
          aria-checked={false}
          checked={false}
          id="show-vaccinations"
          name="toggle-buttons"
          onChange={[Function]}
          type="radio"
          value="show-vaccinations"
        />
        <label
          htmlFor="show-vaccinations"
        >
          Show vaccinations
        </label>
      </div>
    </fieldset>
    <button
      aria-expanded={false}
      className="reveal css-i7b429-ButtonStyled e1jkbne80"
      onClick={[Function]}
      type="button"
    >
      Show
    </button>
  </form>
</div>
`;

exports[`Storyshots Presentational|Form/Components/Button default 1`] = `
<div
  className="nature-graphic"
>
  <button
    aria-expanded={null}
    className="css-i7b429-ButtonStyled e1jkbne80"
    onClick={[Function]}
    type="button"
  >
    Button
  </button>
</div>
`;

exports[`Storyshots Presentational|Form/Components/Button reveal 1`] = `
<div
  className="nature-graphic"
>
  <button
    aria-expanded={false}
    className="reveal css-i7b429-ButtonStyled e1jkbne80"
    onClick={[Function]}
    type="button"
  >
    Button
  </button>
</div>
`;

exports[`Storyshots Presentational|Form/Components/Dropdown default 1`] = `
<div
  className="nature-graphic"
>
  <fieldset
    className=" etpmmkk0 css-1f2nrw6-StyledFieldSet-StyledDropdown e6tavoy0"
    disabled={false}
  >
    <label
      className="bold"
      htmlFor="drop-down"
    >
      This is a Dropdown component
    </label>
    <select
      id="drop-down"
      onChange={[Function]}
      value="value-1"
    >
      <option
        value="value-1"
      >
        Option 1
      </option>
      <option
        value="value-2"
      >
        Option 2
      </option>
      <option
        value="value-3"
      >
        Option 3
      </option>
      <option
        value="value-4"
      >
        Option 4
      </option>
      <option
        value="value-5"
      >
        Option 5
      </option>
      <option
        value="value-6"
      >
        Option 6
      </option>
      <option
        value="value-7"
      >
        Option 7
      </option>
    </select>
  </fieldset>
</div>
`;

exports[`Storyshots Presentational|Form/Components/Dropdown disabled 1`] = `
<div
  className="nature-graphic"
>
  <fieldset
    className=" etpmmkk0 css-1f2nrw6-StyledFieldSet-StyledDropdown e6tavoy0"
    disabled={true}
  >
    <label
      className="bold"
      htmlFor="drop-down"
    >
      This is a Dropdown component
    </label>
    <select
      id="drop-down"
      onChange={[Function]}
      value="value-1"
    >
      <option
        value="value-1"
      >
        Option 1
      </option>
      <option
        value="value-2"
      >
        Option 2
      </option>
      <option
        value="value-3"
      >
        Option 3
      </option>
      <option
        value="value-4"
      >
        Option 4
      </option>
      <option
        value="value-5"
      >
        Option 5
      </option>
      <option
        value="value-6"
      >
        Option 6
      </option>
      <option
        value="value-7"
      >
        Option 7
      </option>
    </select>
  </fieldset>
</div>
`;

exports[`Storyshots Presentational|Form/Components/FormButton default 1`] = `
<div>
  <div
    id="story-root"
    style={Object {}}
  >
    <div
      className="nature-graphic"
    >
      <button
        aria-expanded={null}
        className="css-i7b429-ButtonStyled e1jkbne80"
        onClick={[Function]}
        type="button"
      >
        Button
      </button>
    </div>
  </div>
  <div>
    <div
      style={
        Object {
          "backgroundColor": "#fff",
          "border": "1px solid #eee",
          "borderRadius": "2px",
          "color": "black",
          "fontFamily": "Helvetica Neue, Helvetica, Segoe UI, Arial, freesans, sans-serif",
          "fontSize": "15px",
          "fontWeight": 300,
          "lineHeight": 1.45,
          "marginBottom": "20px",
          "marginTop": "20px",
          "padding": "20px 40px 40px",
        }
      }
    >
      <div
        style={
          Object {
            "marginBottom": 0,
          }
        }
      >
        <h2
          id="formbutton"
          style={
            Object {
              "fontSize": "30px",
              "fontWeight": 600,
              "margin": 0,
              "padding": 0,
            }
          }
        >
          FormButton
        </h2>
        <div
          style={
            Object {
              "fontSize": "15px",
            }
          }
        >
          Returns a button element. Optional 
          <code>
            expanded
          </code>
           and 
          <code>
            reveal
          </code>
           props
can be supplied so that button can function as a ‘reveal’ button
with a rotating triangle symbol.
        </div>
      </div>
      <div>
        <h1
          style={
            Object {
              "borderBottom": "1px solid #EEE",
              "fontSize": "25px",
              "margin": "20px 0 0 0",
              "padding": "0 0 5px 0",
            }
          }
        >
          Prop Types
        </h1>
        <div>
          <h3
            style={
              Object {
                "margin": "20px 0 0 0",
              }
            }
          >
            "
            FormButton
            " Component
          </h3>
          <table
            className="info-table"
          >
            <thead>
              <tr>
                <th>
                  property
                </th>
                <th>
                  propType
                </th>
                <th>
                  required
                </th>
                <th>
                  default
                </th>
                <th>
                  description
                </th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  expanded
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    bool
                  </span>
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  <span>
                    false
                  </span>
                </td>
                <td
                  className={null}
                >
                  
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  reveal
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    bool
                  </span>
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  <span>
                    false
                  </span>
                </td>
                <td
                  className={null}
                >
                  
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  children
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    string
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  onClick
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    func
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  
                </td>
              </tr>
            </tbody>
          </table>
        </div>
        <div>
          <h3
            style={
              Object {
                "margin": "20px 0 0 0",
              }
            }
          >
            "
            State
            " Component
          </h3>
          <small>
            No propTypes defined!
          </small>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Presentational|Form/Components/FormButton reveal 1`] = `
<div>
  <div
    id="story-root"
    style={Object {}}
  >
    <div
      className="nature-graphic"
    >
      <button
        aria-expanded={false}
        className="reveal css-i7b429-ButtonStyled e1jkbne80"
        onClick={[Function]}
        type="button"
      >
        Button
      </button>
    </div>
  </div>
  <div>
    <div
      style={
        Object {
          "backgroundColor": "#fff",
          "border": "1px solid #eee",
          "borderRadius": "2px",
          "color": "black",
          "fontFamily": "Helvetica Neue, Helvetica, Segoe UI, Arial, freesans, sans-serif",
          "fontSize": "15px",
          "fontWeight": 300,
          "lineHeight": 1.45,
          "marginBottom": "20px",
          "marginTop": "20px",
          "padding": "20px 40px 40px",
        }
      }
    >
      <div
        style={
          Object {
            "marginBottom": 0,
          }
        }
      >
        <h2
          id="formbutton"
          style={
            Object {
              "fontSize": "30px",
              "fontWeight": 600,
              "margin": 0,
              "padding": 0,
            }
          }
        >
          FormButton
        </h2>
        <div
          style={
            Object {
              "fontSize": "15px",
            }
          }
        >
          Returns a button element. Optional 
          <code>
            expanded
          </code>
           and 
          <code>
            reveal
          </code>
           props
can be supplied so that button can function as a ‘reveal’ button
with a rotating triangle symbol.
        </div>
      </div>
      <div>
        <h1
          style={
            Object {
              "borderBottom": "1px solid #EEE",
              "fontSize": "25px",
              "margin": "20px 0 0 0",
              "padding": "0 0 5px 0",
            }
          }
        >
          Prop Types
        </h1>
        <div>
          <h3
            style={
              Object {
                "margin": "20px 0 0 0",
              }
            }
          >
            "
            FormButton
            " Component
          </h3>
          <table
            className="info-table"
          >
            <thead>
              <tr>
                <th>
                  property
                </th>
                <th>
                  propType
                </th>
                <th>
                  required
                </th>
                <th>
                  default
                </th>
                <th>
                  description
                </th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  expanded
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    bool
                  </span>
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  <span>
                    false
                  </span>
                </td>
                <td
                  className={null}
                >
                  
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  reveal
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    bool
                  </span>
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  <span>
                    false
                  </span>
                </td>
                <td
                  className={null}
                >
                  
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  children
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    string
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  onClick
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    func
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  
                </td>
              </tr>
            </tbody>
          </table>
        </div>
        <div>
          <h3
            style={
              Object {
                "margin": "20px 0 0 0",
              }
            }
          >
            "
            State
            " Component
          </h3>
          <small>
            No propTypes defined!
          </small>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Presentational|Form/Components/FormDropdown default 1`] = `
<div>
  <div
    id="story-root"
    style={Object {}}
  >
    <div
      className="nature-graphic"
    >
      <fieldset
        className=" etpmmkk0 css-1f2nrw6-StyledFieldSet-StyledDropdown e6tavoy0"
        disabled={false}
      >
        <label
          className="bold"
          htmlFor="drop-down"
        >
          This is a Dropdown component
        </label>
        <select
          id="drop-down"
          onChange={[Function]}
          value="value-1"
        >
          <option
            value="value-1"
          >
            Option 1
          </option>
          <option
            value="value-2"
          >
            Option 2
          </option>
          <option
            value="value-3"
          >
            Option 3
          </option>
          <option
            value="value-4"
          >
            Option 4
          </option>
          <option
            value="value-5"
          >
            Option 5
          </option>
          <option
            value="value-6"
          >
            Option 6
          </option>
          <option
            value="value-7"
          >
            Option 7
          </option>
        </select>
      </fieldset>
    </div>
  </div>
  <div>
    <div
      style={
        Object {
          "backgroundColor": "#fff",
          "border": "1px solid #eee",
          "borderRadius": "2px",
          "color": "black",
          "fontFamily": "Helvetica Neue, Helvetica, Segoe UI, Arial, freesans, sans-serif",
          "fontSize": "15px",
          "fontWeight": 300,
          "lineHeight": 1.45,
          "marginBottom": "20px",
          "marginTop": "20px",
          "padding": "20px 40px 40px",
        }
      }
    >
      <div
        style={
          Object {
            "marginBottom": 0,
          }
        }
      >
        <h2
          id="formdropdown"
          style={
            Object {
              "fontSize": "30px",
              "fontWeight": 600,
              "margin": 0,
              "padding": 0,
            }
          }
        >
          FormDropdown
        </h2>
        <div
          style={
            Object {
              "fontSize": "15px",
            }
          }
        >
          Returns a styed 
          <code>
            FormFieldSet
          </code>
           element containing a 
          <code>
            select
          </code>
           element.
        </div>
      </div>
      <div>
        <h1
          style={
            Object {
              "borderBottom": "1px solid #EEE",
              "fontSize": "25px",
              "margin": "20px 0 0 0",
              "padding": "0 0 5px 0",
            }
          }
        >
          Prop Types
        </h1>
        <div>
          <h3
            style={
              Object {
                "margin": "20px 0 0 0",
              }
            }
          >
            "
            FormDropdown
            " Component
          </h3>
          <table
            className="info-table"
          >
            <thead>
              <tr>
                <th>
                  property
                </th>
                <th>
                  propType
                </th>
                <th>
                  required
                </th>
                <th>
                  default
                </th>
                <th>
                  description
                </th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  disabled
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    bool
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  id
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    string
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  id to associate the label with the select element
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  labelText
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    string
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  onChange
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    func
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  options
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    <span>
                      [
                    </span>
                    <span>
                      <span>
                        <button
                          onClick={[Function]}
                          style={
                            Object {
                              "background": "none",
                              "border": "0 none",
                              "color": "gray",
                              "cursor": "pointer",
                              "display": "inline-block",
                            }
                          }
                          type="button"
                        >
                          {
                        </button>
                        <button
                          onClick={[Function]}
                          style={
                            Object {
                              "background": "none",
                              "border": "0 none",
                              "color": "gray",
                              "cursor": "pointer",
                              "display": "inline-block",
                            }
                          }
                          type="button"
                        >
                          ...
                        </button>
                        <div
                          style={
                            Object {
                              "marginLeft": 15,
                            }
                          }
                        >
                          <span
                            style={
                              Object {
                                "whiteSpace": "nowrap",
                              }
                            }
                          >
                            text
                            ?
                            :
                             
                          </span>
                          <span>
                            string
                          </span>
                          ,
                        </div>
                        <div
                          style={
                            Object {
                              "marginLeft": 15,
                            }
                          }
                        >
                          <span
                            style={
                              Object {
                                "whiteSpace": "nowrap",
                              }
                            }
                          >
                            value
                            ?
                            :
                             
                          </span>
                          <span>
                            string
                          </span>
                          ,
                        </div>
                        <button
                          onClick={[Function]}
                          style={
                            Object {
                              "background": "none",
                              "border": "0 none",
                              "color": "gray",
                              "cursor": "pointer",
                              "display": "inline-block",
                            }
                          }
                          type="button"
                        >
                          }
                        </button>
                      </span>
                    </span>
                    <span>
                      ]
                    </span>
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  Array of { text, value }
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  value
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    string
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  Current selected value
                </td>
              </tr>
            </tbody>
          </table>
        </div>
        <div>
          <h3
            style={
              Object {
                "margin": "20px 0 0 0",
              }
            }
          >
            "
            State
            " Component
          </h3>
          <small>
            No propTypes defined!
          </small>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Presentational|Form/Components/FormDropdown disabled 1`] = `
<div>
  <div
    id="story-root"
    style={Object {}}
  >
    <div
      className="nature-graphic"
    >
      <fieldset
        className=" etpmmkk0 css-1f2nrw6-StyledFieldSet-StyledDropdown e6tavoy0"
        disabled={true}
      >
        <label
          className="bold"
          htmlFor="drop-down"
        >
          This is a Dropdown component
        </label>
        <select
          id="drop-down"
          onChange={[Function]}
          value="value-1"
        >
          <option
            value="value-1"
          >
            Option 1
          </option>
          <option
            value="value-2"
          >
            Option 2
          </option>
          <option
            value="value-3"
          >
            Option 3
          </option>
          <option
            value="value-4"
          >
            Option 4
          </option>
          <option
            value="value-5"
          >
            Option 5
          </option>
          <option
            value="value-6"
          >
            Option 6
          </option>
          <option
            value="value-7"
          >
            Option 7
          </option>
        </select>
      </fieldset>
    </div>
  </div>
  <div>
    <div
      style={
        Object {
          "backgroundColor": "#fff",
          "border": "1px solid #eee",
          "borderRadius": "2px",
          "color": "black",
          "fontFamily": "Helvetica Neue, Helvetica, Segoe UI, Arial, freesans, sans-serif",
          "fontSize": "15px",
          "fontWeight": 300,
          "lineHeight": 1.45,
          "marginBottom": "20px",
          "marginTop": "20px",
          "padding": "20px 40px 40px",
        }
      }
    >
      <div
        style={
          Object {
            "marginBottom": 0,
          }
        }
      >
        <h2
          id="formdropdown"
          style={
            Object {
              "fontSize": "30px",
              "fontWeight": 600,
              "margin": 0,
              "padding": 0,
            }
          }
        >
          FormDropdown
        </h2>
        <div
          style={
            Object {
              "fontSize": "15px",
            }
          }
        >
          Returns a styed 
          <code>
            FormFieldSet
          </code>
           element containing a 
          <code>
            select
          </code>
           element.
        </div>
      </div>
      <div>
        <h1
          style={
            Object {
              "borderBottom": "1px solid #EEE",
              "fontSize": "25px",
              "margin": "20px 0 0 0",
              "padding": "0 0 5px 0",
            }
          }
        >
          Prop Types
        </h1>
        <div>
          <h3
            style={
              Object {
                "margin": "20px 0 0 0",
              }
            }
          >
            "
            FormDropdown
            " Component
          </h3>
          <table
            className="info-table"
          >
            <thead>
              <tr>
                <th>
                  property
                </th>
                <th>
                  propType
                </th>
                <th>
                  required
                </th>
                <th>
                  default
                </th>
                <th>
                  description
                </th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  disabled
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    bool
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  id
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    string
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  id to associate the label with the select element
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  labelText
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    string
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  onChange
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    func
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  options
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    <span>
                      [
                    </span>
                    <span>
                      <span>
                        <button
                          onClick={[Function]}
                          style={
                            Object {
                              "background": "none",
                              "border": "0 none",
                              "color": "gray",
                              "cursor": "pointer",
                              "display": "inline-block",
                            }
                          }
                          type="button"
                        >
                          {
                        </button>
                        <button
                          onClick={[Function]}
                          style={
                            Object {
                              "background": "none",
                              "border": "0 none",
                              "color": "gray",
                              "cursor": "pointer",
                              "display": "inline-block",
                            }
                          }
                          type="button"
                        >
                          ...
                        </button>
                        <div
                          style={
                            Object {
                              "marginLeft": 15,
                            }
                          }
                        >
                          <span
                            style={
                              Object {
                                "whiteSpace": "nowrap",
                              }
                            }
                          >
                            text
                            ?
                            :
                             
                          </span>
                          <span>
                            string
                          </span>
                          ,
                        </div>
                        <div
                          style={
                            Object {
                              "marginLeft": 15,
                            }
                          }
                        >
                          <span
                            style={
                              Object {
                                "whiteSpace": "nowrap",
                              }
                            }
                          >
                            value
                            ?
                            :
                             
                          </span>
                          <span>
                            string
                          </span>
                          ,
                        </div>
                        <button
                          onClick={[Function]}
                          style={
                            Object {
                              "background": "none",
                              "border": "0 none",
                              "color": "gray",
                              "cursor": "pointer",
                              "display": "inline-block",
                            }
                          }
                          type="button"
                        >
                          }
                        </button>
                      </span>
                    </span>
                    <span>
                      ]
                    </span>
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  Array of { text, value }
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  value
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    string
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  Current selected value
                </td>
              </tr>
            </tbody>
          </table>
        </div>
        <div>
          <h3
            style={
              Object {
                "margin": "20px 0 0 0",
              }
            }
          >
            "
            State
            " Component
          </h3>
          <small>
            No propTypes defined!
          </small>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Presentational|Form/Components/FormSlider default 1`] = `
<div>
  <div
    id="story-root"
    style={Object {}}
  >
    <div
      className="nature-graphic"
    >
      <fieldset
        className=" e1mok13u0 css-y3sy5r-StyledFieldSet-StyledSlider e6tavoy0"
        disabled={false}
      >
        <label
          className="bold"
          htmlFor="slider"
        >
          This is a slider
        </label>
        <output
          htmlFor="slider"
        >
          50
        </output>
        <input
          aria-valuemax={100}
          aria-valuemin={0}
          aria-valuenow={50}
          id="slider"
          list="list-slider"
          max={100}
          min={0}
          onChange={[Function]}
          step="1"
          type="range"
          value={50}
        />
        <datalist
          id="list-slider"
        >
          <option
            value={0}
          />
          <option
            value={1}
          />
          <option
            value={2}
          />
          <option
            value={3}
          />
          <option
            value={4}
          />
          <option
            value={5}
          />
          <option
            value={6}
          />
          <option
            value={7}
          />
          <option
            value={8}
          />
          <option
            value={9}
          />
          <option
            value={10}
          />
          <option
            value={11}
          />
          <option
            value={12}
          />
          <option
            value={13}
          />
          <option
            value={14}
          />
          <option
            value={15}
          />
          <option
            value={16}
          />
          <option
            value={17}
          />
          <option
            value={18}
          />
          <option
            value={19}
          />
          <option
            value={20}
          />
          <option
            value={21}
          />
          <option
            value={22}
          />
          <option
            value={23}
          />
          <option
            value={24}
          />
          <option
            value={25}
          />
          <option
            value={26}
          />
          <option
            value={27}
          />
          <option
            value={28}
          />
          <option
            value={29}
          />
          <option
            value={30}
          />
          <option
            value={31}
          />
          <option
            value={32}
          />
          <option
            value={33}
          />
          <option
            value={34}
          />
          <option
            value={35}
          />
          <option
            value={36}
          />
          <option
            value={37}
          />
          <option
            value={38}
          />
          <option
            value={39}
          />
          <option
            value={40}
          />
          <option
            value={41}
          />
          <option
            value={42}
          />
          <option
            value={43}
          />
          <option
            value={44}
          />
          <option
            value={45}
          />
          <option
            value={46}
          />
          <option
            value={47}
          />
          <option
            value={48}
          />
          <option
            value={49}
          />
          <option
            value={50}
          />
          <option
            value={51}
          />
          <option
            value={52}
          />
          <option
            value={53}
          />
          <option
            value={54}
          />
          <option
            value={55}
          />
          <option
            value={56}
          />
          <option
            value={57}
          />
          <option
            value={58}
          />
          <option
            value={59}
          />
          <option
            value={60}
          />
          <option
            value={61}
          />
          <option
            value={62}
          />
          <option
            value={63}
          />
          <option
            value={64}
          />
          <option
            value={65}
          />
          <option
            value={66}
          />
          <option
            value={67}
          />
          <option
            value={68}
          />
          <option
            value={69}
          />
          <option
            value={70}
          />
          <option
            value={71}
          />
          <option
            value={72}
          />
          <option
            value={73}
          />
          <option
            value={74}
          />
          <option
            value={75}
          />
          <option
            value={76}
          />
          <option
            value={77}
          />
          <option
            value={78}
          />
          <option
            value={79}
          />
          <option
            value={80}
          />
          <option
            value={81}
          />
          <option
            value={82}
          />
          <option
            value={83}
          />
          <option
            value={84}
          />
          <option
            value={85}
          />
          <option
            value={86}
          />
          <option
            value={87}
          />
          <option
            value={88}
          />
          <option
            value={89}
          />
          <option
            value={90}
          />
          <option
            value={91}
          />
          <option
            value={92}
          />
          <option
            value={93}
          />
          <option
            value={94}
          />
          <option
            value={95}
          />
          <option
            value={96}
          />
          <option
            value={97}
          />
          <option
            value={98}
          />
          <option
            value={99}
          />
          <option
            value={100}
          />
        </datalist>
      </fieldset>
    </div>
  </div>
  <div>
    <div
      style={
        Object {
          "backgroundColor": "#fff",
          "border": "1px solid #eee",
          "borderRadius": "2px",
          "color": "black",
          "fontFamily": "Helvetica Neue, Helvetica, Segoe UI, Arial, freesans, sans-serif",
          "fontSize": "15px",
          "fontWeight": 300,
          "lineHeight": 1.45,
          "marginBottom": "20px",
          "marginTop": "20px",
          "padding": "20px 40px 40px",
        }
      }
    >
      <div
        style={
          Object {
            "marginBottom": 0,
          }
        }
      >
        <h2
          id="formslider"
          style={
            Object {
              "fontSize": "30px",
              "fontWeight": 600,
              "margin": 0,
              "padding": 0,
            }
          }
        >
          FormSlider
        </h2>
        <div
          style={
            Object {
              "fontSize": "15px",
            }
          }
        >
          Returns a styed 
          <code>
            FormFieldSet
          </code>
           element containing an 
          <code>
            input type="range"
          </code>
          
‘slider’ element.
        </div>
        <div
          style={
            Object {
              "fontSize": "15px",
            }
          }
        >
          <code>
            aria-valuemin
          </code>
           
          <code>
            aria-valuemax
          </code>
           
          <code>
            aria-valuenow
          </code>
           attributes are used to improve
screen reader usability.
        </div>
        <div
          style={
            Object {
              "fontSize": "15px",
            }
          }
        >
          Includes a 
          <code>
            datalist
          </code>
           element to define a series of hash marks above the slider.
        </div>
        <div
          style={
            Object {
              "fontSize": "15px",
            }
          }
        >
          TODO: The hash marks could be improved by displaying the vaules as text.
        </div>
        <div
          style={
            Object {
              "fontSize": "15px",
            }
          }
        >
          TODO: Rename the ‘heading’ prop to ‘label’ for consistency.
        </div>
      </div>
      <div>
        <h1
          style={
            Object {
              "borderBottom": "1px solid #EEE",
              "fontSize": "25px",
              "margin": "20px 0 0 0",
              "padding": "0 0 5px 0",
            }
          }
        >
          Prop Types
        </h1>
        <div>
          <h3
            style={
              Object {
                "margin": "20px 0 0 0",
              }
            }
          >
            "
            FormSlider
            " Component
          </h3>
          <table
            className="info-table"
          >
            <thead>
              <tr>
                <th>
                  property
                </th>
                <th>
                  propType
                </th>
                <th>
                  required
                </th>
                <th>
                  default
                </th>
                <th>
                  description
                </th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  disabled
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    bool
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  heading
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    string
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  Text for the label
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  id
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    string
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  id to associate the label and output elements with the input
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  max
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    number
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  min
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    number
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  onChange
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    func
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  value
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    number
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  
                </td>
              </tr>
            </tbody>
          </table>
        </div>
        <div>
          <h3
            style={
              Object {
                "margin": "20px 0 0 0",
              }
            }
          >
            "
            State
            " Component
          </h3>
          <small>
            No propTypes defined!
          </small>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Presentational|Form/Components/FormSlider disabled 1`] = `
<div>
  <div
    id="story-root"
    style={Object {}}
  >
    <div
      className="nature-graphic"
    >
      <fieldset
        className=" e1mok13u0 css-y3sy5r-StyledFieldSet-StyledSlider e6tavoy0"
        disabled={true}
      >
        <label
          className="bold"
          htmlFor="slider"
        >
          This is a slider
        </label>
        <output
          htmlFor="slider"
        >
          50
        </output>
        <input
          aria-valuemax={100}
          aria-valuemin={0}
          aria-valuenow={50}
          id="slider"
          list="list-slider"
          max={100}
          min={0}
          onChange={[Function]}
          step="1"
          type="range"
          value={50}
        />
        <datalist
          id="list-slider"
        >
          <option
            value={0}
          />
          <option
            value={1}
          />
          <option
            value={2}
          />
          <option
            value={3}
          />
          <option
            value={4}
          />
          <option
            value={5}
          />
          <option
            value={6}
          />
          <option
            value={7}
          />
          <option
            value={8}
          />
          <option
            value={9}
          />
          <option
            value={10}
          />
          <option
            value={11}
          />
          <option
            value={12}
          />
          <option
            value={13}
          />
          <option
            value={14}
          />
          <option
            value={15}
          />
          <option
            value={16}
          />
          <option
            value={17}
          />
          <option
            value={18}
          />
          <option
            value={19}
          />
          <option
            value={20}
          />
          <option
            value={21}
          />
          <option
            value={22}
          />
          <option
            value={23}
          />
          <option
            value={24}
          />
          <option
            value={25}
          />
          <option
            value={26}
          />
          <option
            value={27}
          />
          <option
            value={28}
          />
          <option
            value={29}
          />
          <option
            value={30}
          />
          <option
            value={31}
          />
          <option
            value={32}
          />
          <option
            value={33}
          />
          <option
            value={34}
          />
          <option
            value={35}
          />
          <option
            value={36}
          />
          <option
            value={37}
          />
          <option
            value={38}
          />
          <option
            value={39}
          />
          <option
            value={40}
          />
          <option
            value={41}
          />
          <option
            value={42}
          />
          <option
            value={43}
          />
          <option
            value={44}
          />
          <option
            value={45}
          />
          <option
            value={46}
          />
          <option
            value={47}
          />
          <option
            value={48}
          />
          <option
            value={49}
          />
          <option
            value={50}
          />
          <option
            value={51}
          />
          <option
            value={52}
          />
          <option
            value={53}
          />
          <option
            value={54}
          />
          <option
            value={55}
          />
          <option
            value={56}
          />
          <option
            value={57}
          />
          <option
            value={58}
          />
          <option
            value={59}
          />
          <option
            value={60}
          />
          <option
            value={61}
          />
          <option
            value={62}
          />
          <option
            value={63}
          />
          <option
            value={64}
          />
          <option
            value={65}
          />
          <option
            value={66}
          />
          <option
            value={67}
          />
          <option
            value={68}
          />
          <option
            value={69}
          />
          <option
            value={70}
          />
          <option
            value={71}
          />
          <option
            value={72}
          />
          <option
            value={73}
          />
          <option
            value={74}
          />
          <option
            value={75}
          />
          <option
            value={76}
          />
          <option
            value={77}
          />
          <option
            value={78}
          />
          <option
            value={79}
          />
          <option
            value={80}
          />
          <option
            value={81}
          />
          <option
            value={82}
          />
          <option
            value={83}
          />
          <option
            value={84}
          />
          <option
            value={85}
          />
          <option
            value={86}
          />
          <option
            value={87}
          />
          <option
            value={88}
          />
          <option
            value={89}
          />
          <option
            value={90}
          />
          <option
            value={91}
          />
          <option
            value={92}
          />
          <option
            value={93}
          />
          <option
            value={94}
          />
          <option
            value={95}
          />
          <option
            value={96}
          />
          <option
            value={97}
          />
          <option
            value={98}
          />
          <option
            value={99}
          />
          <option
            value={100}
          />
        </datalist>
      </fieldset>
    </div>
  </div>
  <div>
    <div
      style={
        Object {
          "backgroundColor": "#fff",
          "border": "1px solid #eee",
          "borderRadius": "2px",
          "color": "black",
          "fontFamily": "Helvetica Neue, Helvetica, Segoe UI, Arial, freesans, sans-serif",
          "fontSize": "15px",
          "fontWeight": 300,
          "lineHeight": 1.45,
          "marginBottom": "20px",
          "marginTop": "20px",
          "padding": "20px 40px 40px",
        }
      }
    >
      <div
        style={
          Object {
            "marginBottom": 0,
          }
        }
      >
        <h2
          id="formslider"
          style={
            Object {
              "fontSize": "30px",
              "fontWeight": 600,
              "margin": 0,
              "padding": 0,
            }
          }
        >
          FormSlider
        </h2>
        <div
          style={
            Object {
              "fontSize": "15px",
            }
          }
        >
          Returns a styed 
          <code>
            FormFieldSet
          </code>
           element containing an 
          <code>
            input type="range"
          </code>
          
‘slider’ element.
        </div>
        <div
          style={
            Object {
              "fontSize": "15px",
            }
          }
        >
          <code>
            aria-valuemin
          </code>
           
          <code>
            aria-valuemax
          </code>
           
          <code>
            aria-valuenow
          </code>
           attributes are used to improve
screen reader usability.
        </div>
        <div
          style={
            Object {
              "fontSize": "15px",
            }
          }
        >
          Includes a 
          <code>
            datalist
          </code>
           element to define a series of hash marks above the slider.
        </div>
        <div
          style={
            Object {
              "fontSize": "15px",
            }
          }
        >
          TODO: The hash marks could be improved by displaying the vaules as text.
        </div>
        <div
          style={
            Object {
              "fontSize": "15px",
            }
          }
        >
          TODO: Rename the ‘heading’ prop to ‘label’ for consistency.
        </div>
      </div>
      <div>
        <h1
          style={
            Object {
              "borderBottom": "1px solid #EEE",
              "fontSize": "25px",
              "margin": "20px 0 0 0",
              "padding": "0 0 5px 0",
            }
          }
        >
          Prop Types
        </h1>
        <div>
          <h3
            style={
              Object {
                "margin": "20px 0 0 0",
              }
            }
          >
            "
            FormSlider
            " Component
          </h3>
          <table
            className="info-table"
          >
            <thead>
              <tr>
                <th>
                  property
                </th>
                <th>
                  propType
                </th>
                <th>
                  required
                </th>
                <th>
                  default
                </th>
                <th>
                  description
                </th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  disabled
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    bool
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  heading
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    string
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  Text for the label
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  id
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    string
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  id to associate the label and output elements with the input
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  max
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    number
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  min
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    number
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  onChange
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    func
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  value
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    number
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  
                </td>
              </tr>
            </tbody>
          </table>
        </div>
        <div>
          <h3
            style={
              Object {
                "margin": "20px 0 0 0",
              }
            }
          >
            "
            State
            " Component
          </h3>
          <small>
            No propTypes defined!
          </small>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Presentational|Form/Components/FormToggleButtons default 1`] = `
<div>
  <div
    id="story-root"
    style={Object {}}
  >
    <div
      className="nature-graphic"
    >
      <fieldset
        className=" e1bcox9e0 css-h85td1-StyledFieldSet-StyledToggelButtons e6tavoy0"
        disabled={false}
      >
        <legend
          className="bold"
          id="toggle-buttons"
        >
          These are toggle buttons
        </legend>
        <div
          aria-labelledby="toggle-buttons"
          className="radiogroup"
          role="radiogroup"
        >
          <input
            aria-checked={true}
            checked={true}
            id="option-a"
            name="toggle-buttons"
            onChange={[Function]}
            type="radio"
            value="option-a"
          />
          <label
            htmlFor="option-a"
          >
            Option A
          </label>
          <input
            aria-checked={false}
            checked={false}
            id="option-b"
            name="toggle-buttons"
            onChange={[Function]}
            type="radio"
            value="option-b"
          />
          <label
            htmlFor="option-b"
          >
            Option B
          </label>
        </div>
      </fieldset>
    </div>
  </div>
  <div>
    <div
      style={
        Object {
          "backgroundColor": "#fff",
          "border": "1px solid #eee",
          "borderRadius": "2px",
          "color": "black",
          "fontFamily": "Helvetica Neue, Helvetica, Segoe UI, Arial, freesans, sans-serif",
          "fontSize": "15px",
          "fontWeight": 300,
          "lineHeight": 1.45,
          "marginBottom": "20px",
          "marginTop": "20px",
          "padding": "20px 40px 40px",
        }
      }
    >
      <div
        style={
          Object {
            "marginBottom": 0,
          }
        }
      >
        <h2
          id="formtogglebuttons"
          style={
            Object {
              "fontSize": "30px",
              "fontWeight": 600,
              "margin": 0,
              "padding": 0,
            }
          }
        >
          FormToggleButtons
        </h2>
        <div
          style={
            Object {
              "fontSize": "15px",
            }
          }
        >
          Returns a 
          <code>
            FormFieldSet
          </code>
           element containing a radio button group
with just two options.
        </div>
        <div
          style={
            Object {
              "fontSize": "15px",
            }
          }
        >
          One option returns a true vaule, the other false.
        </div>
        <div
          style={
            Object {
              "fontSize": "15px",
            }
          }
        >
          TODO: Should return the seleceted value, rather than true or false. That
way more than two options could be offered.
        </div>
        <div
          style={
            Object {
              "fontSize": "15px",
            }
          }
        >
          TODO: Rename id to message.
        </div>
        <div
          style={
            Object {
              "fontSize": "15px",
            }
          }
        >
          TODO: Rename message to legend or legendText
        </div>
      </div>
      <div>
        <h1
          style={
            Object {
              "borderBottom": "1px solid #EEE",
              "fontSize": "25px",
              "margin": "20px 0 0 0",
              "padding": "0 0 5px 0",
            }
          }
        >
          Prop Types
        </h1>
        <div>
          <h3
            style={
              Object {
                "margin": "20px 0 0 0",
              }
            }
          >
            "
            FormToggleButtons
            " Component
          </h3>
          <table
            className="info-table"
          >
            <thead>
              <tr>
                <th>
                  property
                </th>
                <th>
                  propType
                </th>
                <th>
                  required
                </th>
                <th>
                  default
                </th>
                <th>
                  description
                </th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  disabled
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    bool
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  id
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    string
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  The name attribute applied to the radio group
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  message
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    string
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  Text for the label
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  onValueChange
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    func
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  value
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    bool
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  valueFalseMessage
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    string
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  Text for the true input's label
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  valueTrueMessage
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    string
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  Text for the fales input's message
                </td>
              </tr>
            </tbody>
          </table>
        </div>
        <div>
          <h3
            style={
              Object {
                "margin": "20px 0 0 0",
              }
            }
          >
            "
            State
            " Component
          </h3>
          <small>
            No propTypes defined!
          </small>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Presentational|Form/Components/FormToggleButtons disabled 1`] = `
<div>
  <div
    id="story-root"
    style={Object {}}
  >
    <div
      className="nature-graphic"
    >
      <fieldset
        className=" e1bcox9e0 css-h85td1-StyledFieldSet-StyledToggelButtons e6tavoy0"
        disabled={true}
      >
        <legend
          className="bold"
          id="toggle-buttons"
        >
          These are toggle buttons
        </legend>
        <div
          aria-labelledby="toggle-buttons"
          className="radiogroup"
          role="radiogroup"
        >
          <input
            aria-checked={true}
            checked={true}
            id="option-a"
            name="toggle-buttons"
            onChange={[Function]}
            type="radio"
            value="option-a"
          />
          <label
            htmlFor="option-a"
          >
            Option A
          </label>
          <input
            aria-checked={false}
            checked={false}
            id="option-b"
            name="toggle-buttons"
            onChange={[Function]}
            type="radio"
            value="option-b"
          />
          <label
            htmlFor="option-b"
          >
            Option B
          </label>
        </div>
      </fieldset>
    </div>
  </div>
  <div>
    <div
      style={
        Object {
          "backgroundColor": "#fff",
          "border": "1px solid #eee",
          "borderRadius": "2px",
          "color": "black",
          "fontFamily": "Helvetica Neue, Helvetica, Segoe UI, Arial, freesans, sans-serif",
          "fontSize": "15px",
          "fontWeight": 300,
          "lineHeight": 1.45,
          "marginBottom": "20px",
          "marginTop": "20px",
          "padding": "20px 40px 40px",
        }
      }
    >
      <div
        style={
          Object {
            "marginBottom": 0,
          }
        }
      >
        <h2
          id="formtogglebuttons"
          style={
            Object {
              "fontSize": "30px",
              "fontWeight": 600,
              "margin": 0,
              "padding": 0,
            }
          }
        >
          FormToggleButtons
        </h2>
        <div
          style={
            Object {
              "fontSize": "15px",
            }
          }
        >
          Returns a 
          <code>
            FormFieldSet
          </code>
           element containing a radio button group
with just two options.
        </div>
        <div
          style={
            Object {
              "fontSize": "15px",
            }
          }
        >
          One option returns a true vaule, the other false.
        </div>
        <div
          style={
            Object {
              "fontSize": "15px",
            }
          }
        >
          TODO: Should return the seleceted value, rather than true or false. That
way more than two options could be offered.
        </div>
        <div
          style={
            Object {
              "fontSize": "15px",
            }
          }
        >
          TODO: Rename id to message.
        </div>
        <div
          style={
            Object {
              "fontSize": "15px",
            }
          }
        >
          TODO: Rename message to legend or legendText
        </div>
      </div>
      <div>
        <h1
          style={
            Object {
              "borderBottom": "1px solid #EEE",
              "fontSize": "25px",
              "margin": "20px 0 0 0",
              "padding": "0 0 5px 0",
            }
          }
        >
          Prop Types
        </h1>
        <div>
          <h3
            style={
              Object {
                "margin": "20px 0 0 0",
              }
            }
          >
            "
            FormToggleButtons
            " Component
          </h3>
          <table
            className="info-table"
          >
            <thead>
              <tr>
                <th>
                  property
                </th>
                <th>
                  propType
                </th>
                <th>
                  required
                </th>
                <th>
                  default
                </th>
                <th>
                  description
                </th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  disabled
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    bool
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  id
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    string
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  The name attribute applied to the radio group
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  message
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    string
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  Text for the label
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  onValueChange
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    func
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  value
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    bool
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  valueFalseMessage
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    string
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  Text for the true input's label
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  valueTrueMessage
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    string
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  Text for the fales input's message
                </td>
              </tr>
            </tbody>
          </table>
        </div>
        <div>
          <h3
            style={
              Object {
                "margin": "20px 0 0 0",
              }
            }
          >
            "
            State
            " Component
          </h3>
          <small>
            No propTypes defined!
          </small>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Presentational|Form/Components/Slider default 1`] = `
<div
  className="nature-graphic"
>
  <fieldset
    className=" e1mok13u0 css-y3sy5r-StyledFieldSet-StyledSlider e6tavoy0"
    disabled={false}
  >
    <label
      className="bold"
      htmlFor="slider"
    >
      This is a slider
    </label>
    <output
      htmlFor="slider"
    >
      50
    </output>
    <input
      aria-valuemax={100}
      aria-valuemin={0}
      aria-valuenow={50}
      id="slider"
      list="list-slider"
      max={100}
      min={0}
      onChange={[Function]}
      step="1"
      type="range"
      value={50}
    />
    <datalist
      id="list-slider"
    >
      <option
        value={0}
      />
      <option
        value={1}
      />
      <option
        value={2}
      />
      <option
        value={3}
      />
      <option
        value={4}
      />
      <option
        value={5}
      />
      <option
        value={6}
      />
      <option
        value={7}
      />
      <option
        value={8}
      />
      <option
        value={9}
      />
      <option
        value={10}
      />
      <option
        value={11}
      />
      <option
        value={12}
      />
      <option
        value={13}
      />
      <option
        value={14}
      />
      <option
        value={15}
      />
      <option
        value={16}
      />
      <option
        value={17}
      />
      <option
        value={18}
      />
      <option
        value={19}
      />
      <option
        value={20}
      />
      <option
        value={21}
      />
      <option
        value={22}
      />
      <option
        value={23}
      />
      <option
        value={24}
      />
      <option
        value={25}
      />
      <option
        value={26}
      />
      <option
        value={27}
      />
      <option
        value={28}
      />
      <option
        value={29}
      />
      <option
        value={30}
      />
      <option
        value={31}
      />
      <option
        value={32}
      />
      <option
        value={33}
      />
      <option
        value={34}
      />
      <option
        value={35}
      />
      <option
        value={36}
      />
      <option
        value={37}
      />
      <option
        value={38}
      />
      <option
        value={39}
      />
      <option
        value={40}
      />
      <option
        value={41}
      />
      <option
        value={42}
      />
      <option
        value={43}
      />
      <option
        value={44}
      />
      <option
        value={45}
      />
      <option
        value={46}
      />
      <option
        value={47}
      />
      <option
        value={48}
      />
      <option
        value={49}
      />
      <option
        value={50}
      />
      <option
        value={51}
      />
      <option
        value={52}
      />
      <option
        value={53}
      />
      <option
        value={54}
      />
      <option
        value={55}
      />
      <option
        value={56}
      />
      <option
        value={57}
      />
      <option
        value={58}
      />
      <option
        value={59}
      />
      <option
        value={60}
      />
      <option
        value={61}
      />
      <option
        value={62}
      />
      <option
        value={63}
      />
      <option
        value={64}
      />
      <option
        value={65}
      />
      <option
        value={66}
      />
      <option
        value={67}
      />
      <option
        value={68}
      />
      <option
        value={69}
      />
      <option
        value={70}
      />
      <option
        value={71}
      />
      <option
        value={72}
      />
      <option
        value={73}
      />
      <option
        value={74}
      />
      <option
        value={75}
      />
      <option
        value={76}
      />
      <option
        value={77}
      />
      <option
        value={78}
      />
      <option
        value={79}
      />
      <option
        value={80}
      />
      <option
        value={81}
      />
      <option
        value={82}
      />
      <option
        value={83}
      />
      <option
        value={84}
      />
      <option
        value={85}
      />
      <option
        value={86}
      />
      <option
        value={87}
      />
      <option
        value={88}
      />
      <option
        value={89}
      />
      <option
        value={90}
      />
      <option
        value={91}
      />
      <option
        value={92}
      />
      <option
        value={93}
      />
      <option
        value={94}
      />
      <option
        value={95}
      />
      <option
        value={96}
      />
      <option
        value={97}
      />
      <option
        value={98}
      />
      <option
        value={99}
      />
      <option
        value={100}
      />
    </datalist>
  </fieldset>
</div>
`;

exports[`Storyshots Presentational|Form/Components/Slider disabled 1`] = `
<div
  className="nature-graphic"
>
  <fieldset
    className=" e1mok13u0 css-y3sy5r-StyledFieldSet-StyledSlider e6tavoy0"
    disabled={true}
  >
    <label
      className="bold"
      htmlFor="slider"
    >
      This is a slider
    </label>
    <output
      htmlFor="slider"
    >
      50
    </output>
    <input
      aria-valuemax={100}
      aria-valuemin={0}
      aria-valuenow={50}
      id="slider"
      list="list-slider"
      max={100}
      min={0}
      onChange={[Function]}
      step="1"
      type="range"
      value={50}
    />
    <datalist
      id="list-slider"
    >
      <option
        value={0}
      />
      <option
        value={1}
      />
      <option
        value={2}
      />
      <option
        value={3}
      />
      <option
        value={4}
      />
      <option
        value={5}
      />
      <option
        value={6}
      />
      <option
        value={7}
      />
      <option
        value={8}
      />
      <option
        value={9}
      />
      <option
        value={10}
      />
      <option
        value={11}
      />
      <option
        value={12}
      />
      <option
        value={13}
      />
      <option
        value={14}
      />
      <option
        value={15}
      />
      <option
        value={16}
      />
      <option
        value={17}
      />
      <option
        value={18}
      />
      <option
        value={19}
      />
      <option
        value={20}
      />
      <option
        value={21}
      />
      <option
        value={22}
      />
      <option
        value={23}
      />
      <option
        value={24}
      />
      <option
        value={25}
      />
      <option
        value={26}
      />
      <option
        value={27}
      />
      <option
        value={28}
      />
      <option
        value={29}
      />
      <option
        value={30}
      />
      <option
        value={31}
      />
      <option
        value={32}
      />
      <option
        value={33}
      />
      <option
        value={34}
      />
      <option
        value={35}
      />
      <option
        value={36}
      />
      <option
        value={37}
      />
      <option
        value={38}
      />
      <option
        value={39}
      />
      <option
        value={40}
      />
      <option
        value={41}
      />
      <option
        value={42}
      />
      <option
        value={43}
      />
      <option
        value={44}
      />
      <option
        value={45}
      />
      <option
        value={46}
      />
      <option
        value={47}
      />
      <option
        value={48}
      />
      <option
        value={49}
      />
      <option
        value={50}
      />
      <option
        value={51}
      />
      <option
        value={52}
      />
      <option
        value={53}
      />
      <option
        value={54}
      />
      <option
        value={55}
      />
      <option
        value={56}
      />
      <option
        value={57}
      />
      <option
        value={58}
      />
      <option
        value={59}
      />
      <option
        value={60}
      />
      <option
        value={61}
      />
      <option
        value={62}
      />
      <option
        value={63}
      />
      <option
        value={64}
      />
      <option
        value={65}
      />
      <option
        value={66}
      />
      <option
        value={67}
      />
      <option
        value={68}
      />
      <option
        value={69}
      />
      <option
        value={70}
      />
      <option
        value={71}
      />
      <option
        value={72}
      />
      <option
        value={73}
      />
      <option
        value={74}
      />
      <option
        value={75}
      />
      <option
        value={76}
      />
      <option
        value={77}
      />
      <option
        value={78}
      />
      <option
        value={79}
      />
      <option
        value={80}
      />
      <option
        value={81}
      />
      <option
        value={82}
      />
      <option
        value={83}
      />
      <option
        value={84}
      />
      <option
        value={85}
      />
      <option
        value={86}
      />
      <option
        value={87}
      />
      <option
        value={88}
      />
      <option
        value={89}
      />
      <option
        value={90}
      />
      <option
        value={91}
      />
      <option
        value={92}
      />
      <option
        value={93}
      />
      <option
        value={94}
      />
      <option
        value={95}
      />
      <option
        value={96}
      />
      <option
        value={97}
      />
      <option
        value={98}
      />
      <option
        value={99}
      />
      <option
        value={100}
      />
    </datalist>
  </fieldset>
</div>
`;

exports[`Storyshots Presentational|Form/Components/Toggle buttons default 1`] = `
<div
  className="nature-graphic"
>
  <fieldset
    className=" e1bcox9e0 css-h85td1-StyledFieldSet-StyledToggelButtons e6tavoy0"
    disabled={false}
  >
    <legend
      className="bold"
      id="toggle-buttons"
    >
      These are toggle buttons
    </legend>
    <div
      aria-labelledby="toggle-buttons"
      className="radiogroup"
      role="radiogroup"
    >
      <input
        aria-checked={true}
        checked={true}
        id="option-a"
        name="toggle-buttons"
        onChange={[Function]}
        type="radio"
        value="option-a"
      />
      <label
        htmlFor="option-a"
      >
        Option A
      </label>
      <input
        aria-checked={false}
        checked={false}
        id="option-b"
        name="toggle-buttons"
        onChange={[Function]}
        type="radio"
        value="option-b"
      />
      <label
        htmlFor="option-b"
      >
        Option B
      </label>
    </div>
  </fieldset>
</div>
`;

exports[`Storyshots Presentational|Form/Components/Toggle buttons disabled 1`] = `
<div
  className="nature-graphic"
>
  <fieldset
    className=" e1bcox9e0 css-h85td1-StyledFieldSet-StyledToggelButtons e6tavoy0"
    disabled={true}
  >
    <legend
      className="bold"
      id="toggle-buttons"
    >
      These are toggle buttons
    </legend>
    <div
      aria-labelledby="toggle-buttons"
      className="radiogroup"
      role="radiogroup"
    >
      <input
        aria-checked={true}
        checked={true}
        id="option-a"
        name="toggle-buttons"
        onChange={[Function]}
        type="radio"
        value="option-a"
      />
      <label
        htmlFor="option-a"
      >
        Option A
      </label>
      <input
        aria-checked={false}
        checked={false}
        id="option-b"
        name="toggle-buttons"
        onChange={[Function]}
        type="radio"
        value="option-b"
      />
      <label
        htmlFor="option-b"
      >
        Option B
      </label>
    </div>
  </fieldset>
</div>
`;

exports[`Storyshots Presentational|Header default 1`] = `
<div
  className="nature-graphic"
>
  <header
    className="css-64z723-StyledHeader e426jni0"
  >
    <h1>
      Headline headline
    </h1>
    <p
      dangerouslySetInnerHTML={
        Object {
          "__html": "Lorem ipsum dolor sit amet consectetur adipisicing elit. Illum corporis reiciendis exercitationem dolores, vel perspiciatis recusandae deserunt hic harum.",
        }
      }
    />
  </header>
</div>
`;

exports[`Storyshots Presentational|Header rich text 1`] = `
<div>
  <div
    id="story-root"
    style={Object {}}
  >
    <div
      className="nature-graphic"
    >
      <header
        className="css-64z723-StyledHeader e426jni0"
      >
        <h1>
          Headline headline
        </h1>
        <p
          dangerouslySetInnerHTML={
            Object {
              "__html": "<strong>Lorem ipsum dolor sit amet</strong> consectetur adipisicing elit. <i>Illum corporis reiciendis</i> exercitationem dolores, vel perspiciatis <a href='https://www.nature.com/news'>recusandae deserunt hic harum</a>.",
            }
          }
        />
      </header>
    </div>
  </div>
  <div>
    <div
      style={
        Object {
          "backgroundColor": "#fff",
          "border": "1px solid #eee",
          "borderRadius": "2px",
          "color": "black",
          "fontFamily": "Helvetica Neue, Helvetica, Segoe UI, Arial, freesans, sans-serif",
          "fontSize": "15px",
          "fontWeight": 300,
          "lineHeight": 1.45,
          "marginBottom": "20px",
          "marginTop": "20px",
          "padding": "20px 40px 40px",
        }
      }
    >
      <div
        style={
          Object {
            "marginBottom": 0,
          }
        }
      >
        <h2
          id="header"
          style={
            Object {
              "fontSize": "30px",
              "fontWeight": 600,
              "margin": 0,
              "padding": 0,
            }
          }
        >
          Header
        </h2>
        <div
          style={
            Object {
              "fontSize": "15px",
            }
          }
        >
          Returns a 
          <code>
            header
          </code>
           element containing a 
          <code>
            h1
          </code>
           for the headline
and a 
          <code>
            p
          </code>
           element for for the standfirst.
        </div>
        <div
          style={
            Object {
              "fontSize": "15px",
            }
          }
        >
          The standfirst can contain rich text.
        </div>
      </div>
      <div>
        <h1
          style={
            Object {
              "borderBottom": "1px solid #EEE",
              "fontSize": "25px",
              "margin": "20px 0 0 0",
              "padding": "0 0 5px 0",
            }
          }
        >
          Prop Types
        </h1>
        <div>
          <h3
            style={
              Object {
                "margin": "20px 0 0 0",
              }
            }
          >
            "
            Header
            " Component
          </h3>
          <table
            className="info-table"
          >
            <thead>
              <tr>
                <th>
                  property
                </th>
                <th>
                  propType
                </th>
                <th>
                  required
                </th>
                <th>
                  default
                </th>
                <th>
                  description
                </th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  headLine
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    string
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  standFirst
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    string
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  
                </td>
              </tr>
            </tbody>
          </table>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Presentational|Key default 1`] = `
<div
  className="nature-graphic"
>
  <ul
    aria-hidden={true}
    className="css-o74j4t-StyledList e17za7v0"
  >
    <li>
      <svg
        focusable={false}
        height="15"
        width="15"
      >
        <rect
          fill="#EA5153"
          height="15"
          width="15"
        />
      </svg>
      Value A
    </li>
    <li>
      <svg
        focusable={false}
        height="15"
        width="15"
      >
        <rect
          fill="#75C6C5"
          height="15"
          width="15"
        />
      </svg>
      Value B
    </li>
    <li>
      <svg
        focusable={false}
        height="15"
        width="15"
      >
        <rect
          fill="#5A527E"
          height="15"
          width="15"
        />
      </svg>
      Value C
    </li>
    <li>
      <svg
        focusable={false}
        height="15"
        width="15"
      >
        <rect
          fill="#8B0D16"
          height="15"
          width="15"
        />
      </svg>
      Value D
    </li>
    <li>
      <svg
        focusable={false}
        height="15"
        width="15"
      >
        <rect
          fill="#8FC297"
          height="15"
          width="15"
        />
      </svg>
      Value E
    </li>
  </ul>
</div>
`;

exports[`Storyshots Presentational|Key dot 1`] = `
<div
  className="nature-graphic"
>
  <ul
    aria-hidden={true}
    className="css-o74j4t-StyledList e17za7v0"
  >
    <li>
      <svg
        focusable={false}
        height="15"
        width="15"
      >
        <circle
          cx="7.5"
          cy="7.5"
          fill="#EA5153"
          r="4px"
        />
      </svg>
      Value A
    </li>
    <li>
      <svg
        focusable={false}
        height="15"
        width="15"
      >
        <circle
          cx="7.5"
          cy="7.5"
          fill="#75C6C5"
          r="4px"
        />
      </svg>
      Value B
    </li>
    <li>
      <svg
        focusable={false}
        height="15"
        width="15"
      >
        <circle
          cx="7.5"
          cy="7.5"
          fill="#5A527E"
          r="4px"
        />
      </svg>
      Value C
    </li>
    <li>
      <svg
        focusable={false}
        height="15"
        width="15"
      >
        <circle
          cx="7.5"
          cy="7.5"
          fill="#8B0D16"
          r="4px"
        />
      </svg>
      Value D
    </li>
    <li>
      <svg
        focusable={false}
        height="15"
        width="15"
      >
        <circle
          cx="7.5"
          cy="7.5"
          fill="#8FC297"
          r="4px"
        />
      </svg>
      Value E
    </li>
  </ul>
</div>
`;

exports[`Storyshots Presentational|Key line 1`] = `
<div
  className="nature-graphic"
>
  <ul
    aria-hidden={true}
    className="css-o74j4t-StyledList e17za7v0"
  >
    <li>
      <svg
        focusable={false}
        height="15"
        width="15"
      >
        <line
          stroke="#EA5153"
          strokeLinecap="round"
          strokeLinejoin="round"
          strokeWidth="3px"
          x1="2"
          x2="13"
          y1="8"
          y2="8"
        />
      </svg>
      Value A
    </li>
    <li>
      <svg
        focusable={false}
        height="15"
        width="15"
      >
        <line
          stroke="#75C6C5"
          strokeLinecap="round"
          strokeLinejoin="round"
          strokeWidth="3px"
          x1="2"
          x2="13"
          y1="8"
          y2="8"
        />
      </svg>
      Value B
    </li>
    <li>
      <svg
        focusable={false}
        height="15"
        width="15"
      >
        <line
          stroke="#5A527E"
          strokeLinecap="round"
          strokeLinejoin="round"
          strokeWidth="3px"
          x1="2"
          x2="13"
          y1="8"
          y2="8"
        />
      </svg>
      Value C
    </li>
    <li>
      <svg
        focusable={false}
        height="15"
        width="15"
      >
        <line
          stroke="#8B0D16"
          strokeLinecap="round"
          strokeLinejoin="round"
          strokeWidth="3px"
          x1="2"
          x2="13"
          y1="8"
          y2="8"
        />
      </svg>
      Value D
    </li>
    <li>
      <svg
        focusable={false}
        height="15"
        width="15"
      >
        <line
          stroke="#8FC297"
          strokeLinecap="round"
          strokeLinejoin="round"
          strokeWidth="3px"
          x1="2"
          x2="13"
          y1="8"
          y2="8"
        />
      </svg>
      Value E
    </li>
  </ul>
</div>
`;

exports[`Storyshots Presentational|Key/Components/ColorBox default 1`] = `
<div
  className="nature-graphic"
>
  <svg
    focusable={false}
    height="15"
    width="15"
  >
    <rect
      fill="#EA5153"
      height="15"
      width="15"
    />
  </svg>
</div>
`;

exports[`Storyshots Presentational|Key/Components/ColorDot default 1`] = `
<div
  className="nature-graphic"
>
  <svg
    focusable={false}
    height="15"
    width="15"
  >
    <circle
      cx="7.5"
      cy="7.5"
      fill="#EA5153"
      r="4px"
    />
  </svg>
</div>
`;

exports[`Storyshots Presentational|Key/Components/ColorLine default 1`] = `
<div
  className="nature-graphic"
>
  <svg
    focusable={false}
    height="15"
    width="15"
  >
    <line
      stroke="#EA5153"
      strokeLinecap="round"
      strokeLinejoin="round"
      strokeWidth="3px"
      x1="2"
      x2="13"
      y1="8"
      y2="8"
    />
  </svg>
</div>
`;

exports[`Storyshots Presentational|Key/components/KeyColorBox default 1`] = `
<div>
  <div
    id="story-root"
    style={Object {}}
  >
    <div
      className="nature-graphic"
    >
      <svg
        focusable={false}
        height="15"
        width="15"
      >
        <rect
          fill="#EA5153"
          height="15"
          width="15"
        />
      </svg>
    </div>
  </div>
  <div>
    <div
      style={
        Object {
          "backgroundColor": "#fff",
          "border": "1px solid #eee",
          "borderRadius": "2px",
          "color": "black",
          "fontFamily": "Helvetica Neue, Helvetica, Segoe UI, Arial, freesans, sans-serif",
          "fontSize": "15px",
          "fontWeight": 300,
          "lineHeight": 1.45,
          "marginBottom": "20px",
          "marginTop": "20px",
          "padding": "20px 40px 40px",
        }
      }
    >
      <div
        style={
          Object {
            "marginBottom": 0,
          }
        }
      >
        <h2
          id="keycolorbox"
          style={
            Object {
              "fontSize": "30px",
              "fontWeight": 600,
              "margin": 0,
              "padding": 0,
            }
          }
        >
          KeyColorBox
        </h2>
        <div
          style={
            Object {
              "fontSize": "15px",
            }
          }
        >
          Returns a 15px square SVG containing
          <code>
            rect
          </code>
           element
coloured according to the index prop.
        </div>
      </div>
      <div>
        <h1
          style={
            Object {
              "borderBottom": "1px solid #EEE",
              "fontSize": "25px",
              "margin": "20px 0 0 0",
              "padding": "0 0 5px 0",
            }
          }
        >
          Prop Types
        </h1>
        <div>
          <h3
            style={
              Object {
                "margin": "20px 0 0 0",
              }
            }
          >
            "
            KeyColorBox
            " Component
          </h3>
          <table
            className="info-table"
          >
            <thead>
              <tr>
                <th>
                  property
                </th>
                <th>
                  propType
                </th>
                <th>
                  required
                </th>
                <th>
                  default
                </th>
                <th>
                  description
                </th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  index
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    number
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  Index used to select fill colour
                </td>
              </tr>
            </tbody>
          </table>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Presentational|Key/components/KeyColorDot default 1`] = `
<div>
  <div
    id="story-root"
    style={Object {}}
  >
    <div
      className="nature-graphic"
    >
      <svg
        focusable={false}
        height="15"
        width="15"
      >
        <circle
          cx="7.5"
          cy="7.5"
          fill="#EA5153"
          r="4px"
        />
      </svg>
    </div>
  </div>
  <div>
    <div
      style={
        Object {
          "backgroundColor": "#fff",
          "border": "1px solid #eee",
          "borderRadius": "2px",
          "color": "black",
          "fontFamily": "Helvetica Neue, Helvetica, Segoe UI, Arial, freesans, sans-serif",
          "fontSize": "15px",
          "fontWeight": 300,
          "lineHeight": 1.45,
          "marginBottom": "20px",
          "marginTop": "20px",
          "padding": "20px 40px 40px",
        }
      }
    >
      <div
        style={
          Object {
            "marginBottom": 0,
          }
        }
      >
        <h2
          id="keycolordot"
          style={
            Object {
              "fontSize": "30px",
              "fontWeight": 600,
              "margin": 0,
              "padding": 0,
            }
          }
        >
          KeyColorDot
        </h2>
        <div
          style={
            Object {
              "fontSize": "15px",
            }
          }
        >
          Returns a 15px square SVG containing a 
          <code>
            circle
          </code>
           element coloured
according to the index prop.
        </div>
      </div>
      <div>
        <h1
          style={
            Object {
              "borderBottom": "1px solid #EEE",
              "fontSize": "25px",
              "margin": "20px 0 0 0",
              "padding": "0 0 5px 0",
            }
          }
        >
          Prop Types
        </h1>
        <div>
          <h3
            style={
              Object {
                "margin": "20px 0 0 0",
              }
            }
          >
            "
            KeyColorDot
            " Component
          </h3>
          <table
            className="info-table"
          >
            <thead>
              <tr>
                <th>
                  property
                </th>
                <th>
                  propType
                </th>
                <th>
                  required
                </th>
                <th>
                  default
                </th>
                <th>
                  description
                </th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  index
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    number
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  Index used to select fill colour
                </td>
              </tr>
            </tbody>
          </table>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Presentational|Key/components/KeyColorLine default 1`] = `
<div>
  <div
    id="story-root"
    style={Object {}}
  >
    <div
      className="nature-graphic"
    >
      <svg
        focusable={false}
        height="15"
        width="15"
      >
        <line
          stroke="#EA5153"
          strokeLinecap="round"
          strokeLinejoin="round"
          strokeWidth="3px"
          x1="2"
          x2="13"
          y1="8"
          y2="8"
        />
      </svg>
    </div>
  </div>
  <div>
    <div
      style={
        Object {
          "backgroundColor": "#fff",
          "border": "1px solid #eee",
          "borderRadius": "2px",
          "color": "black",
          "fontFamily": "Helvetica Neue, Helvetica, Segoe UI, Arial, freesans, sans-serif",
          "fontSize": "15px",
          "fontWeight": 300,
          "lineHeight": 1.45,
          "marginBottom": "20px",
          "marginTop": "20px",
          "padding": "20px 40px 40px",
        }
      }
    >
      <div
        style={
          Object {
            "marginBottom": 0,
          }
        }
      >
        <h2
          id="keycolorline"
          style={
            Object {
              "fontSize": "30px",
              "fontWeight": 600,
              "margin": 0,
              "padding": 0,
            }
          }
        >
          KeyColorLine
        </h2>
        <div
          style={
            Object {
              "fontSize": "15px",
            }
          }
        >
          Returns a 15px square SVG containing a 
          <code>
            line
          </code>
           element
coloured according to the index prop.
        </div>
      </div>
      <div>
        <h1
          style={
            Object {
              "borderBottom": "1px solid #EEE",
              "fontSize": "25px",
              "margin": "20px 0 0 0",
              "padding": "0 0 5px 0",
            }
          }
        >
          Prop Types
        </h1>
        <div>
          <h3
            style={
              Object {
                "margin": "20px 0 0 0",
              }
            }
          >
            "
            KeyColorLine
            " Component
          </h3>
          <table
            className="info-table"
          >
            <thead>
              <tr>
                <th>
                  property
                </th>
                <th>
                  propType
                </th>
                <th>
                  required
                </th>
                <th>
                  default
                </th>
                <th>
                  description
                </th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  index
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    number
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  Index used to select fill colour
                </td>
              </tr>
            </tbody>
          </table>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Presentational|Small text default 1`] = `
<div
  className="nature-graphic"
>
  <p
    className="css-wiejhz-StyledSmallText e1a2a2am0"
    dangerouslySetInnerHTML={
      Object {
        "__html": "This is some footnote text",
      }
    }
  />
</div>
`;

exports[`Storyshots Presentational|Small text long text 1`] = `
<div
  className="nature-graphic"
>
  <p
    className="css-wiejhz-StyledSmallText e1a2a2am0"
    dangerouslySetInnerHTML={
      Object {
        "__html": "*Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat nonproident, sunt in culpa qui officia deserunt mollit anim id est laborum.",
      }
    }
  />
</div>
`;

exports[`Storyshots Presentational|Small text with html 1`] = `
<div
  className="nature-graphic"
>
  <p
    className="css-wiejhz-StyledSmallText e1a2a2am0"
    dangerouslySetInnerHTML={
      Object {
        "__html": "*<strong>Lorem ipsum dolor</strong> sit amet, <i>Nature</i> adipisicing elit, sed do eiusmod tempor incididunt ut <a href='http://www.nature.com'>nature.com</a>",
      }
    }
  />
</div>
`;

exports[`Storyshots Presentational|SmallText default 1`] = `
<div>
  <div
    id="story-root"
    style={Object {}}
  >
    <div
      className="nature-graphic"
    >
      <p
        className="css-wiejhz-StyledSmallText e1a2a2am0"
        dangerouslySetInnerHTML={
          Object {
            "__html": "This is some footnote text",
          }
        }
      />
    </div>
  </div>
  <div>
    <div
      style={
        Object {
          "backgroundColor": "#fff",
          "border": "1px solid #eee",
          "borderRadius": "2px",
          "color": "black",
          "fontFamily": "Helvetica Neue, Helvetica, Segoe UI, Arial, freesans, sans-serif",
          "fontSize": "15px",
          "fontWeight": 300,
          "lineHeight": 1.45,
          "marginBottom": "20px",
          "marginTop": "20px",
          "padding": "20px 40px 40px",
        }
      }
    >
      <div
        style={
          Object {
            "marginBottom": 0,
          }
        }
      >
        <h2
          id="smalltext"
          style={
            Object {
              "fontSize": "30px",
              "fontWeight": 600,
              "margin": 0,
              "padding": 0,
            }
          }
        >
          SmallText
        </h2>
        <div
          style={
            Object {
              "fontSize": "15px",
            }
          }
        >
          Returns a 
          <code>
            p
          </code>
           element that can be used to present ‘small’
information such as source or footnote text.
        </div>
      </div>
      <div>
        <h1
          style={
            Object {
              "borderBottom": "1px solid #EEE",
              "fontSize": "25px",
              "margin": "20px 0 0 0",
              "padding": "0 0 5px 0",
            }
          }
        >
          Prop Types
        </h1>
        <div>
          <h3
            style={
              Object {
                "margin": "20px 0 0 0",
              }
            }
          >
            "
            SmallText
            " Component
          </h3>
          <table
            className="info-table"
          >
            <thead>
              <tr>
                <th>
                  property
                </th>
                <th>
                  propType
                </th>
                <th>
                  required
                </th>
                <th>
                  default
                </th>
                <th>
                  description
                </th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  text
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    string
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  
                </td>
              </tr>
            </tbody>
          </table>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Presentational|SmallText long text 1`] = `
<div>
  <div
    id="story-root"
    style={Object {}}
  >
    <div
      className="nature-graphic"
    >
      <p
        className="css-wiejhz-StyledSmallText e1a2a2am0"
        dangerouslySetInnerHTML={
          Object {
            "__html": "*Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat nonproident, sunt in culpa qui officia deserunt mollit anim id est laborum.",
          }
        }
      />
    </div>
  </div>
  <div>
    <div
      style={
        Object {
          "backgroundColor": "#fff",
          "border": "1px solid #eee",
          "borderRadius": "2px",
          "color": "black",
          "fontFamily": "Helvetica Neue, Helvetica, Segoe UI, Arial, freesans, sans-serif",
          "fontSize": "15px",
          "fontWeight": 300,
          "lineHeight": 1.45,
          "marginBottom": "20px",
          "marginTop": "20px",
          "padding": "20px 40px 40px",
        }
      }
    >
      <div
        style={
          Object {
            "marginBottom": 0,
          }
        }
      >
        <h2
          id="smalltext"
          style={
            Object {
              "fontSize": "30px",
              "fontWeight": 600,
              "margin": 0,
              "padding": 0,
            }
          }
        >
          SmallText
        </h2>
        <div
          style={
            Object {
              "fontSize": "15px",
            }
          }
        >
          Returns a 
          <code>
            p
          </code>
           element that can be used to present ‘small’
information such as source or footnote text.
        </div>
      </div>
      <div>
        <h1
          style={
            Object {
              "borderBottom": "1px solid #EEE",
              "fontSize": "25px",
              "margin": "20px 0 0 0",
              "padding": "0 0 5px 0",
            }
          }
        >
          Prop Types
        </h1>
        <div>
          <h3
            style={
              Object {
                "margin": "20px 0 0 0",
              }
            }
          >
            "
            SmallText
            " Component
          </h3>
          <table
            className="info-table"
          >
            <thead>
              <tr>
                <th>
                  property
                </th>
                <th>
                  propType
                </th>
                <th>
                  required
                </th>
                <th>
                  default
                </th>
                <th>
                  description
                </th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  text
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    string
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  
                </td>
              </tr>
            </tbody>
          </table>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Presentational|SmallText with html 1`] = `
<div>
  <div
    id="story-root"
    style={Object {}}
  >
    <div
      className="nature-graphic"
    >
      <p
        className="css-wiejhz-StyledSmallText e1a2a2am0"
        dangerouslySetInnerHTML={
          Object {
            "__html": "*<strong>Lorem ipsum dolor</strong> sit amet, <i>Nature</i> adipisicing elit, sed do eiusmod tempor incididunt ut <a href='http://www.nature.com'>nature.com</a>",
          }
        }
      />
    </div>
  </div>
  <div>
    <div
      style={
        Object {
          "backgroundColor": "#fff",
          "border": "1px solid #eee",
          "borderRadius": "2px",
          "color": "black",
          "fontFamily": "Helvetica Neue, Helvetica, Segoe UI, Arial, freesans, sans-serif",
          "fontSize": "15px",
          "fontWeight": 300,
          "lineHeight": 1.45,
          "marginBottom": "20px",
          "marginTop": "20px",
          "padding": "20px 40px 40px",
        }
      }
    >
      <div
        style={
          Object {
            "marginBottom": 0,
          }
        }
      >
        <h2
          id="smalltext"
          style={
            Object {
              "fontSize": "30px",
              "fontWeight": 600,
              "margin": 0,
              "padding": 0,
            }
          }
        >
          SmallText
        </h2>
        <div
          style={
            Object {
              "fontSize": "15px",
            }
          }
        >
          Returns a 
          <code>
            p
          </code>
           element that can be used to present ‘small’
information such as source or footnote text.
        </div>
      </div>
      <div>
        <h1
          style={
            Object {
              "borderBottom": "1px solid #EEE",
              "fontSize": "25px",
              "margin": "20px 0 0 0",
              "padding": "0 0 5px 0",
            }
          }
        >
          Prop Types
        </h1>
        <div>
          <h3
            style={
              Object {
                "margin": "20px 0 0 0",
              }
            }
          >
            "
            SmallText
            " Component
          </h3>
          <table
            className="info-table"
          >
            <thead>
              <tr>
                <th>
                  property
                </th>
                <th>
                  propType
                </th>
                <th>
                  required
                </th>
                <th>
                  default
                </th>
                <th>
                  description
                </th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  text
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    string
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  
                </td>
              </tr>
            </tbody>
          </table>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Presentational|Table alt data 1`] = `
<div
  className="nature-graphic"
>
  <div
    className="css-185unfz-StyledTable e3325jj0"
  >
    <table>
      <caption>
        Cases per 10,000 children
      </caption>
      <thead>
        <tr>
          <th>
             
          </th>
          <th
            scope="col"
          >
            Coins
          </th>
          <th
            scope="col"
          >
            Toys
          </th>
          <th
            scope="col"
          >
            Jewelry
          </th>
          <th
            scope="col"
          >
            Batteries
          </th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th
            scope="row"
          >
            1995
          </th>
          <td>
            6.3
          </td>
          <td>
            1.1
          </td>
          <td>
            0.7
          </td>
          <td>
            0.001
          </td>
        </tr>
        <tr>
          <th
            scope="row"
          >
            2015
          </th>
          <td>
            10.5
          </td>
          <td>
            2.1
          </td>
          <td>
            1.5
          </td>
          <td>
            1.5
          </td>
        </tr>
      </tbody>
    </table>
  </div>
</div>
`;

exports[`Storyshots Presentational|Table default 1`] = `
<div
  className="nature-graphic"
>
  <div
    className="css-185unfz-StyledTable e3325jj0"
  >
    <table>
      <caption>
        Y Axis Legend Text
      </caption>
      <thead>
        <tr>
          <th>
             
          </th>
          <th
            scope="col"
          >
            2008
          </th>
          <th
            scope="col"
          >
            2009
          </th>
          <th
            scope="col"
          >
            2010
          </th>
          <th
            scope="col"
          >
            2011
          </th>
          <th
            scope="col"
          >
            2012
          </th>
          <th
            scope="col"
          >
            2013
          </th>
          <th
            scope="col"
          >
            2014
          </th>
          <th
            scope="col"
          >
            2015
          </th>
          <th
            scope="col"
          >
            2016
          </th>
          <th
            scope="col"
          >
            2017
          </th>
          <th
            scope="col"
          >
            2018
          </th>
          <th
            scope="col"
          >
            2019
          </th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th
            scope="row"
          >
            Value A
          </th>
          <td>
            50
          </td>
          <td>
            80
          </td>
          <td>
            110
          </td>
          <td>
            170
          </td>
          <td>
            250
          </td>
          <td>
            380
          </td>
          <td>
            570
          </td>
          <td>
            850
          </td>
          <td>
            1,280
          </td>
          <td>
            1,920
          </td>
          <td>
            2,880
          </td>
          <td>
            4,320
          </td>
        </tr>
        <tr>
          <th
            scope="row"
          >
            Value B
          </th>
          <td>
            40
          </td>
          <td>
            50
          </td>
          <td>
            60
          </td>
          <td>
            100
          </td>
          <td>
            240
          </td>
          <td>
            320
          </td>
          <td>
            400
          </td>
          <td>
            500
          </td>
          <td>
            800
          </td>
          <td>
            2,500
          </td>
          <td>
            3,000
          </td>
          <td>
            3,500
          </td>
        </tr>
        <tr>
          <th
            scope="row"
          >
            Value C
          </th>
          <td>
            30
          </td>
          <td>
            50
          </td>
          <td>
            50
          </td>
          <td>
            100
          </td>
          <td>
            200
          </td>
          <td>
            100
          </td>
          <td>
            200
          </td>
          <td>
            200
          </td>
          <td>
            600
          </td>
          <td>
            1,000
          </td>
          <td>
            2,500
          </td>
          <td>
            2,800
          </td>
        </tr>
        <tr>
          <th
            scope="row"
          >
            Value D
          </th>
          <td>
            20
          </td>
          <td>
            60
          </td>
          <td>
            80
          </td>
          <td>
            200
          </td>
          <td>
            300
          </td>
          <td>
            900
          </td>
          <td>
            1,000
          </td>
          <td>
            2,000
          </td>
          <td>
            2,000
          </td>
          <td>
            1,800
          </td>
          <td>
            2,100
          </td>
          <td>
            2,000
          </td>
        </tr>
        <tr>
          <th
            scope="row"
          >
            Value E
          </th>
          <td>
            10
          </td>
          <td>
            70
          </td>
          <td>
            300
          </td>
          <td>
            500
          </td>
          <td>
            900
          </td>
          <td>
            600
          </td>
          <td>
            1,500
          </td>
          <td>
            1,100
          </td>
          <td>
            1,600
          </td>
          <td>
            3,000
          </td>
          <td>
            3,500
          </td>
          <td>
            2,500
          </td>
        </tr>
      </tbody>
    </table>
  </div>
</div>
`;

exports[`Storyshots Presentational|Toggle button default 1`] = `
<div
  className="nature-graphic"
>
  <button
    aria-checked={false}
    aria-controls="nature-graphic-figure"
    aria-labelledby="toggle-button"
    className="css-11ha9py-ButtonStyled e1mgopq30"
    disabled={false}
    onClick={[Function]}
    role="switch"
  >
    <span
      className="label"
      id="toggle-button"
    >
      Toggle this button
    </span>
    <span
      className="on"
    >
      on
    </span>
    <span
      className="off"
    >
      off
    </span>
  </button>
</div>
`;

exports[`Storyshots Presentational|Toggle button disabled 1`] = `
<div
  className="nature-graphic"
>
  <button
    aria-checked={false}
    aria-controls="nature-graphic-figure"
    aria-labelledby="toggle-button"
    className="css-11ha9py-ButtonStyled e1mgopq30"
    disabled={true}
    onClick={[Function]}
    role="switch"
  >
    <span
      className="label"
      id="toggle-button"
    >
      Toggle this button
    </span>
    <span
      className="on"
    >
      on
    </span>
    <span
      className="off"
    >
      off
    </span>
  </button>
</div>
`;

exports[`Storyshots Presentational|ToggleButton default 1`] = `
<div>
  <div
    id="story-root"
    style={Object {}}
  >
    <div
      className="nature-graphic"
    >
      <button
        aria-checked={false}
        aria-controls="nature-graphic-figure"
        aria-labelledby="toggle-button"
        className="css-11ha9py-ButtonStyled e1mgopq30"
        disabled={false}
        onClick={[Function]}
        role="switch"
      >
        <span
          className="label"
          id="toggle-button"
        >
          Toggle this button
        </span>
        <span
          className="on"
        >
          on
        </span>
        <span
          className="off"
        >
          off
        </span>
      </button>
    </div>
  </div>
  <div>
    <div
      style={
        Object {
          "backgroundColor": "#fff",
          "border": "1px solid #eee",
          "borderRadius": "2px",
          "color": "black",
          "fontFamily": "Helvetica Neue, Helvetica, Segoe UI, Arial, freesans, sans-serif",
          "fontSize": "15px",
          "fontWeight": 300,
          "lineHeight": 1.45,
          "marginBottom": "20px",
          "marginTop": "20px",
          "padding": "20px 40px 40px",
        }
      }
    >
      <div
        style={
          Object {
            "marginBottom": 0,
          }
        }
      >
        <h2
          id="togglebutton"
          style={
            Object {
              "fontSize": "30px",
              "fontWeight": 600,
              "margin": 0,
              "padding": 0,
            }
          }
        >
          ToggleButton
        </h2>
        <div
          style={
            Object {
              "fontSize": "15px",
            }
          }
        >
          Returns a button element with 
          <code>
            role="switch"
          </code>
           with can be used to
set or display a boolean value.
        </div>
      </div>
      <div>
        <h1
          style={
            Object {
              "borderBottom": "1px solid #EEE",
              "fontSize": "25px",
              "margin": "20px 0 0 0",
              "padding": "0 0 5px 0",
            }
          }
        >
          Prop Types
        </h1>
        <div>
          <h3
            style={
              Object {
                "margin": "20px 0 0 0",
              }
            }
          >
            "
            State
            " Component
          </h3>
          <small>
            No propTypes defined!
          </small>
        </div>
        <div>
          <h3
            style={
              Object {
                "margin": "20px 0 0 0",
              }
            }
          >
            "
            ToggleButton
            " Component
          </h3>
          <table
            className="info-table"
          >
            <thead>
              <tr>
                <th>
                  property
                </th>
                <th>
                  propType
                </th>
                <th>
                  required
                </th>
                <th>
                  default
                </th>
                <th>
                  description
                </th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  onClick
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    func
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  checked
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    bool
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  id
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    string
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  Internal id, to associate the label with the button
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  label
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    string
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  Message displayed next to the the button
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  disabled
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    bool
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  controls
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    string
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  id of the dom element that is effected by clicking this button
                </td>
              </tr>
            </tbody>
          </table>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Presentational|ToggleButton disabled 1`] = `
<div>
  <div
    id="story-root"
    style={Object {}}
  >
    <div
      className="nature-graphic"
    >
      <button
        aria-checked={false}
        aria-controls="nature-graphic-figure"
        aria-labelledby="toggle-button"
        className="css-11ha9py-ButtonStyled e1mgopq30"
        disabled={true}
        onClick={[Function]}
        role="switch"
      >
        <span
          className="label"
          id="toggle-button"
        >
          Toggle this button
        </span>
        <span
          className="on"
        >
          on
        </span>
        <span
          className="off"
        >
          off
        </span>
      </button>
    </div>
  </div>
  <div>
    <div
      style={
        Object {
          "backgroundColor": "#fff",
          "border": "1px solid #eee",
          "borderRadius": "2px",
          "color": "black",
          "fontFamily": "Helvetica Neue, Helvetica, Segoe UI, Arial, freesans, sans-serif",
          "fontSize": "15px",
          "fontWeight": 300,
          "lineHeight": 1.45,
          "marginBottom": "20px",
          "marginTop": "20px",
          "padding": "20px 40px 40px",
        }
      }
    >
      <div
        style={
          Object {
            "marginBottom": 0,
          }
        }
      >
        <h2
          id="togglebutton"
          style={
            Object {
              "fontSize": "30px",
              "fontWeight": 600,
              "margin": 0,
              "padding": 0,
            }
          }
        >
          ToggleButton
        </h2>
        <div
          style={
            Object {
              "fontSize": "15px",
            }
          }
        >
          Returns a button element with 
          <code>
            role="switch"
          </code>
           with can be used to
set or display a boolean value.
        </div>
      </div>
      <div>
        <h1
          style={
            Object {
              "borderBottom": "1px solid #EEE",
              "fontSize": "25px",
              "margin": "20px 0 0 0",
              "padding": "0 0 5px 0",
            }
          }
        >
          Prop Types
        </h1>
        <div>
          <h3
            style={
              Object {
                "margin": "20px 0 0 0",
              }
            }
          >
            "
            State
            " Component
          </h3>
          <small>
            No propTypes defined!
          </small>
        </div>
        <div>
          <h3
            style={
              Object {
                "margin": "20px 0 0 0",
              }
            }
          >
            "
            ToggleButton
            " Component
          </h3>
          <table
            className="info-table"
          >
            <thead>
              <tr>
                <th>
                  property
                </th>
                <th>
                  propType
                </th>
                <th>
                  required
                </th>
                <th>
                  default
                </th>
                <th>
                  description
                </th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  onClick
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    func
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  checked
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    bool
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  id
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    string
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  Internal id, to associate the label with the button
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  label
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    string
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  Message displayed next to the the button
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  disabled
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    bool
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  controls
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    string
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  id of the dom element that is effected by clicking this button
                </td>
              </tr>
            </tbody>
          </table>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Presentational|Tooltip align left-bottom 1`] = `
<div
  className="nature-graphic"
>
  <figure
    className="css-hhdeyp-StyledFigure eq56dg90"
  >
    <div
      aria-hidden={true}
      className="left-bottom  css-1pav4sj-StyledTooltip e1ui8cgb0"
      style={
        Object {
          "left": 300,
          "top": 150,
        }
      }
    >
      <p>
        Align left top
      </p>
    </div>
    <svg
      aria-hidden={true}
      focusable={false}
      height="300px"
      viewBox="0 0 600 300"
      width="600px"
    >
      <circle
        cx={300}
        cy={150}
        r={5}
      />
    </svg>
  </figure>
</div>
`;

exports[`Storyshots Presentational|Tooltip align left-top 1`] = `
<div
  className="nature-graphic"
>
  <figure
    className="css-hhdeyp-StyledFigure eq56dg90"
  >
    <div
      aria-hidden={true}
      className="left-top  css-1pav4sj-StyledTooltip e1ui8cgb0"
      style={
        Object {
          "left": 300,
          "top": 150,
        }
      }
    >
      <p>
        Align left top
      </p>
    </div>
    <svg
      aria-hidden={true}
      focusable={false}
      height="300px"
      viewBox="0 0 600 300"
      width="600px"
    >
      <circle
        cx={300}
        cy={150}
        r={5}
      />
    </svg>
  </figure>
</div>
`;

exports[`Storyshots Presentational|Tooltip align right-bottom 1`] = `
<div
  className="nature-graphic"
>
  <figure
    className="css-hhdeyp-StyledFigure eq56dg90"
  >
    <div
      aria-hidden={true}
      className="right-bottom  css-1pav4sj-StyledTooltip e1ui8cgb0"
      style={
        Object {
          "left": 300,
          "top": 150,
        }
      }
    >
      <p>
        Align left top
      </p>
    </div>
    <svg
      aria-hidden={true}
      focusable={false}
      height="300px"
      viewBox="0 0 600 300"
      width="600px"
    >
      <circle
        cx={300}
        cy={150}
        r={5}
      />
    </svg>
  </figure>
</div>
`;

exports[`Storyshots Presentational|Tooltip align right-top 1`] = `
<div
  className="nature-graphic"
>
  <figure
    className="css-hhdeyp-StyledFigure eq56dg90"
  >
    <div
      aria-hidden={true}
      className="right-top  css-1pav4sj-StyledTooltip e1ui8cgb0"
      style={
        Object {
          "left": 300,
          "top": 150,
        }
      }
    >
      <p>
        Align left top
      </p>
    </div>
    <svg
      aria-hidden={true}
      focusable={false}
      height="300px"
      viewBox="0 0 600 300"
      width="600px"
    >
      <circle
        cx={300}
        cy={150}
        r={5}
      />
    </svg>
  </figure>
</div>
`;

exports[`Storyshots Presentational|Tooltip default 1`] = `
<div
  className="nature-graphic"
>
  <figure
    className="css-hhdeyp-StyledFigure eq56dg90"
  >
    <div
      aria-hidden={true}
      className="middle-bottom  css-1pav4sj-StyledTooltip e1ui8cgb0"
      style={
        Object {
          "left": 300,
          "top": 150,
        }
      }
    >
      <p>
        Align middle-bottom
      </p>
    </div>
    <svg
      aria-hidden={true}
      focusable={false}
      height="300px"
      viewBox="0 0 600 300"
      width="600px"
    >
      <circle
        cx={300}
        cy={150}
        r={5}
      />
    </svg>
  </figure>
</div>
`;

exports[`Storyshots Presentational|Tooltip long text 1`] = `
<div
  className="nature-graphic"
>
  <figure
    className="css-hhdeyp-StyledFigure eq56dg90"
  >
    <div
      aria-hidden={true}
      className="middle-bottom  css-1pav4sj-StyledTooltip e1ui8cgb0"
      style={
        Object {
          "left": 300,
          "top": 240,
        }
      }
    >
      <p>
        Lorem, ipsum dolor sit amet consectetur adipisicing elit. Culpa libero voluptate maiores alias nulla nihil ad ducimus. Accusantium at nam, corrupti voluptatibus dolor et consectetur eaque quos ipsa, nostrum repudiandae?
      </p>
    </div>
    <svg
      aria-hidden={true}
      focusable={false}
      height="300px"
      viewBox="0 0 600 300"
      width="600px"
    >
      <circle
        cx={300}
        cy={240}
        r={5}
      />
    </svg>
  </figure>
</div>
`;

exports[`Storyshots Presentational|Tooltip multi paragraph 1`] = `
<div
  className="nature-graphic"
>
  <figure
    className="css-hhdeyp-StyledFigure eq56dg90"
  >
    <div
      aria-hidden={true}
      className="middle-bottom  css-1pav4sj-StyledTooltip e1ui8cgb0"
      style={
        Object {
          "left": 300,
          "top": 150,
        }
      }
    >
      <p
        className="bold"
      >
        Tool tip text
      </p>
      <p>
        Tool tip text
      </p>
    </div>
    <svg
      aria-hidden={true}
      focusable={false}
      height="300px"
      viewBox="0 0 600 300"
      width="600px"
    >
      <circle
        cx={300}
        cy={150}
        r={5}
      />
    </svg>
  </figure>
</div>
`;

exports[`Storyshots Presentational|Tooltip multiple paragraphs 1`] = `
<div>
  <div
    id="story-root"
    style={Object {}}
  >
    <div
      className="nature-graphic"
    >
      <figure
        className="css-hhdeyp-StyledFigure eq56dg90"
      >
        <div
          aria-hidden={true}
          className="middle-bottom  css-1pav4sj-StyledTooltip e1ui8cgb0"
          style={
            Object {
              "left": 300,
              "top": 150,
            }
          }
        >
          <p>
            <strong>
              Lorem:
            </strong>
             3,000
          </p>
          <p>
            <strong>
              Ipsum:
            </strong>
             1.0
          </p>
          <p>
            <strong>
              Dolor:
            </strong>
             50%
          </p>
        </div>
        <svg
          aria-hidden={true}
          focusable={false}
          height="300px"
          viewBox="0 0 600 300"
          width="600px"
        >
          <circle
            cx={300}
            cy={150}
            r={5}
          />
        </svg>
      </figure>
    </div>
  </div>
  <div>
    <div
      style={
        Object {
          "backgroundColor": "#fff",
          "border": "1px solid #eee",
          "borderRadius": "2px",
          "color": "black",
          "fontFamily": "Helvetica Neue, Helvetica, Segoe UI, Arial, freesans, sans-serif",
          "fontSize": "15px",
          "fontWeight": 300,
          "lineHeight": 1.45,
          "marginBottom": "20px",
          "marginTop": "20px",
          "padding": "20px 40px 40px",
        }
      }
    >
      <div
        style={
          Object {
            "marginBottom": 0,
          }
        }
      >
        <h2
          id="tooltip"
          style={
            Object {
              "fontSize": "30px",
              "fontWeight": 600,
              "margin": 0,
              "padding": 0,
            }
          }
        >
          Tooltip
        </h2>
        <div
          style={
            Object {
              "fontSize": "15px",
            }
          }
        >
          Returns as div element to function as a tooltip
that can be absolutely positioned over chart elements.
        </div>
      </div>
      <div>
        <h1
          style={
            Object {
              "borderBottom": "1px solid #EEE",
              "fontSize": "25px",
              "margin": "20px 0 0 0",
              "padding": "0 0 5px 0",
            }
          }
        >
          Prop Types
        </h1>
        <div>
          <h3
            style={
              Object {
                "margin": "20px 0 0 0",
              }
            }
          >
            "
            Tooltip
            " Component
          </h3>
          <table
            className="info-table"
          >
            <thead>
              <tr>
                <th>
                  property
                </th>
                <th>
                  propType
                </th>
                <th>
                  required
                </th>
                <th>
                  default
                </th>
                <th>
                  description
                </th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  transition
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    bool
                  </span>
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  <span>
                    true
                  </span>
                </td>
                <td
                  className={null}
                >
                  If false the opactity transition will not be applied
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  children
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    node
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  x
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    number
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  Horizontal position
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  y
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    number
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  Vertical position
                </td>
              </tr>
              <tr>
                <td
                  className="info-table-monospace"
                >
                  alignment
                </td>
                <td
                  className="info-table-monospace"
                >
                  <span>
                    oneOf "right-bottom" | "right-top" | "left-bottom" | "left-top" | "middle-bottom"
                  </span>
                </td>
                <td
                  className={null}
                >
                  yes
                </td>
                <td
                  className={null}
                >
                  -
                </td>
                <td
                  className={null}
                >
                  <span>
                     
                    CSS classname used to translate positon of
                  </span>
                  <span>
                    <br />
                     
                    tooltip.
                  </span>
                </td>
              </tr>
            </tbody>
          </table>
        </div>
      </div>
    </div>
  </div>
</div>
`;
